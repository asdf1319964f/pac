[{"last_chapter_rule":"","title":"中文转拼音","author":"道长","version":0,"type":"tool","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"工具","year_url":"","find_rule":"js:\neval(JSON.parse(fetch('hiker://page/homeIndex')).rule);","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"setItem('myApp', MY_RULE.title);\ninitConfig({\n  插件:'http://hiker.nokia.press/hikerule/rulelist.json?id=3230',\n  字典1:'https://gitlab.com/hjdhnx/hiker/-/raw/main/js/pinyin_dict_withtone.js',\n});","pages":"[{\"col_type\":\"movie_3\",\"name\":\"主页\",\"path\":\"homeIndex\",\"rule\":\"js:\\nlet d = [];\\nconst {color,small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\nlet options = ['带声调','不带声调','首字母','多音字'];\\nfor(let i in options){\\n    let it = options[i];\\n    d.push({\\n        title:(it===getMyVar('option','不带声调'))||(it==='多音字'&&getMyVar('多音字',''))?color(it,'#23a309'):it,\\n        col_type:'scroll_button',\\n        url:$('#noLoading#').lazyRule((it)=>{\\n            if(it==='多音字'){\\n                let flag = getMyVar('多音字','')?'':'是';\\n                putMyVar('多音字',flag);\\n            }else{\\n                putMyVar('option',it);\\n            }\\n            refreshPage(false);\\n            return 'hiker://empty'\\n        },it)\\n    });\\n}\\n\\nd.push({\\n    title:'转换',\\n    col_type:'input',\\n    extra:{\\n        onChange: \\\"putMyVar('input',input)\\\",\\n        titleVisible: true,\\n        textSize: 13,\\n        type: \\\"textarea\\\",\\n        height:-1,\\n        defaultValue:getMyVar('input',''),\\n    },\\n    url:$.toString(()=>{\\n        require(config.字典1);\\n        require(config.插件);\\n        let option = getMyVar('option','不带声调');\\n        let input = getMyVar('input','');\\n        let ret = '';\\n        let 多音字 = !!getMyVar('多音字','');\\n        switch (option){\\n            case '带声调':\\n                ret = pinyinUtil.getPinyin(input, ' ', true, 多音字);\\n                break;\\n            case '不带声调':\\n                ret = pinyinUtil.getPinyin(input, ' ', false, 多音字);\\n                break;\\n            case '首字母':\\n                ret = pinyinUtil.getFirstLetter(input, 多音字);\\n                break;\\n            default:\\n                ret = pinyinUtil.getPinyin(input, ' ', false, 多音字);\\n                break;\\n        }\\n        log(ret);\\n        putMyVar('out',ret);\\n        refreshPage(false);\\n        return 'toast://转换完毕'\\n    }),\\n})\\n\\nd.push({\\n    title:'复制',\\n    col_type:'input',\\n    desc:'转换后结果',\\n    url:$.toString(()=>{\\n        let ret = getMyVar('out','');\\n        if(ret){\\n            copy(ret);\\n            return 'hiker://empty'\\n        }else{\\n            return 'toast://无结果!'\\n        }\\n    }),\\n    extra:{\\n        onChange: \\\"putMyVar('out',input)\\\",\\n        titleVisible: true,\\n        textSize: 13,\\n        type: \\\"textarea\\\",\\n        height:-1,\\n        defaultValue:getMyVar('out',''),\\n    }\\n});\\n\\nsetResult(d);\"}]","icon":"https://lanmeiguojiang.com/tubiao/messy/17.svg"},{"last_chapter_rule":"","title":"判断论坛登录","author":"道长","version":2,"type":"tool","url":"hiker://empty##https://haikuoshijie.cn/","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"工具","year_url":"","find_rule":"js:\nevalPrivateJS('4ZFai6WdmDyH6oz/nhtVROAIx1c0dRGZtfmf6PyWCr6dHnPVIOLddKI4gXInyEoixmC+cyqM8V/plDjccHPKYdMRRu3DLjeWtkw/W5GbPWQVKdbbEohqdTqYxEM0KWdh');\nMY_URL=MY_URL.split('##')[1];\nrequire(config.模板);\nlet ck_id='cookie.hikerbbs';\nlet cookie=获取ck(ck_id);\nlog('论坛cookie:'+cookie);\nputMyVar('cookie',cookie);\nvar html=获取源码(MY_URL);\n//log('源码:'+html);\nif(/退出登录/.test(html)){\nsetResult([{\ntitle:'已成功登录论坛，点此访问',\ncol_type:'text_1',\nurl:MY_URL\n}]);\n}else{\n  道长验证码(null,MY_URL,'',ck_id);\n}","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"text_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://gitlab.com/hjdhnx/hiker/-/raw/main/js/预处理.js');","pages":"[]","icon":"https://lanmeiguojiang.com/tubiao/messy/18.svg"},{"last_chapter_rule":"","title":"选择器语法.m","author":"道长","version":1,"type":"other","url":"hiker://empty##https://juejin.cn/post/6844904002103050254#11-id选择器","col_type":"movie_3","class_name":"向上滑动即可播放","class_url":"资源加载可能比较慢","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL=MY_URL.split(\"##\")[1];\n/** 无需下载APP，点返回即可。*/\nrequire(config.模板);\nsetResult([{\n    col_type: \"x5_webview_single\",\n    url: MY_URL,\n    desc: \"float&&100%\",\n    extra: {\n        canBack: true,\n       // js:注入()\n    }\n}])","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"const {getApi} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\nvar 模板 = getApi('importUrl')+\"2505\";\nrequire(模板);\n预处理()","pages":"[]","icon":"https://lanmeiguojiang.com/tubiao/messy/15.svg"},{"last_chapter_rule":"","title":"加解密工具.RR","author":"Rx&Reborn&@LoyDgIk","version":8,"url":"hiker://empty#fyAll","col_type":"rich_text","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst {\n    header\n} = $.require(\"hiker://page/classicHeader\");\nconst {\n    setEncodePage\n} = $.require(\"hiker://page/encode\");\nconst {\n    setCryptoPage\n} = $.require(\"hiker://page/crypto\");\nconst {\n    setHashPage\n} = $.require(\"hiker://page/hash\");\n// const { Crypto } = $.require(\"hiker://page/aes\");\n/**\n * 1. 引入算法依赖\n */\nconst {\n    buddha\n} = $.require(\"hiker://page/buddha\");\nconst {\n    unicode\n} = $.require(\"hiker://page/unicode\");\nconst {\n    base64\n} = $.require(\"hiker://page/base64\");\nconst {\n    ascii\n} = $.require(\"hiker://page/ascii\");\nconst {\n    hex\n} = $.require(\"hiker://page/hex\");\n\nlet ruleTitle = MY_RULE.title;\naddListener('onClose', $.toString((header, ruleTitle) => {\n    putVar(\"encode-text\", \"\");\n    putVar(\"decode-text\", \"\");\n    header.onClose();\n    let Crypto = $.require(\"hiker://page/aes?rule=\" + ruleTitle);\n    Crypto.onClose();\n}, header, ruleTitle))\n\nlet d = [];\nd.push({\n    desc: \"0\",\n    col_type: \"x5_webview_single\"\n})\nlet classic = {\n    \"编码转换\": [\"佛曰\", \"Unicode\", \"Base64\", \"ASCII\", \"Hex\"],\n    \"加密/解密\": [{\n            \"对称加密\": [\"AES\", \"DES\"]\n        },\n        {\n            \"非对称加密\": [\"RSA\"]\n        }\n    ],\n  \"散列/哈希\": [\n\t \"MD5\",\n\t{\"SHA\": [\"SHA-1\", \"\", \"\", \"\", \"\", \"SHA3-512\"]},\n\t{\"HMAC\": [\"HMAC-MD5\",\"HMAC-SHA1\",\"HMAC-SHA224\", \"HMAC-SHA256\", \"HMAC-SHA384\", \"HMAC-SHA512\"]}\n  ]\n}\nd = header.get(classic)\nvar type = header.getCurrentIndex();\n\n/**\n * 2. 在 tools 加入键值对，用于映射算法，格式为 分类中的替换值（即 fyAll 的值）: 引入的算法依赖的对象名\n */\nvar obj = {\n    ruleTitle: ruleTitle,\n    type: type,\n    tools: {\n        \"佛曰\": buddha,\n        \"Unicode\": unicode,\n        \"Base64\": base64,\n        \"ASCII\": ascii,\n        \"Hex\": hex,\n        // \"AES\": Crypto.AES,\n        // \"DES\": Crypto.DES,\n    },\n}\n\n/**\n * 3. 添加子页面写自己的算法，模板请参考“算法模板”这个子页面或已有的子页面\n * \n * 注：此备注后的所有代码各位都不需要动\n */\nif (obj.type.includes(\"编码转换\")) {\n    setEncodePage(d, obj);\n} else if (obj.type.includes(\"加密/解密\")) {\n    setCryptoPage(d, obj);\n} else if (obj.type.includes(\"散列/哈希\")){\n    setHashPage(d, obj);\n}\nsetResult(d)","searchFind":"","search_url":"","titleColor":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"佛曰\",\"path\":\"buddha\",\"rule\":\"js:\\nlet buddha = {};\\nbuddha.encode = function(obj) {\\n    // log(\\\"[buddha]obj.decText: \\\" + obj.decText)\\n    let encode = request('http://hi.pcmoe.net/bear.php', {\\n        headers: {\\n            'X-Token': '07B97AA644E8',\\n            'Origin': 'http://hi.pcmoe.net',\\n            'X-Requested-With': 'XMLHttpRequest',\\n            'User-Agent': 'Mozilla/5.0 (Linux; Android 10; Note9 Build/QKQ1.191222.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045614 Mobile Safari/537.36',\\n            'Content-type': 'application/x-www-form-urlencoded',\\n            'Referer': 'http://hi.pcmoe.net/buddha.html'\\n        },\\n        body: 'mode=Buddha&code=Encode&txt=' + obj.decText,\\n        method: 'POST'\\n    });\\n    // log(\\\"[buddha]encode: \\\" + encode)\\n    return encode;\\n}\\nbuddha.decode = function(obj) {\\n    let decode = request('http://hi.pcmoe.net/bear.php', {\\n        headers: {\\n            'X-Token': '07B97AA644E8',\\n            'Origin': 'http://hi.pcmoe.net',\\n            'X-Requested-With': 'XMLHttpRequest',\\n            'User-Agent': 'Mozilla/5.0 (Linux; Android 10; Note9 Build/QKQ1.191222.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045614 Mobile Safari/537.36',\\n            'Content-type': 'application/x-www-form-urlencoded',\\n            'Referer': 'http://hi.pcmoe.net/buddha.html'\\n        },\\n        body: 'mode=Buddha&code=Decode&txt=' + obj.encText,\\n        method: 'POST'\\n    });\\n    return decode;\\n}\\n$.exports.buddha = buddha\"},{\"col_type\":\"text_1\",\"name\":\"Unicode\",\"path\":\"unicode\",\"rule\":\"js:\\nlet unicode = {};\\nunicode.encode = function(obj) {\\n    let encode = escape(obj.decText.replace(/%u/g, \\\"\\\\\\\\u\\\"));\\n    return encode;\\n}\\nunicode.decode = function(obj) {\\n    let decode = unescape(obj.encText.replace(/\\\\\\\\u/g, \\\"%u\\\"));\\n    return decode;\\n}\\n$.exports.unicode = unicode\"},{\"col_type\":\"text_1\",\"name\":\"Base64\",\"path\":\"base64\",\"rule\":\"js:\\nlet base64 = {};\\nbase64.encode = function(obj) {\\n    // let encode = encodeURIComponent(base64Encode(obj.decText));\\n    let encode = base64Encode(obj.decText);\\n    return encode;\\n}\\nbase64.decode = function(obj) {\\n    let decode = decodeURIComponent(base64Decode(obj.encText));\\n    return decode;\\n}\\n$.exports.base64 = base64\"},{\"col_type\":\"text_1\",\"name\":\"ASCII\",\"path\":\"ascii\",\"rule\":\"js:\\nlet ascii = {};\\nascii.unicode1 = function(str) {\\n    var value = '';\\n    for (var i = 0; i < str.length; i++) {\\n        value = value + '&#' + str.charCodeAt(i) + ';';\\n    }\\n    return value;\\n}\\nascii.reconvert = function(str) {\\n    str = str.replace(/(\\\\\\\\u)(\\\\w{1,4})/gi, function($0) {\\n        return (String.fromCharCode(parseInt((escape($0).replace(/(%5Cu)(\\\\w{1,4})/g, \\\"$2\\\")), 16)));\\n    });\\n    str = str.replace(/(&#x)(\\\\w{1,4});/gi, function($0) {\\n        return String.fromCharCode(parseInt(escape($0).replace(/(%26%23x)(\\\\w{1,4})(%3B)/g, \\\"$2\\\"), 16));\\n    });\\n    str = str.replace(/(&#)(\\\\d{1,6});/gi, function($0) {\\n        return String.fromCharCode(parseInt(escape($0).replace(/(%26%23)(\\\\d{1,6})(%3B)/g, \\\"$2\\\")));\\n    });\\n\\n    return str;\\n}\\n// $.exports.unicode1 = unicode1;\\n// $.exports.reconvert = reconvert;\\nascii.encode = function(obj) {\\n    let encode = this.unicode1(obj.decText);\\n    return encode;\\n}\\nascii.decode = function(obj) {\\n    let decode = this.reconvert(obj.encText);\\n    return decode;\\n}\\n$.exports.ascii = ascii;\"},{\"col_type\":\"text_1\",\"name\":\"获取分类头部\",\"path\":\"classicHeader\",\"rule\":\"js:\\nlet d = [];\\n\\nfunction putKeyIntoMap(key, value) {\\n    const keyMap = JSON.parse(getVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\")+\\\"_all_key_Map\\\"), \\\"{}\\\"));\\n    keyMap[key] = value;\\n    putVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\"), JSON.stringify(keyMap));\\n}\\n\\nfunction getHeaderFromJSONObject(obj) {\\n    for (let key in obj) {\\n        d.push({\\n            title: key == getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\"), Object.keys(obj)[0]) ? \\\"““\\\" + key + \\\"””\\\" : key,\\n            url: $(\\\"#noLoading#\\\").lazyRule((key) => {\\n                putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\"), key);\\n                putVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_cur_index\\\"), key);\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\"\\n            }, key),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    d.push({\\n        col_type: \\\"blank_block\\\"\\n    });\\n    let key = getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\"), Object.keys(obj)[0]);\\n    putVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_cur_index\\\"), key);\\n    getNextHeaderFromJSONArray(key, obj[key]);\\n    return d;\\n}\\n\\nfunction getNextHeaderFromJSONArray(key, array) {\\n    if (array == undefined || array.length == 0) {\\n        return;\\n    }\\n    let nextHeader = {};\\n    let defaultValue = \\\"\\\";\\n    defaultValue = array[0];\\n    if (Object.prototype.toString.call(array[0]) === '[object Object]') {\\n        defaultValue = Object.keys(array[0])[0];\\n    }\\n    putKeyIntoMap((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key), getVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key), defaultValue))\\n    putVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_cur_index\\\"), key + \\\"@@\\\" + getVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key), defaultValue));\\n    for (let value of array) {\\n        if (Object.prototype.toString.call(value) === '[object Object]') {\\n            // log(\\\"valueKeys: \\\"+JSON.stringify(Object.keys(value)[0]))\\n            let valueKey = Object.keys(value)[0];\\n            d.push({\\n                title: valueKey == getVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key), defaultValue) ? \\\"““\\\" + valueKey + \\\"””\\\" : valueKey,\\n                url: $(\\\"#noLoading#\\\").lazyRule((valueKey, key) => {\\n                    function putKeyIntoMap(key, value) {\\n                        const keyMap = JSON.parse(getVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\"), \\\"{}\\\"));\\n                        keyMap[key] = value;\\n                        putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\", JSON.stringify(keyMap));\\n                    }\\n                    putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, valueKey);\\n                    putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_cur_index\\\", key + \\\"@@\\\" + valueKey);\\n                    putKeyIntoMap(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, \\\"defaultValue\\\"))\\n                    refreshPage(false);\\n                    return \\\"hiker://empty\\\"\\n                }, valueKey, key),\\n                col_type: \\\"scroll_button\\\"\\n            });\\n            nextHeader[valueKey] = value[valueKey];\\n        } else {\\n            d.push({\\n                title: value == getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, defaultValue) ? \\\"““\\\" + value + \\\"””\\\" : value,\\n                url: $(\\\"#noLoading#\\\").lazyRule((value, key) => {\\n                    function putKeyIntoMap(key, value) {\\n                        const keyMap = JSON.parse(getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\", \\\"{}\\\"));\\n                        keyMap[key] = value;\\n                        putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\", JSON.stringify(keyMap));\\n                    }\\n                    putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, value);\\n                    putKeyIntoMap(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, \\\"defaultValue\\\"))\\n                    putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_cur_index\\\", key + \\\"@@\\\" + value);\\n                    refreshPage(false);\\n                    return \\\"hiker://empty\\\"\\n                }, value, key),\\n                col_type: \\\"scroll_button\\\"\\n            });\\n        }\\n    }\\n\\n    d.push({\\n        col_type: \\\"blank_block\\\"\\n    });\\n    if (nextHeader !== undefined && nextHeader.length != 0) {\\n        getNextHeaderFromJSONArray(key + \\\"@@\\\" + getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, defaultValue), nextHeader[getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, defaultValue)]);\\n    }\\n}\\n\\nlet header = {\\n    /**\\n     * 可自定义当前分类头部 id（其实没啥用，就是为了调试不同规则区分一下而已）\\n     */\\n    setId: function(id) {\\n\\t      putVar(\\\"ClassicHeader.id\\\", id)\\n    },\\n    getId: function() {\\n\\t      return getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\");\\n    },\\n    /**\\n     * 获取分类头部，返回视界 setResult 用的数组\\n     */\\n    get: function(obj) {\\n        let result = getHeaderFromJSONObject(obj);\\n        //log(\\\"【子页面】\\\" + JSON.stringify(result))\\n        return result;\\n    },\\n    /**\\n      * 页面关闭时需要注册的生命周期，引入依赖后在 addListener 中调用即可\\n      * 例：\\n         const { header } = $.require(\\\"hiker://page/classicHeader\\\");\\n         addListener(\\\"onClose\\\", $.toString((header) => {\\n          header.onClose();\\n        }, header));\\n      */\\n    onClose: function() {\\n        // putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"\\\", \\\"编码\\\");\\n        // putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@编码\\\", \\\"佛曰\\\");\\n        let allKeyArr = Object.keys(JSON.parse(getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\", \\\"{}\\\")));\\n        for (let i in allKeyArr) {\\n            clearVar(allKeyArr[i]);\\n            // log(\\\"【清理后】\\\"+ allKeyArr[i] + \\\": \\\"+JSON.stringify(getVar(allKeyArr[i], \\\"\\\")))\\n        }\\n        clearVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\"))\\n        clearVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\")\\n        clearVar(\\\"ClassicHeader.id\\\")\\n    },\\n    /**\\n     * 获取当前已选多级分类，返回的数据格式为：一级分类@@二级分类@@...，可自行做映射获取 url\\n     */\\n    getCurrentIndex: function() {\\n        return getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_cur_index\\\", \\\"\\\");\\n    }\\n}\\n$.exports.header = header\"},{\"col_type\":\"text_1\",\"name\":\"编码类页面\",\"path\":\"encode\",\"rule\":\"js:\\nfunction setEncodePage(d, obj) {\\n    d.push({\\n    title: \\\"编码\\\",\\n    desc: \\\"请输入原文\\\",\\n    col_type: 'input',\\n    extra: {\\n        // titleVisible: false,\\n        defaultValue: getVar(\\\"decode-text\\\", \\\"\\\"),\\n        type: \\\"textarea\\\",\\n        onChange: 'putVar(\\\"decode-text\\\",input)'\\n    },\\n    url: $.toString((obj) => {\\n        obj.decText = input;\\n        // log(\\\"obj.decText: \\\" + obj.decText)\\n        var encode = \\\"\\\";\\n        var tool = {};\\n        for (let key in obj.tools) {\\n            if (obj.type.includes(key)) {\\n                tool = obj.tools[key];\\n                break;\\n            }\\n        }\\n        encode = tool.encode(obj);\\n        // log(\\\"encode: \\\" + encode)\\n        putVar('encode-text', encode);\\n        refreshPage();\\n        return 'toast://加密成功';\\n    }, obj),\\n});\\n\\nd.push({\\n    title: \\\"解码\\\",\\n    desc: \\\"请输入密文\\\",\\n    col_type: 'input',\\n    extra: {\\n        // titleVisible: false,\\n        defaultValue: getVar(\\\"encode-text\\\", \\\"\\\"),\\n        type: \\\"textarea\\\",\\n        onChange: 'putVar(\\\"encode-text\\\",input)'\\n    },\\n    url: $.toString((obj) => {\\n        obj.encText = input;\\n        // log(\\\"obj.encText: \\\" + obj.encText)\\n        var decode = \\\"\\\";\\n        var tool = {};\\n        for (let key in obj.tools) {\\n            if (obj.type.includes(key)) {\\n                tool = obj.tools[key];\\n                break;\\n            }\\n        }\\n        decode = tool.decode(obj);\\n        putVar('decode-text', decode);\\n        refreshPage();\\n        return 'toast://解密成功';\\n    }, obj),\\n});\\n  \\nd.push({\\n    title: '清空原文',\\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\\n    url: \\\"hiker://empty#noLoading#\\\" + \\\"@lazyRule=.js:putVar('decode-text', '');refreshPage();'toast://清空成功'\\\",\\n    col_type: 'icon_2'\\n});\\n\\nd.push({\\n    title: '清空密文',\\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\\n    url: \\\"hiker://empty#noLoading#\\\" + \\\"@lazyRule=.js:putVar('encode-text', '');refreshPage();'toast://清空成功'\\\",\\n    col_type: 'icon_2'\\n});\\n\\nd.push({\\n    title: '复制原文',\\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule(() => {\\n        var dec = getVar(\\\"decode-text\\\");\\n        if (dec) {\\n            return \\\"copy://\\\" + dec;\\n        } else {\\n            return \\\"toast://内容为空！\\\"\\n        }\\n    }),\\n    col_type: 'icon_2'\\n});\\n\\nd.push({\\n    title: '复制密文',\\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule(() => {\\n        var enc = getVar(\\\"encode-text\\\");\\n        if (enc) {\\n            return \\\"copy://\\\" + enc;\\n        } else {\\n            return \\\"toast://内容为空！\\\"\\n        }\\n    }),\\n    col_type: 'icon_2'\\n});\\n}\\n$.exports.setEncodePage = setEncodePage\"},{\"col_type\":\"text_1\",\"name\":\"加密类页面\",\"path\":\"crypto\",\"rule\":\"js:\\n// const { ConfigMapping } = $.require(\\\"hiker://page/aes\\\");\\n// log(JSON.stringify(Object.keys(Crypto.ConfigMapping)))\\nconst { buildAESUi } = $.require(\\\"hiker://page/aesui\\\");\\nconst { buildRSAUi } = $.require(\\\"hiker://page/rsaui\\\");\\nfunction setCryptoPage(d, obj) {\\n    if (obj.type.includes(\\\"对称加密\\\") && !obj.type.includes(\\\"非对称加密\\\")) {\\n        buildAESUi(d, obj)\\n    } else if (obj.type.includes(\\\"非对称加密\\\")) {\\n        buildRSAUi(d, obj)\\n    }\\n}\\n$.exports.setCryptoPage = setCryptoPage\"},{\"col_type\":\"text_1\",\"name\":\"AES\",\"path\":\"aes\",\"rule\":\"js:\\neval(getCryptoJS());\\nlet Crypto = {\\n    ConfigMapping: {\\n        encType: {\\n            \\\"AES\\\": CryptoJS.AES.encrypt,\\n            \\\"DES\\\": CryptoJS.DES.encrypt,\\n        },\\n        decType: {\\n            \\\"AES\\\": CryptoJS.AES.decrypt,\\n            \\\"DES\\\": CryptoJS.DES.decrypt,\\n        },\\n        mode: {\\n            \\\"CBC\\\": CryptoJS.mode.CBC,\\n            \\\"ECB\\\": CryptoJS.mode.ECB,\\n            \\\"CFB\\\": CryptoJS.mode.CFB,\\n            \\\"CTR\\\": CryptoJS.mode.CTR,\\n            \\\"OFB\\\": CryptoJS.mode.OFB\\n        },\\n        pad: {\\n            \\\"Pkcs7\\\": CryptoJS.pad.Pkcs7,\\n            \\\"ZeroPadding\\\": CryptoJS.pad.ZeroPadding,\\n            \\\"NoPadding\\\": CryptoJS.pad.NoPadding,\\n            \\\"Iso97971\\\": CryptoJS.pad.Iso97971,\\n            \\\"\\\": CryptoJS.pad.,\\n            \\\"Iso10126\\\": CryptoJS.pad.Iso10126,\\n        },\\n        encode: {\\n            \\\"Base64\\\": \\\"Base64\\\",\\n            \\\"HEX\\\": \\\"HEX\\\"\\n        },\\n        blockSize: {\\n            \\\"AES\\\": {\\n                \\\"AES-128\\\": 128,\\n                \\\"AES-192\\\": 192,\\n                \\\"AES-256\\\": 256,\\n            }\\n        },\\n        keyEncodeType: {\\n            \\\"UTF-8\\\": \\\"UTF-8\\\",\\n            \\\"Hex\\\": \\\"Hex\\\"\\n        },\\n        ivEncodeType: {\\n            \\\"UTF-8\\\": \\\"UTF-8\\\",\\n            \\\"Hex\\\": \\\"Hex\\\"\\n        }\\n    },\\n    config: {\\n        type: {\\n            key: \\\"crypto_type\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"AES\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        mode: {\\n            key: \\\"crypto_select_mode\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"CBC\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        pad: {\\n            key: \\\"crypto_select_pad\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"Pkcs7\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        iv: {\\n            key: \\\"crypto_input_iv\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        encode: {\\n            key: \\\"crypto_output_encode\\\",\\n            get: function () {\\n                return getVar(this.key, Crypto.ConfigMapping.encode[\\\"Base64\\\"])\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        key: {\\n            key: \\\"crypto_key\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        text: {\\n            key: \\\"crypto_text\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        cipherText: {\\n            key: \\\"crypto_cipher_text\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        blockSize: {\\n            key: \\\"crypto_block_size\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"AES-128\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n\\n        },\\n        keyEncodeType: {\\n            key: \\\"crypto_key_encode_type\\\",\\n            get: function () {\\n                // TODO 此处不知为何 Crypto.ConfigMapping.keyEncodeType[\\\"UTF-8\\\"] 会报 Crypto undefined\\n                return getVar(this.key, \\\"UTF-8\\\")\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        ivEncodeType: {\\n            key: \\\"crypto_iv_encode_type\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"UTF-8\\\")\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n    },\\n    onClose: function() {\\n        let configKeys = Object.keys(this.config);\\n        for(let confKey of configKeys) {\\n            let key = this.config[confKey].key;\\n            clearVar(key);\\n        }\\n    },\\n    buildConfig: function() {\\n        let mode = this.config.mode.get();\\n        let pad = this.config.pad.get();\\n        let iv = this.config.iv.get();\\n        let conf = {};\\n        conf.mode = this.ConfigMapping.mode[mode];\\n        conf.padding = this.ConfigMapping.pad[pad]\\n        if (mode != \\\"ECB\\\" && iv.length != 0) {\\n            conf.iv = CryptoJS.enc.Utf8.parse(iv);\\n            if (this.config.ivEncodeType.get() == \\\"Hex\\\") {\\n                iv = iv.replace(\\\"[HEX]:\\\", \\\"\\\")\\n                conf.iv = CryptoJS.enc.Hex.parse(iv);\\n            }\\n        }\\n        return conf\\n    },\\n    encryptor: function(obj) {\\n        // 原文\\n        let text = obj.decText;\\n        if (text) {\\n            let keyString = this.config.key.get()\\n            let key = CryptoJS.enc.Utf8.parse(keyString);\\n            if (this.config.keyEncodeType.get() == \\\"Hex\\\") {\\n                keyString = keyString.replace(\\\"[HEX]:\\\", \\\"\\\")\\n                key = CryptoJS.enc.Hex.parse(keyString);\\n            }\\n            try {\\n                let conf = this.buildConfig()\\n                let encrypted = this.ConfigMapping.encType[this.config.type.get()](text, key, conf);\\n                let encode = this.config.encode.get()\\n                let cipherText = encrypted.toString();\\n                if (encode === 'HEX') {\\n                    cipherText = CryptoJS.enc.Hex.stringify(CryptoJS.enc.Base64.parse(cipherText));\\n                }\\n                // 密文\\n                this.config.cipherText.set(cipherText)\\n                return cipherText;\\n            } catch (e) {\\n                log(e.message)\\n                setError(e.message)\\n            }\\n        } else {\\n            throw new Error(\\\"明文不能为空！\\\")\\n        }\\n    },\\n    decryptor: function(obj) {\\n        let text = obj.encText;\\n        if (text) {\\n            let encode = this.config.encode.get()\\n            let cipherText;\\n            if (encode === 'Base64') {\\n                cipherText = text\\n            } else if (encode === 'HEX') {\\n                cipherText = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Hex.parse(text))\\n            }\\n            let keyString = this.config.key.get()\\n            let key = CryptoJS.enc.Utf8.parse(keyString);\\n            if (this.config.keyEncodeType.get() == \\\"Hex\\\") {\\n                keyString = keyString.replace(\\\"[HEX]:\\\", \\\"\\\")\\n                key = CryptoJS.enc.Hex.parse(keyString);\\n            }\\n            try {\\n                let conf = this.buildConfig()\\n                let decrypted = this.ConfigMapping.decType[this.config.type.get()](cipherText, key, conf);\\n                let decryptedStr = decrypted.toString(CryptoJS.enc.Utf8);\\n                if (!decryptedStr) {\\n                    throw new Error(\\\"请检查密钥 key、偏移量 iv 以及密文是否正确！\\\");\\n                }\\n                this.config.text.set(decryptedStr)\\n                return decryptedStr\\n            } catch (e) {\\n                throw new Error(\\\"解密失败！\\\" + e.message);\\n            }\\n        } else {\\n            throw new Error(\\\"密文不能为空！\\\")\\n        }\\n    },\\n    checkKey: function (obj) {\\n        let key = Crypto.config.key.get();\\n        if (key.length === 0) { \\n            throw new Error(\\\"密钥 key 不能为空！\\\")\\n        }\\n        let type = Crypto.config.type.get();\\n        let blockSize = 128;\\n        try {\\n            blockSize = Crypto.ConfigMapping[\\\"blockSize\\\"][type][Crypto.config.blockSize.get()]\\n            // log(\\\"checkKey#blockSize:\\\" + blockSize)\\n        } catch (e) { }\\n        if (type === \\\"DES\\\") {\\n            blockSize = 64;\\n        }\\n        if (Crypto.config.keyEncodeType.get() == \\\"Hex\\\") {\\n            key = key.replace(\\\"[HEX]:\\\", \\\"\\\")\\n            blockSize = blockSize * 2;\\n        }\\n        // 设置数据块长度\\n        let keySize = key.length * 8;\\n        // log(\\\"checkKey#keySize:\\\" + keySize)\\n        // log(\\\"checkKey#keySize/8:\\\" + keySize/8)\\n        // log(\\\"checkKey#blockSize:\\\" + blockSize)\\n        // log(\\\"checkKey#blockSize/8:\\\" + blockSize / 8)\\n        if (keySize < blockSize) {\\n            obj.from = Crypto.config.keyEncodeType.key\\n            let newKey = Crypto.fillKeys(obj, key, blockSize / 8);\\n            Crypto.config.key.set(newKey)\\n            // log(\\\"checkKey#newKey: \\\" + newKey)\\n            // log(\\\"checkKey#newKey.Size: \\\" + newKey.length * 8)\\n            throw new Error('密钥 key 长度过短，已自动 `\\\\\\\\x00` 空填充，请再次执行加/解密')\\n        } else if (keySize > blockSize) {\\n            // TODO 超出部分将被忽略\\n            throw new Error(\\\"密钥 key 长度 \\\" + key.length + \\\" 过长，长度应为 \\\" + blockSize / 8 +\\\"，请自行检查，然后重新执行加/解密\\\")\\n        } else {\\n            return;\\n        }\\n    },\\n    checkIv: function (obj) {\\n        let iv = Crypto.config.iv.get();\\n        if (iv.length === 0) {\\n            throw new Error(\\\"偏移量 iv 不能为空！\\\")\\n        }\\n        let mode = Crypto.config.mode.get();\\n        if (mode === 'ECB') {\\n            return;\\n        }\\n        let type = Crypto.config.type.get();\\n        let blockSize = 128;\\n        if (type === 'DES') {\\n            blockSize = 64;\\n        }\\n        if (Crypto.config.ivEncodeType.get() == \\\"Hex\\\") {\\n            iv = iv.replace(\\\"[HEX]:\\\", \\\"\\\")\\n            blockSize = blockSize * 2;\\n        }\\n        // 设置数据块长度\\n        let ivSize = iv.length * 8;\\n        if (ivSize < blockSize) {\\n            obj.from = Crypto.config.ivEncodeType.key\\n            let newIv = Crypto.fillKeys(obj, iv, blockSize / 8);\\n            Crypto.config.iv.set(newIv)\\n            throw new Error(\\\"偏移量 iv 长度过短，已自动 `\\\\\\\\x00` 空填充，请再次执行加/解密\\\")\\n        } else if (ivSize > blockSize) {\\n            throw new Error(\\\"偏移量 iv 长度 \\\" + iv.length + \\\" 过长，长度应为 \\\" + blockSize / 8 + \\\"，请自行检查，然后重新执行加/解密\\\")\\n        } else {\\n            return;\\n        }\\n    },\\n    /**\\n     * 密钥 `\\\\x00` 空填充\\n     * @param {string} key 密钥\\n     * @param {Number} keySize 填充长度, 值: 128, 192, 256\\n     */\\n    fillKeys: function (obj, key, keySize) {\\n        let Tool = $.require(\\\"hiker://page/utiliy?rule=\\\" + obj.ruleTitle);\\n        let encodeType = \\\"UTF-8\\\"\\n        if (obj.from == Crypto.config.keyEncodeType.key) {\\n            encodeType = Crypto.config.keyEncodeType.get();\\n        } else if (obj.from == Crypto.config.ivEncodeType.key) {\\n            encodeType = Crypto.config.ivEncodeType.get();\\n        }\\n        if (encodeType == \\\"Hex\\\") {\\n            return \\\"[HEX]:\\\" + Tool.fillZeroPadding(key, keySize);\\n        }\\n        return Tool.fillNullPadding(key, keySize);\\n    },\\n    AES: {\\n        encrypt: function(obj) {\\n            Crypto.config.type.set(\\\"AES\\\")\\n            // log(\\\"AES-Encrypt-obj:\\\" + JSON.stringify(obj))\\n            return Crypto.encryptor(obj);\\n        },\\n        decrypt: function(obj) {\\n            Crypto.config.type.set(\\\"AES\\\")\\n            return Crypto.decryptor(obj);\\n        }\\n\\n    },\\n    DES: {\\n        encrypt: function(obj) {\\n            Crypto.config.type.set(\\\"DES\\\")\\n            return Crypto.encryptor(obj);\\n        },\\n        decrypt: function(obj) {\\n            Crypto.config.type.set(\\\"DES\\\")\\n            return Crypto.decryptor(obj);\\n        }\\n\\n    },\\n}\\n\\n$.exports = Crypto;\"},{\"col_type\":\"text_1\",\"name\":\"编码类算法模板\",\"path\":\"template_encode\",\"rule\":\"js:\\nlet template = {};\\n// 编码\\ntemplate.encode = function(obj) {\\n    log(\\\"我是原文\\\"+ obj.decText)\\n    let encode = \\\"原文通过加密得到的密文字符串\\\";\\n    return encode;\\n}\\n// 解码\\ntemplate.decode = function(obj) {\\n    log(\\\"我是密文\\\"+ obj.encText)\\n    let decode = \\\"密文通过解密得到的原文字符串\\\";\\n    return decode;\\n}\\n// 导出给外部通过 require 方法使用\\n$.exports.template = template\"},{\"col_type\":\"text_1\",\"name\":\"AES-UI\",\"path\":\"aesui\",\"rule\":\"js:\\nfunction buildAESUi(d, obj) {\\n  let config = $.require(\\\"hiker://page/aes?rule=\\\" + obj.ruleTitle).config;\\n  if (obj.type.includes(\\\"AES\\\")) {\\n    config.type.set(\\\"AES\\\")\\n  }\\n  if (obj.type.includes(\\\"DES\\\")) {\\n    config.type.set(\\\"DES\\\")\\n  }\\n  d.push({\\n            title: \\\"加密\\\",\\n            desc: \\\"请输入明文\\\",\\n            col_type: 'input',\\n            extra: {\\n                // titleVisible: false,\\n                defaultValue: getVar(\\\"crypto_text\\\", \\\"\\\"),\\n                type: \\\"textarea\\\",\\n                onChange: 'putVar(\\\"crypto_text\\\",input)'\\n            },\\n            url: $.toString((obj) => {\\n                obj.decText = input;\\n                // log(\\\"obj.decText: \\\" + obj.decText)\\n                let toastText = \\\"加密成功\\\";\\n                var cipherText = \\\"\\\";\\n                let Crypto = $.require(\\\"hiker://page/aes?rule=\\\" + obj.ruleTitle);\\n                let config = Crypto.config;\\n                try {\\n                    Crypto.checkKey(obj);\\n                    Crypto.checkIv(obj);\\n                    obj.tools[\\\"AES\\\"] = Crypto.AES;\\n                    obj.tools[\\\"DES\\\"] = Crypto.DES;\\n                    var tool = {};\\n                    for (let key in obj.tools) {\\n                        if (obj.type.includes(key)) {\\n                            tool = obj.tools[key];\\n                            break;\\n                        }\\n                    }\\n                    cipherText = tool.encrypt(obj);\\n                    // log(\\\"cipherText: \\\" + cipherText)\\n                } catch (e) {\\n                    cipherText = e.message;\\n                    toastText = \\\"加密失败\\\";\\n                }\\n                config.cipherText.set(cipherText)\\n                refreshPage();\\n                return 'toast://' + toastText;\\n            }, obj),\\n        });\\n        buildConfigsUI(d, obj);\\n        d.push({\\n            title: \\\"解密\\\",\\n            desc: \\\"请输入密文\\\",\\n            col_type: 'input',\\n            extra: {\\n                // titleVisible: false,\\n                defaultValue: getVar(\\\"crypto_cipher_text\\\", \\\"\\\"),\\n                type: \\\"textarea\\\",\\n                onChange: 'putVar(\\\"crypto_cipher_text\\\",input)'\\n            },\\n            url: $.toString((obj) => {\\n                obj.encText = input;\\n                // log(\\\"obj.encText: \\\" + obj.encText)\\n                let toastText = \\\"解密成功\\\";\\n                let Crypto = $.require(\\\"hiker://page/aes?rule=\\\" + obj.ruleTitle);\\n                var text = \\\"\\\";\\n                let config = Crypto.config;\\n                try {\\n                    Crypto.checkKey(obj);\\n                    Crypto.checkIv(obj);\\n                    obj.tools[\\\"AES\\\"] = Crypto.AES;\\n                    obj.tools[\\\"DES\\\"] = Crypto.DES\\n                    var tool = {};\\n                    for (let key in obj.tools) {\\n                       if (obj.type.includes(key)) {\\n                            tool = obj.tools[key];\\n                            break;\\n                        }\\n                    }\\n                    // log(obj.encText)\\n                    text = tool.decrypt(obj);\\n                } catch (e) {\\n                    text = e.message;\\n                    toastText = \\\"解密失败\\\";\\n                }\\n                config.text.set(text)\\n                refreshPage();\\n                return 'toast://' + toastText;\\n            }, obj),\\n        });\\n}\\nfunction buildConfigsUI(d, obj) {\\n    let Crypto = $.require(\\\"hiker://page/aes?rule=\\\" + obj.ruleTitle);\\n    let ConfigMapping = Crypto.ConfigMapping;\\n    let config = Crypto.config;\\n    let mappingKeys = Object.keys(ConfigMapping);\\n    let modes = Object.keys(ConfigMapping[\\\"mode\\\"]);\\n    // log(JSON.stringify(modes))\\n    let paddings = Object.keys(ConfigMapping[\\\"pad\\\"]);\\n    // log(JSON.stringify(paddings))\\n    let encodes = Object.keys(ConfigMapping[\\\"encode\\\"]);\\n    // log(JSON.stringify(encodes))\\n    d.push({\\n        title: '““””<strong><font color=\\\"black\\\">模式</font></strong>',\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"scroll_button\\\"\\n    })\\n    for (let mode of modes) {\\n        d.push({\\n            title: mode == config.mode.get() ? \\\"‘‘\\\" + mode + \\\"’’\\\" : mode,\\n            url: $(\\\"#noLoading#\\\").lazyRule((mode, config) => {\\n                config.mode.set(mode)\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\"\\n            }, mode, config),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    d.push({\\n        col_type: \\\"blank_block\\\"\\n    })\\n\\n    d.push({\\n        title: '““””<strong><font color=\\\"black\\\">填充</font></strong>',\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"scroll_button\\\"\\n    })\\n    for (let padding of paddings) {\\n        d.push({\\n            title: padding == config.pad.get() ? \\\"‘‘\\\" + padding + \\\"’’\\\" : padding,\\n            url: $(\\\"#noLoading#\\\").lazyRule((padding, config) => {\\n                config.pad.set(padding)\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\"\\n            }, padding, config),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    d.push({\\n        col_type: \\\"blank_block\\\"\\n    })\\n\\n    if (config.type.get() == 'AES') {\\n        let blockSizes = Object.keys(ConfigMapping[\\\"blockSize\\\"][config.type.get()]);\\n        d.push({\\n            title: '““””<strong><font color=\\\"black\\\">数据块</font></strong>',\\n            url: \\\"hiker://empty\\\",\\n            col_type: \\\"scroll_button\\\"\\n        })\\n        for (let blockSize of blockSizes) {\\n            d.push({\\n                title: blockSize == config.blockSize.get() ? \\\"‘‘\\\" + blockSize + \\\"’’\\\" : blockSize,\\n                url: $(\\\"#noLoading#\\\").lazyRule((blockSize, config) => {\\n                    config.blockSize.set(blockSize)\\n                    refreshPage(false);\\n                    return \\\"hiker://empty\\\"\\n                }, blockSize, config),\\n                col_type: \\\"scroll_button\\\"\\n            });\\n        }\\n        d.push({\\n            col_type: \\\"blank_block\\\"\\n        })\\n    }\\n\\n    d.push({\\n        title: '““””<strong><font color=\\\"black\\\">密文编码</font></strong>',\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"scroll_button\\\"\\n    })\\n    for (let encode of encodes) {\\n        d.push({\\n            title: encode == config.encode.get() ? \\\"‘‘\\\" + encode + \\\"’’\\\" : encode,\\n            url: $(\\\"#noLoading#\\\").lazyRule((encode, config) => {\\n                config.encode.set(encode);\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\"\\n            }, encode, config),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    // AES 密钥 key 16/24/32 字符 => 128/192/256 bit\\n    let blockSize = 128;\\n    try {\\n        blockSize = ConfigMapping[\\\"blockSize\\\"][config.type.get()][config.blockSize.get()]\\n    } catch (e) { }\\n    if (config.type.get() === \\\"DES\\\") {\\n        blockSize = 64;\\n    }\\n    obj.blockSize = blockSize;\\n    d.push({\\n        title: \\\"随机 key\\\",\\n        desc: \\\"密钥 key, 必须 \\\" + blockSize / 8 +\\\" 字符\\\",\\n        col_type: 'input',\\n        extra: {\\n            // titleVisible: false,\\n            defaultValue: config.key.get(),\\n            onChange: $.toString((config) => {\\n                config.key.set(input)\\n            }, config)\\n        },\\n        url: $.toString((obj, config) => {\\n            let Tool = $.require(\\\"hiker://page/utiliy?rule=\\\" + obj.ruleTitle);\\n            let keyLen = obj.blockSize / 8;\\n            if (config.type.get() === 'DES') {\\n                keyLen = 8;\\n            }\\n            let randomKey = Tool.randomString(keyLen);\\n            if (config.keyEncodeType.get() == 'Hex') {\\n                let hex = $.require(\\\"hiker://page/hex?rule=\\\" + obj.ruleTitle).hex;\\n                obj.decText = randomKey\\n                randomKey = hex.encode(obj)\\n            }\\n            config.key.set(randomKey);\\n            refreshPage(false)\\n        }, obj, config)\\n    });\\n\\n    d.push({\\n        title: '““””<strong><font color=\\\"black\\\">密钥编码</font></strong>',\\n        url: $(\\\"#noLoading#\\\").lazyRule((config) => {\\n                config.keyEncodeType.set(\\\"UTF-8\\\");\\n                refreshPage(false);\\n                return \\\"toast://重置成功！\\\";\\n            }, config),\\n        col_type: \\\"scroll_button\\\"\\n    })\\n    let keyEncodeTypes = Object.keys(ConfigMapping[\\\"keyEncodeType\\\"]);\\n    // log(JSON.stringify(keyEncodeTypes))\\n    for (let keyEncodeType of keyEncodeTypes) {\\n        d.push({\\n            title: keyEncodeType == config.keyEncodeType.get() ? \\\"‘‘\\\" + keyEncodeType + \\\"’’\\\" : keyEncodeType,\\n            url: $(\\\"#noLoading#\\\").lazyRule((keyEncodeType, config, obj) => {\\n                let toastText = \\\"hiker://empty\\\";\\n                let hex = $.require(\\\"hiker://page/hex?rule=\\\" + obj.ruleTitle).hex;\\n                let key = config.key.get();\\n                let oldKeyEncodeType = config.keyEncodeType.get();\\n                switch(oldKeyEncodeType) {\\n                    case \\\"UTF-8\\\":\\n                        if (keyEncodeType == \\\"Hex\\\") {\\n                            obj.decText = key\\n                            config.key.set(hex.encode(obj))\\n                        }\\n                        config.keyEncodeType.set(keyEncodeType);\\n                        refreshPage(false);\\n                        break;\\n                   case \\\"Hex\\\":\\n                        toastText = 'toast://当前不支持 Hex 转其他编码，若需要重置选项请点击[密钥编码]'\\n                        break;\\n                }\\n                return toastText;\\n            }, keyEncodeType, config, obj),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n\\n    if (config.mode.get() !== \\\"ECB\\\") {\\n        let ivSize = config.type.get() === \\\"DES\\\" ? 64 : 128;\\n        obj.ivSize = ivSize;\\n        d.push({\\n            title: \\\"随机 iv\\\",\\n            desc: \\\"偏移量 iv, \\\" + ivSize / 8 +\\\" 字符, ECB 模式不需要\\\",\\n            col_type: 'input',\\n            extra: {\\n                // titleVisible: false,\\n                defaultValue: config.iv.get(),\\n                onChange: $.toString((config) => {\\n                    config.iv.set(input)\\n                }, config)\\n            },\\n            url: $.toString((obj, config) => {\\n                let Tool = $.require(\\\"hiker://page/utiliy?rule=\\\" + obj.ruleTitle);\\n                let ivLen = obj.ivSize / 8;\\n                let randomIv = Tool.randomString(ivLen);\\n                if (config.ivEncodeType.get() == 'Hex') {\\n                    let hex = $.require(\\\"hiker://page/hex?rule=\\\" + obj.ruleTitle).hex;\\n                    obj.decText = randomIv\\n                    randomIv = hex.encode(obj)\\n                }\\n                config.iv.set(randomIv);\\n                refreshPage(false)\\n            }, obj, config)\\n        });\\n        d.push({\\n            title: '““””<strong><font color=\\\"black\\\">偏移量编码</font></strong>',\\n            url: $(\\\"#noLoading#\\\").lazyRule((config) => {\\n                config.ivEncodeType.set(\\\"UTF-8\\\");\\n                refreshPage(false);\\n                return \\\"toast://重置成功！\\\";\\n            }, config),\\n            col_type: \\\"scroll_button\\\"\\n        })\\n        let ivEncodeTypes = Object.keys(ConfigMapping[\\\"ivEncodeType\\\"]);\\n        // log(JSON.stringify(keyEncodeTypes))\\n        for (let ivEncodeType of ivEncodeTypes) {\\n            d.push({\\n                title: ivEncodeType == config.ivEncodeType.get() ? \\\"‘‘\\\" + ivEncodeType + \\\"’’\\\" : ivEncodeType,\\n                url: $(\\\"#noLoading#\\\").lazyRule((ivEncodeType, config, obj) => {\\n                let toastText = \\\"hiker://empty\\\";\\n                let hex = $.require(\\\"hiker://page/hex?rule=\\\" + obj.ruleTitle).hex;\\n                let iv = config.iv.get();\\n                let oldIvEncodeType = config.ivEncodeType.get();\\n                switch(oldIvEncodeType) {\\n                    case \\\"UTF-8\\\":\\n                        if (ivEncodeType == \\\"Hex\\\") {\\n                            obj.decText = iv\\n                            config.iv.set(hex.encode(obj))\\n                        }\\n                        config.ivEncodeType.set(ivEncodeType);\\n                        refreshPage(false);\\n                        break;\\n                   case \\\"Hex\\\":\\n                        toastText = 'toast://当前不支持 Hex 转其他编码，若需要重置选项请点击[偏移量编码]'\\n                        break;\\n                }\\n                return toastText;\\n            }, ivEncodeType, config, obj),\\n                col_type: \\\"scroll_button\\\"\\n            });\\n        }\\n    } else {\\n        config.iv.set(\\\"\\\");\\n    }\\n}\\n$.exports.buildAESUi = buildAESUi\"},{\"col_type\":\"rich_text\",\"name\":\"RSA-UI\",\"path\":\"rsaui\",\"rule\":\"js:\\nlet navigator = {};\\nlet window = { \\n\\tnavigator: navigator \\n};\\nfunction buildRSAUi(d, obj) {\\n  d.push({\\n\\ttitle: '<p style=\\\"text-align: center;\\\">目前无法实现，敬请期待（咕咕咕）~</p>',\\n\\tcol_type: 'rich_text'\\n  })\\n  // https://cdn.jsdelivr.net/npm/keypair@1.0.3/index.min.js\\n  // https://cdn.jsdelivr.net/gh/wwwtyro/cryptico@master/cryptico.min.js\\n  // let cryptico = request(\\\"https://cdn.jsdelivr.net/gh/wwwtyro/cryptico@master/cryptico.min.js\\\")\\n  // eval(cryptico)\\n\\n\\n}\\n$.exports.buildRSAUi = buildRSAUi\"},{\"col_type\":\"text_1\",\"name\":\"工具\",\"path\":\"utiliy\",\"rule\":\"js:\\nlet Tool = {\\n  randomString: function(len){\\n      let chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz123456789' \\n      let maxLen = chars.length\\n      let str = ''\\n      for (let i = 0; i < len; i++) {\\n        str += chars.charAt(Math.floor(Math.random() * maxLen))\\n      }\\n      return str\\n  },\\n  fillNullPadding: function (str, len) {\\n    // str.padStart(targetLength [, padString])\\n    // str.padEnd(targetLength [, padString])\\n    if(str.length >= len) {\\n      return str;\\n    }\\n    return str + Array( len - str.length + 1 ).join(\\\"\\\\x00\\\");\\n  },\\n  fillZeroPadding: function (str, len) {\\n    // str.padStart(targetLength [, padString])\\n    // str.padEnd(targetLength [, padString])\\n    if(str.length >= len) {\\n      return str;\\n    }\\n    return str + Array( len - str.length + 1 ).join(\\\"0\\\");\\n  },\\n}\\n$.exports = Tool;\"},{\"col_type\":\"text_1\",\"name\":\"散列哈希类页面\",\"path\":\"hash\",\"rule\":\"js:\\n// const { buildAESUi } = $.require(\\\"hiker://page/aesui\\\");\\nfunction setHashPage(d, obj) {\\n    buildHashUi(d, obj);\\n}\\nfunction buildHashUi(d, obj) {\\n  d.push({\\n\\ttitle: '<p style=\\\"text-align: center;\\\">正在路上，敬请期待（咕咕咕）~</p>',\\n\\tcol_type: 'rich_text'\\n  })\\n}\\n$.exports.setHashPage = setHashPage\"},{\"col_type\":\"text_1\",\"name\":\"Hex\",\"path\":\"hex\",\"rule\":\"js:\\nlet hex = {};\\n// 编码\\nhex.encode = function(obj) {\\n    eval(getCryptoJS());\\n    // log(\\\"我是原文\\\"+ obj.decText)\\n    let wordArray = CryptoJS.enc.Utf8.parse(obj.decText);\\n    let encode = \\\"[HEX]:\\\" + CryptoJS.enc.Hex.stringify(wordArray);\\n    return encode;\\n}\\n// 解码\\nhex.decode = function(obj) {\\n    eval(getCryptoJS());\\n    // log(\\\"我是密文\\\"+ obj.encText)\\n    obj.encText = obj.encText.replace(\\\"[HEX]:\\\", \\\"\\\")\\n    let wordArray = CryptoJS.enc.Hex.parse(obj.encText);\\n    let decode = CryptoJS.enc.Utf8.stringify(wordArray);\\n    return decode;\\n}\\n// 导出给外部通过 require 方法使用\\n$.exports.hex = hex\"}]"},{"firstHeader":"class","last_chapter_rule":"","title":"聚搜君Lite","author":"LoyDgIk&道长&永远の明日","version":5,"url":"hiker://empty##fypage","col_type":"movie_1_vertical_pic","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet batchSearch_el = [],\n  batchSearch_page = parseInt(MY_URL.slice(15)),\n  batchSearch_kw = getVar('batchSearch-kw', ''),\n  batchSearch_config = JSON.parse(getVar('batchSearch-config')),\n  batchSearch_start = $.toString((mode, title) => {\n    if (mode == '内置') {\n      putVar('batchSearch-kw', input)\n      refreshPage()\n      return 'hiker://empty'\n    } else return 'hiker://search?s=' + input + '&rule=' + title\n  }, batchSearch_config.searchMode, MY_RULE.title)\neval(JSON.parse(fetch('hiker://page/reConfig')).rule)\n\nif (batchSearch_page == 1) {\n  batchSearch_el.push({\n    title: '搜索',\n    url: batchSearch_reConfig('if(input&&batchSearch_config.history.indexOf(input)==-1)batchSearch_config.history.push(input)') + ';' + batchSearch_start,\n    extra: { defaultValue: batchSearch_kw },\n    col_type: 'input'\n  }, {\n    title: '““””<span style=\"color:#409eff\"><b>策略设置</b></span>',\n    url: 'hiker://empty#策略设置',\n    col_type: 'scroll_button'\n  })\n  Object.keys(batchSearch_config.filters).forEach((v) => batchSearch_el.push({\n    title: (v == batchSearch_config.apply ? '““””<span style=\"color:#12b668\">' : '') + v,\n    url: v == batchSearch_config.apply ? 'hiker://empty' : '#noLoading#@lazyRule=.js:' +\n      batchSearch_reConfig($.toString((apply) => { batchSearch_config.apply = apply }, v)),\n    col_type: 'scroll_button'\n  }))\n  batchSearch_el.push({ col_type: 'line_blank' })\n  if (!batchSearch_kw) {\n    batchSearch_el.push({\n      title: '““””<big><b>搜索历史</b></big> &nbsp 🗑',\n      url: 'confirm://要清空搜索历史吗?.js:' + batchSearch_reConfig('batchSearch_config.history=[]'),\n      col_type: 'text_1'\n    })\n    batchSearch_config.history.forEach((v) => {\n      batchSearch_el.push({\n        title: '““””<big>&nbsp &nbsp </big>' + v + '<big> &nbsp &nbsp</big>',\n        url: v + '#noLoading#@lazyRule=.js:' + batchSearch_start,\n        col_type: 'flex_button'\n      })\n    })\n  }\n}\n\nif (batchSearch_kw) {\n  eval(JSON.parse(fetch('hiker://page/searchLoad')).rule)\n  Array.prototype.push.apply(batchSearch_el, batchSearch_load().map((v) => {\n    if (v.content) v.desc += '\\n' + v.content\n    return v\n  }))\n}\n\nsetResult(batchSearch_el)\n//log(batchSearch_el)\n","searchFind":"js:\nlet batchSearch_el = [],\n  [_, batchSearch_page, batchSearch_kw] = MY_URL.split('##'),\n  batchSearch_config = JSON.parse(getVar('batchSearch-config'))\nbatchSearch_page = parseInt(batchSearch_page)\neval(JSON.parse(fetch('hiker://page/reConfig')).rule)\n\neval(JSON.parse(fetch('hiker://page/searchLoad')).rule)\nArray.prototype.push.apply(batchSearch_el, batchSearch_load())\n\nsetResult(batchSearch_el)\n","search_url":"hiker://empty##fypage##**","titleColor":"#148e8e","group":"#⃣️工具","detail_col_type":"icon_2","detail_find_rule":"js:\nlet batchSearch_el = [],\n  batchSearch_config = JSON.parse(getVar('batchSearch-config')),\n  batchSearch_allGroup = JSON.parse(fetch('hiker://home')).map((v) => v.group).filter((v, i, arr) => arr.indexOf(v) == i),\n  batchSearch_anotherMode = { '内置': '原生', '原生': '内置' } [batchSearch_config.searchMode]\neval(JSON.parse(fetch('hiker://page/reConfig')).rule)\n\nbatchSearch_el.push({\n  title: '搜索线程: ' + batchSearch_config.threadCnt,\n  url: 'input://////线程数: 同时搜索的小程序数量.js:' +\n    batchSearch_reConfig('batchSearch_config.threadCnt=parseInt(input)'),\n  img: 'hiker://images/设置'\n}, {\n  title: '超时(毫秒): ' + batchSearch_config.responseTime,\n  url: 'input://////超时毫秒数: 搜索每个小程序时的最大访问时间.js:' +\n    batchSearch_reConfig('batchSearch_config.responseTime=parseInt(input)'),\n  img: 'hiker://images/历史'\n}, {\n  title: '搜索模式: ' + batchSearch_config.searchMode,\n  url: 'confirm://要切换搜索模式为' + batchSearch_anotherMode + '吗?\\n内置模式: 首页同屏显示搜索结果\\n原生模式: 调用视界搜索显示结果.js:' +\n    batchSearch_reConfig($.toString((mode) => { batchSearch_config.searchMode = mode }, batchSearch_anotherMode)),\n  img: 'hiker://images/云备份'\n}, {\n  title: '新增策略',\n  url: 'input://////给新策略起个名字吧.js:' +\n    batchSearch_reConfig('batchSearch_config.filters[input]={group:[],exclude: []}'),\n  img: 'hiker://images/书签'\n}, {\n  title: '““””<b>💾 &nbsp 应用并返回</b>',\n  url: $('#noLoading#').lazyRule(() => (back(true), 'hiker://empty')),\n  col_type: 'text_center_1'\n})\n\nfor (let batchSearch_filtersName in batchSearch_config.filters) {\n  let batchSearch_filtersGroup = batchSearch_config.filters[batchSearch_filtersName].group,\n    batchSearch_filtersExclude = batchSearch_config.filters[batchSearch_filtersName].exclude\n  batchSearch_el.push({ col_type: 'line_blank' }, {\n    title: '““””<b>' + batchSearch_filtersName + '</b> &nbsp 🗑',\n    url: 'confirm://要删除策略【' + batchSearch_filtersName + '】吗?.js:' +\n      batchSearch_reConfig($.toString((name) => { delete batchSearch_config.filters[name] }, batchSearch_filtersName)),\n    col_type: 'text_center_1'\n  }, { col_type: 'big_blank_block' }, { col_type: 'big_blank_block' }, {\n    title: '““””<span style=\"color:#409eff\">[⊗]<b></b></span>',\n    url: 'confirm://要清空策略【' + batchSearch_filtersName + '】包含的分组吗?.js:' +\n      batchSearch_reConfig($.toString((name) => { batchSearch_config.filters[name].group = [] }, batchSearch_filtersName)),\n    col_type: 'scroll_button'\n  }, {\n    title: '““””<span style=\"color:#409eff\">[⊙]<b>分组:</b></span>',\n    url: 'confirm://要全选策略【' + batchSearch_filtersName + '】包含的分组吗?.js:' +\n      batchSearch_reConfig($.toString((name, allGroup) => { batchSearch_config.filters[name].group = allGroup }, batchSearch_filtersName, batchSearch_allGroup)),\n    col_type: 'scroll_button'\n  })\n  let batchSearch_sortedGroup = batchSearch_allGroup.reduce((self, v) => {\n    let i = batchSearch_filtersGroup.indexOf(v)\n    if (i >= 0) self[0].push([i, v])\n    else self[1].push(v)\n    return self\n  }, [\n    [],\n    []\n  ])\n  batchSearch_sortedGroup[0].forEach((v) => batchSearch_el.push({\n    title: '““””<span style=\"color:#12b668\">' + (v[1] || '[无分组]'),\n    url: '#noLoading#@lazyRule=.js:' +\n      batchSearch_reConfig($.toString((name, locat) => { batchSearch_config.filters[name].group.splice(locat, 1) }, batchSearch_filtersName, v[0])),\n    col_type: 'scroll_button'\n  }))\n  batchSearch_sortedGroup[1].forEach((v) => batchSearch_el.push({\n    title: v || '[无分组]',\n    url: '#noLoading#@lazyRule=.js:' +\n      batchSearch_reConfig($.toString((name, title) => { batchSearch_config.filters[name].group.push(title) }, batchSearch_filtersName, v)),\n    col_type: 'scroll_button'\n  }))\n  batchSearch_el.push({ col_type: 'line' }, { col_type: 'big_blank_block' }, { col_type: 'big_blank_block' }, {\n    title: '““””<span style=\"color:#409eff\">[⊕]<b>排除:</b></span>',\n    url: 'input://////要排除什么小程序?\\n可输入多个，每行一个.js:' +\n      batchSearch_reConfig($.toString((name) => { input.match(/^.*?$/gm).forEach((v) => batchSearch_config.filters[name].exclude.push(v)) }, batchSearch_filtersName)),\n    col_type: 'scroll_button'\n  })\n  batchSearch_filtersExclude.forEach((v, i) => batchSearch_el.push({\n    title: '““””<span style=\"color:#12b668\">' + v,\n    url: 'confirm://要取消排除小程序【' + v + '】吗?.js:' +\n      batchSearch_reConfig($.toString((name, locat) => { batchSearch_config.filters[name].exclude.splice(locat, 1) }, batchSearch_filtersName, i)),\n    col_type: 'scroll_button'\n  }))\n}\n\nsetResult(batchSearch_el)\n","sdetail_col_type":"text_1","sdetail_find_rule":"","ua":"auto","preRule":"// toDo\n// 策略编辑单开页面，更多链接兼容\n// ?二级页面没有预处理\n// fixed\n\n\nlet batchSearch_path = 'hiker://files/rules/BatchSearchConfig.json',\n  batchSearch_config = getVar('batchSearch-config') || fetch(batchSearch_path)\ntry { batchSearch_config = JSON.parse(batchSearch_config) } catch (e) { batchSearch_config = {} }\n\nif (!(batchSearch_config.threadCnt > 0)) batchSearch_config.threadCnt = 6\nif (!(batchSearch_config.responseTime > 0)) batchSearch_config.responseTime = 5000\nif (['内置', '原生'].indexOf(batchSearch_config.searchMode) == -1) batchSearch_config.searchMode = '内置'\nif (!Array.isArray(batchSearch_config.history)) batchSearch_config.history = []\nif (!Object.keys(batchSearch_config.filters || {}).length) batchSearch_config.filters = {\n  '全部': {\n    group: JSON.parse(fetch('hiker://home')).map((v) => v.group).filter((v, i, arr) => arr.indexOf(v) == i),\n    exclude: []\n  }\n}\nif (!(batchSearch_config.apply in batchSearch_config.filters)) batchSearch_config.apply = Object.keys(batchSearch_config.filters)[0]\n\nputVar('batchSearch-config', JSON.stringify(batchSearch_config))\nwriteFile(batchSearch_path, JSON.stringify(batchSearch_config))\n","pages":"[{\"name\":\"设置函数\",\"path\":\"reConfig\",\"rule\":\"function batchSearch_reConfig(code) {\\n  return $.toString((code) => {\\n    let batchSearch_config = JSON.parse(getVar('batchSearch-config'))\\n    new Function('batchSearch_config', code)(batchSearch_config)\\n    putVar('batchSearch-config', JSON.stringify(batchSearch_config))\\n    refreshPage(false)\\n    return 'hiker://empty'\\n  }, code)\\n}\\n\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"搜索函数\",\"path\":\"searchLoad\",\"rule\":\"function batchSearch_load() {\\n  try {\\n    function batchSearch_runCode(batchSearch_rule) {\\n      if (batchSearch_rule.indexOf('.js:') >= 0) {\\n        try {\\n          var input = batchSearch_rule.split('.js:')[0]\\n          return eval(batchSearch_rule.split('.js:')[1])\\n        } catch (e) {\\n          return batchSearch_rule\\n        }\\n      } else {\\n        return batchSearch_rule\\n      }\\n    }\\n    // 搜索策略过滤\\n    let batchSearch_filtersGroup = batchSearch_config.filters[batchSearch_config.apply].group,\\n      batchSearch_filtersExclude = batchSearch_config.filters[batchSearch_config.apply].exclude,\\n      batchSearch_homeList = JSON.parse(fetch('hiker://home')).filter((item) =>\\n        item.searchFind && item.title != MY_RULE.title &&\\n        batchSearch_filtersGroup.find((v) => item.group == v) &&\\n        !batchSearch_filtersExclude.find((v) => item.title == v))\\n      .slice((batchSearch_page - 1) * batchSearch_config.threadCnt, batchSearch_page * batchSearch_config.threadCnt)\\n    if (!batchSearch_homeList.length) return []\\n    let batchSearch_res = [],\\n      batchSearch_ruleList = [],\\n      batchSearch_urlList = []\\n    batchSearch_homeList.forEach((item) => {\\n      try {\\n        // 缓存解析规则\\n        batchSearch_ruleList.push({\\n          title: item.title,\\n          searchFind: item.searchFind,\\n          sdetailFind: ['', '*'].indexOf(item.sdetail_find_rule) == -1 ? item.sdetail_find_rule : item.detail_find_rule,\\n          col_type: ['', '*'].indexOf(item.sdetail_find_rule) == -1 ? item.sdetail_col_type : item.detail_col_type,\\n          preRule: item.preRule,\\n          urlParam: (item.search_url.match(/;.*/) || [''])[0],\\n          ua: item.ua\\n        })\\n        // 搜索链接处理\\n        let searchUrl = item.search_url.split(';').map((v) => v.replace(/；；/g, ';'))\\n        searchUrl[0] = searchUrl[0].replace(searchUrl[0].indexOf('%%') >= 0 ? /%%/g : /\\\\*\\\\*/g, encodeStr(batchSearch_kw, searchUrl[2]))\\n          .replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*\\\\d+@)?/g, (_, $1) => parseInt($1 || 0) + 1)\\n        let searchReq = { url: batchSearch_runCode(searchUrl[0]), options: { headers: { 'Content-Type': 'text/plain; charst=UTF-8' }, method: searchUrl[1], timeout: batchSearch_config.responseTime } }\\n        // post方法时转换参数\\n        if (/^post$/i.test(searchReq.options['method'])) {\\n          let [oriUrl, body] = searchReq.url.split('?')\\n          searchReq.url = oriUrl.replace('？？', '?')\\n          if (/^JsonBody=/.test(body)) body = body.slice(9)\\n          searchReq.options['body'] = body\\n        }\\n        if (searchUrl[2]) searchReq.options.headers['Content-Type'] = searchReq.options.headers['Content-Type'].slice(0, 19) + searchUrl[2]\\n        if (searchUrl[3]) searchUrl[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n          let headers = v.split('@')\\n          searchReq.options.headers[headers[0]] = batchSearch_runCode(headers[1])\\n        })\\n        // 添加全局UA\\n        if (!searchReq.options.headers['User-Agent']) {\\n          if (item.ua == 'pc')\\n            searchReq.options.headers['User-Agent'] = PC_UA\\n          else if (item.ua == 'mobile')\\n            searchReq.options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        batchSearch_urlList.push(searchReq)\\n      } catch (e) {\\n        batchSearch_urlList.push({ url: 'hiker://error/' + JSON.stringify(e) })\\n      }\\n    })\\n    // 获取搜索结果\\n    batchFetch(batchSearch_urlList).forEach((batchSearch_searchHtml, batchSearch_searchIndex) => {\\n      let batchSearch_itemRule = batchSearch_ruleList[batchSearch_searchIndex],\\n        batchSearch_itemUrl = batchSearch_urlList[batchSearch_searchIndex]\\n      MY_URL = batchSearch_itemUrl.url\\n      try {\\n        if (!batchSearch_searchHtml) {\\n          if (batchSearch_itemUrl.url.indexOf('hiker://error/') == 0)\\n            throw { message: '链接处理时出错:\\\\n' + JSON.parse(batchSearch_itemUrl.url.slice(14)).message }\\n          else if (batchSearch_itemUrl.url.indexOf('hiker://') != 0) throw { message: '无法访问，未获取到网页源代码' }\\n        }\\n\\n        function batchSearch_urlHandle(url, addRule) {\\n          // 子页面添加rule\\n          if (url.indexOf('hiker://page/') == 0) {\\n            [, url, params, mark] = /^(.*?)(?:\\\\?(.*?))?(#.*?)?$/.exec(url)\\n            return url + '?rule=' + batchSearch_itemRule.title + (params || '') + (mark ? '&' + mark : '')\\n          }\\n          // 添加二级规则\\n          if (addRule && !/@(?:r|lazyR)ule=/.test(url)) {\\n            if (batchSearch_itemRule.sdetailFind) {\\n              if (!/;get|;post/i.test(url))\\n                url += ';get;' + batchSearch_itemUrl.options.headers['Content-Type'].split('charst=')[1] +\\n                ';{' + Object.keys(batchSearch_itemUrl.options.headers)\\n                .filter((v) => v != 'Content-Type')\\n                .map((v) => v + '@' + batchSearch_itemUrl.options.headers[v].replace(/;/g, '；；'))\\n                .join('&&') + '}'\\n              batchSearch_itemRule.urlParam.replace(/^;post/i, ';get')\\n              url += '@rule=' + (batchSearch_itemRule.sdetailFind.indexOf('js:') == 0 ?\\n                batchSearch_itemRule.sdetailFind :\\n                batchSearch_itemRule.sdetailFind.replace('==>', ';' + batchSearch_itemRule.col_type + '==>')\\n              )\\n            } else url = 'web://' + url\\n          }\\n          // 二级页面预处理与错误处理\\n          if (url.indexOf('@rule=js:') > 0) url = url.replace('@rule=js:',\\n            '@rule=js:try{\\\\nbatchSearch_itemRule=' + $.stringify({ title: batchSearch_itemRule.title, col_type: batchSearch_itemRule.col_type }) +\\n            ';' + $.stringify(batchSearch_urlHandle) + ';' + $.stringify(batchSearch_reConfig) + ';' +\\n            $.toString(() => {\\n              fetch = (function(func) {\\n                return function(url, params) {\\n                  return func(batchSearch_urlHandle(url), params)\\n                }\\n              })(fetch)\\n              setResult = (function(func) {\\n                return function(el) {\\n                  if (!Array.isArray(el)) el = el.data\\n                  func(el.map((v) => {\\n                    v.url = v.url && batchSearch_urlHandle(v.url)\\n                    v.col_type = v.col_type || batchSearch_itemRule.col_type\\n                    return v\\n                  }))\\n                }\\n              })(setResult)\\n              setSearchResult = setResult\\n              setHomeResult = setResult\\n            }) + ';') + '\\\\n}catch(e){' + $.toString((title, batchSearch_reConfig) => {\\n            setResult([{\\n              title: '小程序【' + title + '】中，此二级页面不支持或者已失效，错误信息：\\\\n\\\\n' + e.message,\\n              col_type: 'long_text'\\n            }, { col_type: 'line' }, {\\n              title: '““””<span style=\\\"color:#409eff\\\">排除小程序</span>',\\n              url: 'confirm://要排除该小程序吗?.js:' +\\n                batchSearch_reConfig('batchSearch_config.filters[batchSearch_config.apply].exclude.push(\\\"' + title + '\\\")').replace('refreshPage(false)', '') + ';' +\\n                $.toString(() => writeFile('hiker://files/BatchSearchConfig.json', getVar('batchSearch-config'))) +\\n                ';\\\"toast://已排除小程序【' + title + '】\\\"',\\n              col_type: 'text_center_1'\\n            }])\\n          }, batchSearch_itemRule.title, batchSearch_reConfig) + '}'\\n          return url\\n        }\\n        if (batchSearch_itemRule.searchFind.indexOf('js:') == 0) {\\n          // js解析\\n          Array.prototype.push.apply(batchSearch_res, function() {\\n            let batchSearch_result = []\\n\\n            function getUrl() { return MY_URL }\\n            fetch = (function(func) {\\n              return function(url, params) {\\n                return func(batchSearch_urlHandle(url), params)\\n              }\\n            })(fetch)\\n            eval(batchSearch_itemRule.preRule)\\n\\n            function getResCode() { return batchSearch_searchHtml }\\n\\n            function setResult(el) {\\n              if (!Array.isArray(el)) el = el.data\\n              el.forEach((v) => {\\n                v.title = (batchSearch_config.searchMode == '内置' && !/^““|‘‘/.test(v.title) ? '““””' : '') + v.title\\n                v.url = batchSearch_urlHandle(v.url, true)\\n                v.desc = batchSearch_itemRule.title + (v.desc ? ' 🔹 ' + v.desc : '')\\n                v.col_type = 'movie_1_vertical_pic'\\n                batchSearch_result.push(v)\\n              })\\n            }\\n            setSearchResult = setResult\\n            setHomeResult = setResult\\n            eval(batchSearch_itemRule.searchFind.slice(3))\\n            return batchSearch_result\\n          }())\\n        } else {\\n          // 普通解析\\n          let find = batchSearch_itemRule.searchFind.split(';')\\n          parseDomForArray(batchSearch_searchHtml, find[0]).forEach((data) => {\\n            let [title, url, desc, content, img] = find.slice(1).map((v, i) =>\\n                batchSearch_runCode(v == '*' ? '' :\\n                  (i == 1 || i == 4 ? parseDom(data, v) :\\n                    parseDomForHtml(data, v)))),\\n              item = {\\n                title: (batchSearch_config.searchMode == '内置' && !/^““|‘‘/.test(title) ? '““””' : '') + title,\\n                url: batchSearch_urlHandle(url, true),\\n                desc: batchSearch_itemRule.title + (desc ? ' 🔹 ' + desc : ''),\\n                content: content,\\n                img: img,\\n                col_type: 'movie_1_vertical_pic'\\n              }\\n            if (item.title.indexOf(batchSearch_kw) >= 0 || item.desc.indexOf(batchSearch_kw) >= 0) batchSearch_res.push(item)\\n          })\\n        }\\n      } catch (e) {\\n        // 搜索结果错误处理\\n        batchSearch_res.push({\\n          title: '小程序【' + batchSearch_itemRule.title + '】不支持或者已失效，点击查看错误信息',\\n          url: 'confirm://' + e.message + '\\\\n\\\\n是否排除该小程序?.js:' +\\n            batchSearch_reConfig('batchSearch_config.filters[batchSearch_config.apply].exclude.push(\\\"' + batchSearch_itemRule.title + '\\\")').replace('refreshPage(false)', '') + ';' +\\n            $.toString(() => writeFile('hiker://files/BatchSearchConfig.json', getVar('batchSearch-config'))) +\\n            ';\\\"toast://已排除小程序【' + batchSearch_itemRule.title + '】\\\"',\\n          col_type: 'text_center_1'\\n        });\\n      }\\n    })\\n    return batchSearch_res\\n  } catch (e) {\\n    return [{\\n      title: '搜索时出现致命错误，点击查看解决办法\\\\n' + e,\\n      url: $('点击确定后结束搜索，将搜索线程调整为1，\\\\n重新搜索直到再次出现相同的报错，\\\\n然后就可以定位引起致命错误的小程序，手动将其排除').confirm(() => {\\n        putVar('batchSearch-kw', '')\\n        refreshPage()\\n      }),\\n      col_type: 'text_center_1'\\n    }]\\n  }\\n}\\n\"}]"},{"last_chapter_rule":"","title":"批量修改助手","author":"永远の明日","version":4,"url":"hiker://empty","col_type":"text_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet todoRule = JSON.parse(getVar('batchEdit-todoRule', '[]')),\n  editAttr = JSON.parse(getVar('batchEdit-editAttr', '[\"group\"]')),\n  subMode = getVar('batchEdit-subMode', '字串'),\n  replaceMode = getVar('batchEdit-replaceMode', '字串'),\n  subStr = getVar('batchEdit-subStr', ''),\n  replacement = getVar('batchEdit-replacement', ''),\n  quickCopy = ['/^.*$/', '/[\\\\s\\\\S]*/', 'new RegExp(\"\",\"\")', '()=>{return \"\"}', 'function(){return \"\"}', 'new Function(\"\", \"\")'],\n  el = []\n\nel.push({\n  title: '““””<b>恢复备份',\n  url: $('#noLoading#').lazyRule(() => {\n    if (!fetch('hiker://files/share/batchEdit-backup-rules.json')) return 'toast://备份为空'\n    else return 'rule://' + base64Encode('海阔视界￥home_rule_url￥hiker://files/share/batchEdit-backup-rules.json')\n  })\n}, {\n  title: '““””<b>使用须知',\n  url: 'hiker://page/manual#noHistory##noRecordHistory#',\n}, {\n  title: '““””<b>编辑队列: ' + todoRule.length,\n  url: 'hiker://page/queueEdit#noHistory##noRecordHistory#',\n}, {\n  title: '修改标题',\n  url: $('#noLoading#').lazyRule(() => {\n    putVar('batchEdit-subMode', '字串')\n    putVar('batchEdit-editAttr', '[\"title\"]')\n    refreshPage(false)\n    return 'toast://请输入查询和替换内容'\n  })\n}, {\n  title: '修改分组',\n  url: $('#noLoading#').lazyRule(() => {\n    putVar('batchEdit-subMode', '正则')\n    putVar('batchEdit-subStr', '/^.*$/')\n    putVar('batchEdit-editAttr', '[\"group\"]')\n    refreshPage(false)\n    return 'toast://已正则全选查询内容，请输入替换内容'\n  })\n}, {\n  title: '修改颜色',\n  url: $('#noLoading#').lazyRule(() => {\n    putVar('batchEdit-subMode', '正则')\n    putVar('batchEdit-subStr', '/^.*$/')\n    putVar('batchEdit-editAttr', '[\"titleColor\"]')\n    refreshPage(false)\n    return 'toast://已正则全选查询内容，请输入替换内容'\n  })\n}, { col_type: 'line_blank' })\n\nel.push({\n  title: '““””<b>✎ 待改属性: </b><small>' + editAttr,\n  url: 'hiker://page/AttrSelect?mode=batchEdit-editAttr#noHistory##noRecordHistory#',\n  col_type: 'text_center_1',\n}, {\n  title: subMode + '查询',\n  url: $.toString((subMode) => {\n    if (!input) {\n      subMode = { '字串': '正则', '正则': '字串' } [subMode]\n      putVar('batchEdit-subMode', subMode)\n      refreshPage(false)\n      return 'toast://已切换至' + subMode + '查询模式'\n    }\n  }, subMode),\n  desc: '输入' + subMode + '，为空时右侧可切换模式',\n  col_type: 'input',\n  extra: { defaultValue: subStr, OnChange: 'putVar(\"batchEdit-subStr\", input)' }\n}, {\n  title: replaceMode + '替换',\n  url: $.toString((replaceMode) => {\n    if (!input) {\n      replaceMode = { '字串': '函数', '函数': '字串' } [replaceMode]\n      putVar('batchEdit-replaceMode', replaceMode)\n      refreshPage(false)\n      return 'toast://已切换至' + replaceMode + '替换模式'\n    }\n  }, replaceMode),\n  desc: '输入' + replaceMode + '，为空时右侧可切换模式',\n  col_type: 'input',\n  extra: { defaultValue: replacement, OnChange: 'putVar(\"batchEdit-replacement\", input)' }\n}, {\n  title: '💾   修改并导入',\n  url: $('#noLoading#').lazyRule((todoRule, editAttr, subStr, replacement, subMode, replaceMode) => {\n    let rules = JSON.parse(fetch('hiker://home'))\n    writeFile('hiker://files/share/batchEdit-backup-rules.json', JSON.stringify(rules))\n    if (subMode == '正则') {\n      try { subStr = eval(subStr) } catch (e) {}\n      if (!(subStr instanceof RegExp)) throw '查询正则语法错误'\n    }\n    if (replaceMode == '函数') {\n      try { replacement = eval(replacement) } catch (e) {}\n      if (!(replacement instanceof Function)) throw '替换函数语法错误'\n    }\n    rules = rules.map((v) => {\n      if (todoRule.indexOf(v.title) >= 0)\n        editAttr.forEach((attr) => (v[attr] = v[attr].replace(subStr, replacement)))\n      return v\n    })\n    writeFile('hiker://files/share/batchEdit-home-rules.json', JSON.stringify(rules))\n    putVar('batchEdit-todoRule', '[]')\n    return 'rule://' + base64Encode('海阔视界￥home_rule_url￥hiker://files/share/batchEdit-home-rules.json')\n  }, todoRule, editAttr, subStr, replacement, subMode, replaceMode),\n  col_type: 'text_center_1',\n}, { col_type: 'line_blank' }, {\n  title: '““””<b>快捷复制',\n  url: 'hiker://empty',\n  col_type: 'text_center_1',\n})\n\nArray.prototype.push.apply(el, quickCopy.map((v) => {\n  return { title: v, url: 'copy://' + v }\n}))\nsetResult(el)\n","searchFind":"","search_url":"hiker://empty##**","titleColor":"#148e8e","group":"#⃣️工具","detail_col_type":"text_3","detail_find_rule":"","sdetail_col_type":"text_3","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"text_3\",\"name\":\"编辑队列\",\"path\":\"queueEdit\",\"rule\":\"js:\\naddListener('onClose', 'refreshPage(false)')\\n\\nconst filterAttr = JSON.parse(getVar('batchEdit-filterAttr', '[\\\"title\\\",\\\"url\\\"]')),\\n  groupShow = getVar('batchEdit-groupShow', '0'),\\n  queueShow = getVar('batchEdit-queueShow', '全部'),\\n  todoRule = JSON.parse(getVar('batchEdit-todoRule', '[]'))\\nlet rules = JSON.parse(fetch('hiker://home')),\\n  filterKey = getVar('batchEdit-filterKey', ''),\\n  groups = rules.map((v) => v.group).filter((v, i, arr) => arr.indexOf(v) == i)\\ngroups.unshift('分组:')\\nsetPageTitle('编辑队列: ' + todoRule.length)\\n\\nlet el = [{\\n  title: '过滤',\\n  url: $.toString(() => {\\n    putVar('batchEdit-filterKey', input)\\n    refreshPage(false)\\n    return 'hiker://empty'\\n  }),\\n  desc: '过滤关键词可正则，下方选择对什么属性进行过滤',\\n  col_type: 'input',\\n  extra: { defaultValue: filterKey }\\n}, {\\n  title: '✎ 过滤属性: &nbsp““””<small>' + filterAttr,\\n  url: 'hiker://page/AttrSelect?mode=batchEdit-filterAttr#noHistory##noRecordHistory#',\\n  col_type: 'text_center_1'\\n}, { col_type: 'line_blank' },\\n  { col_type: 'big_blank_block' },\\n  { col_type: 'big_blank_block' }\\n]\\n\\ngroups.forEach((v, i) => {\\n  el.push({\\n    title: '““””<span style=\\\"color:' + (groupShow == i ? '#12b668\\\">' : 'black\\\">') + (v || '[无分组]'),\\n    url: groupShow == i ? 'hiker://empty' : $('#noLoading#').lazyRule((i) => {\\n      putVar('batchEdit-groupShow', i)\\n      refreshPage(false)\\n      return 'hiker://empty'\\n    }, i),\\n    col_type: 'scroll_button',\\n  })\\n})\\n\\nif (filterKey) {\\n  filterKey = /^\\\\/(.+)\\\\/([gim]{0,3})$/.exec(filterKey) || [, filterKey, '']\\n  filterKey = new RegExp(filterKey[1], filterKey[2])\\n  rules = rules.filter((v) => {\\n    for (let attr of filterAttr) {\\n      let res = filterKey.exec(v[attr])\\n      if (res) {\\n        if (res[0] == '') return v[attr] == ''\\n        else return true\\n      }\\n    }\\n    return false\\n  })\\n}\\nif (groups[groupShow] != '分组:')\\n  rules = rules.filter((v) => (groups[groupShow] == v.group))\\nif (queueShow == '已选')\\n  rules = rules.filter((v) => (todoRule.indexOf(v.title) >= 0))\\n\\nel.push({ col_type: 'line' }, {\\n  title: '““””<span style=\\\"color:black\\\">⇵ 显示' + queueShow,\\n  url: $('#noLoading#').lazyRule((queueShow) => {\\n    putVar('batchEdit-queueShow', { '全部': '已选', '已选': '全部' } [queueShow])\\n    refreshPage(false)\\n    return 'hiker://empty'\\n  }, queueShow)\\n}, {\\n  title: '““””<span style=\\\"color:black\\\">◉ 全选',\\n  url: $('#noLoading#').lazyRule((rules, todoRule, group) => {\\n    if (group == '全部') todoRule = rules\\n    else rules.forEach((v) => { if (todoRule.indexOf(v) == -1) todoRule.push(v) })\\n    putVar('batchEdit-todoRule', JSON.stringify(todoRule))\\n    refreshPage(false)\\n    return 'toast://' + group + ', 已全选'\\n  }, rules.map((v) => v.title), todoRule, groups[groupShow]),\\n}, {\\n  title: '““””<span style=\\\"color:black\\\">○ 全不选',\\n  url: $('#noLoading#').lazyRule((rules, todoRule, group) => {\\n    if (group == '全部') todoRule = []\\n    else todoRule = todoRule.filter((v) => (rules.indexOf(v) == -1))\\n    putVar('batchEdit-todoRule', JSON.stringify(todoRule))\\n    refreshPage(false)\\n    return 'toast://' + group + ', 已全不选'\\n  }, rules.map((v) => v.title), todoRule, groups[groupShow]),\\n})\\nrules.forEach((v) => {\\n  let index = todoRule.indexOf(v.title),\\n    color = '&nbsp <span style=\\\"color:#' + v.titleColor.slice(-6) + '\\\">'\\n  el.push({\\n    title: '““””<small>' + (index == -1 ? '⚪' : '🟢') + color + v.title,\\n    url: $('#noLoading#').lazyRule((todoRule, title, index) => {\\n      if (index == -1) todoRule.push(title)\\n      else todoRule.splice(index, 1)\\n      putVar('batchEdit-todoRule', JSON.stringify(todoRule))\\n      refreshPage(false)\\n      return 'hiker://empty'\\n    }, todoRule, v.title, index)\\n  })\\n})\\n\\nsetResult(el)\\n\"},{\"col_type\":\"text_2\",\"name\":\"选择属性\",\"path\":\"AttrSelect\",\"rule\":\"js:\\naddListener('onClose', 'refreshPage(false)')\\n\\nconst mode = getParam('mode'),\\n  rule = JSON.parse(fetch('hiker://home'))[0],\\n  allAttr = Object.keys(rule).filter((v) => (typeof(rule[v]) == 'string')),\\n  attrs = JSON.parse(getVar(mode, mode == 'batchEdit-filterAttr' ? '[\\\"title\\\",\\\"url\\\"]' : '[\\\"group\\\"]'))\\nsetPageTitle('选择属性')\\n\\nlet el = [{\\n  title: '““””<span style=\\\"color:black\\\">◉ 全选',\\n  url: $('#noLoading#').lazyRule((mode, allAttr) => {\\n    putVar(mode, JSON.stringify(allAttr))\\n    refreshPage(false)\\n    return 'toast://已全选'\\n  }, mode, allAttr),\\n}, {\\n  title: '““””<span style=\\\"color:black\\\">○ 全不选',\\n  url: $('#noLoading#').lazyRule((mode) => {\\n    putVar(mode, '[]')\\n    refreshPage(false)\\n    return 'toast://已全不选'\\n  }, mode),\\n}]\\nallAttr.forEach((v) => {\\n  let index = attrs.indexOf(v)\\n  el.push({\\n    title: (index == -1 ? '⚪ ' : '🟢 ') + v,\\n    url: $('#noLoading#').lazyRule((mode, v, attrs, index) => {\\n      if (index == -1) attrs.push(v)\\n      else attrs.splice(index, 1)\\n      putVar(mode, JSON.stringify(attrs))\\n      refreshPage(false)\\n      return 'hiker://empty'\\n    }, mode, v, attrs, index),\\n    col_type: 'text_3',\\n  })\\n})\\n\\nsetResult(el)\"},{\"col_type\":\"rich_text\",\"name\":\"使用说明\",\"path\":\"manual\",\"rule\":\"js:\\nsetResult([\\n  '本规则使用了视界的合集导入功能进行批量修改，在导入前务必选择【删除原规则】，否则会没有效果。<br>同时不要担心改坏了，每次导入前都会备份，可以点击【恢复备份】导入备份，此时同样要选择【删除原规则】',\\n  '批量修改每次只能修改一次，修改后待处理队列会清空，无法继续修改',\\n  '点击【待改属性】可以选择要修改的属性，同时有三个快捷选项，一般只用这些功能就可以',\\n  '查询内容有字符串和正则两种模式，替换内容有字符串和函数两种模式，点击右侧按钮可切换，不会正则和函数的话尽量只用字符串模式。<br>这两种模式与js的replace函数参数一致，详见<a href=\\\"https://www.w3school.com.cn/jsref/jsref_replace.asp\\\">W3CSchool</a>',\\n  '目前也不知道能做什么了，还需要什么功能可以告诉我，但不保证能实现哦'\\n].map((v) => ({ title: v })))\\n\"}]"},{"last_chapter_rule":"","title":"规则查重工具","author":"Reborn","version":4,"url":"hiker://fyAll","col_type":"text_2","class_name":"规则查重","class_url":"home","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar res = {};\nvar items = [];\n\n// 所有开关  开则 true  关则 false\n// 规则去重开关\nlet clearDuplicate = true;\n\nvar keyList = [];\n// TODO 优化能匹配 hiker://xxx 的链接\nvar domainRegExp = new RegExp(\"([a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\\\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+\\\\.?)\");\nfunction isKeyInList(key) {\n    if (keyList.indexOf(key) > -1) {\n        return true;\n    }\n    return false;\n}\n\nlet rules = JSON.parse(getResCode());\n// let url = getUrl();\nlet url = \"hiker://home\";\n/hiker:\\/\\/(.*)/.test(url);\nlet category = RegExp.$1;\nswitch (category) {\n    case \"home\":\n        for (let i = 0; i < rules.length; i++) {\n            let rule = rules[i];\n            let key = domainRegExp.test(rule.url) === true ? RegExp.$1: \"\";\n            // TODO 修复匹配出 fypage.html 的问题\n            if (key === \"\" || key === \"fypage.html\" || isKeyInList(key) === true) {\n                continue;\n            }\n            keyList.push(key);\n        }\n        break;\n    case \"bookmark\":\n        break;\n    default:\n        setError(\"未知分类，无法解析\");\n        break;\n}\n\nvar mRulesList = new Array(keyList.length);\nfor (let i = 0; i < mRulesList.length; i++) {\n    let rulesTemp = rules;\n    mRulesList[i] = rulesTemp.filter(item => {\n        let result = false;\n        try {\n            result = item.url.indexOf(keyList[i]) > -1;\n        } catch (e) {  result = false;  }\n        return result;\n    });\n}\n\nvar keyNum = 0;\nvar itemsTemp = [];\nfor (let i = 0; i < mRulesList.length; i++) {\n    let mRules = mRulesList[i];\n    if (mRules.length >= 2) {\n        itemsTemp.push({\n            title: keyList[i],\n            col_type: \"text_1\"\n        });\n        keyNum++;\n        for (let j = 0; j < mRules.length; j++) {\n            let rule = mRules[j];\n            itemsTemp.push({\n                title: rule.title,\n                url: \"hiker://home@\" + rule.title,\n            });\n        }\n    }\n}\n\nif (clearDuplicate === true){\n    var obj = {};\n    itemsTemp = itemsTemp.reduce((current, next) => {\n        obj[next.title] ? \"\" : obj[next.title] = true && current.push(next);\n        return current;\n    }, []);\n}\n\nitems.push({\n    title: \"总规则数：\" + rules.length + \"，当前待处理：\" + keyNum + \" 组\",\n    desc: \"少掉的规则去哪里了？当然是不重复的规则啦！\\n(然而还有一部分是匹配失败的结果🙈️...)\",\n    col_type: \"pic_1\"\n});\n\nwhile (itemsTemp.length) items.push(itemsTemp.shift());\n\nres.data = items;\nsetHomeResult(res);","searchFind":"js: // From Zruiry\nvar jsonZr = JSON.parse(fetch('hiker://home'));\r\nvar res = {};\nvar d = [];\nvar n = 0;\nfor (var i = 0; i <jsonZr.length; i++) {\n    if ((jsonZr[i].title + JSON.stringify(jsonZr[i].url).match(/https?:\\/\\/.*?\\//) + JSON.stringify(jsonZr[i].url).match(/.*?hiker.*?/)).includes(getUrl().split('#')[1]))\n    n++;\n}\nd.push({\n    title: '您的本地共有' + jsonZr.length + '条规则',\n    content: \"共搜索到\" + n + \"条结果\",\n});\nfor (var i = 0; i <jsonZr.length; i++) {\n    var r = {};\n    r.title = jsonZr[i].title;\n    var ruleAuthor = jsonZr[i].author;\n    var ruleGroup = jsonZr[i].group;\n    var ruleUrl = JSON.stringify(jsonZr[i].url).match(/https?:\\/\\/.*?\\//);\n    r.desc = \"规则版本：\" + jsonZr[i].version;\n    if (jsonZr[i].author == null || jsonZr[i].author == undefined || jsonZr[i].author == '') {\n       ruleAuthor = \"未知\";\n} \n    if(JSON.stringify(jsonZr[i].url).match(/https?:\\/\\/.*?\\//) == null || JSON.stringify(jsonZr[i].url).match(/https?:\\/\\/.*?\\//) == undefined || JSON.stringify(jsonZr[i].url).match(/https?:\\/\\/.*?\\//) == '') {\n        ruleUrl = \"无法识别\";\n}\n    if (JSON.stringify(jsonZr[i].url).includes(\"hiker\")) {\n       ruleUrl = jsonZr[i].url;\n}\n    if (jsonZr[i].group == null || jsonZr[i].group == undefined || jsonZr[i].group == '') {\n       ruleGroup = \"暂无分组\";\n}\n    r.content = \"规则作者：\" + ruleAuthor + \"\\n所在分组：\" + ruleGroup + \"\\n站点网址：\" + ruleUrl;\n    r.url = 'hiker://home@' + jsonZr[i].title;\n    r.img = 'https://acg.xydwz.cn/gqapi/gqapi.php?t=' + new Date().getTime() / i * (i + 1);\n    if ((jsonZr[i].title + JSON.stringify(jsonZr[i].url).match(/https?:\\/\\/.*?\\//) + JSON.stringify(jsonZr[i].url).match(/.*?hiker.*?/)).includes(getUrl().split('#')[1]))\n    d.push(r);\n}\r\nres.data = d;\r\nsetSearchResult(res);\r","search_url":"hiker://bookmark#**","titleColor":"#ff148e8e","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]"},{"last_chapter_rule":"","title":"模板","author":"发粪涂墙","version":4,"url":"hiker://empty","col_type":"text_center_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nsetResult([{title:\"““妙不可言\\n------切记，此规则不可删除------\\n -------切记！！！切记！！！切记！！！------””\",url:\"hiker://empty\"}])","searchFind":"","search_url":"","titleColor":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"stui-vodlist一级\",\"path\":\"stui-vodlist\",\"rule\":\"var d = [];\\nvar html = getResCode();\\nvar list = parseDomForArray(html, '.stui-vodlist&&li');\\nfor (var j in list) {\\n    d.push({\\n        title: parseDomForHtml(list[j], 'a&&title'),\\n        desc: parseDomForHtml(list[j], '.pic-text&&Text'),\\n        img: parseDom(list[j], 'a&&data-original'),\\n        url: parseDom(list[j], 'a&&href') + '#immersiveTheme#'\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\".b二级\",\"path\":\".b\",\"rule\":\"js:\\nvar d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    desc: '330&&float',\\n    col_type: 'x5_webview_single'\\n});\\n\\nvar tabs = [];\\nvar conts = parseDomForArray(html, 'body&&.b');\\nvar lists = [];\\nfor (var i in conts) {\\n    tabs.push(parseDomForHtml(conts[i], 'h3&&Text'))\\n    lists.push(parseDomForArray(conts[i], 'ul&&li'))\\n}\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\nd.push({\\n    title: parseDomForHtml(html, '.stui-content__detail--h1&&Text').replace('地区', '\\\\n地区').replace('主演', '\\\\n主演'),\\n    desc: parseDomForHtml(html, '.desc--span&&Text'),\\n    pic_url: parseDom(html, '.lazyload&&data-original'),\\n    url: fm,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    try {\\n        for (var i = 0; i < tabs.length; i++) {\\n            var url = \\\"@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！'\\\";\\n            d.push({\\n                title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n                url: url,\\n                col_type: 'flex_button'\\n            })\\n        }\\n\\n    } catch (e) {}\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)集/,'$1').replace('第', '').replace('期', ''),\\n            url: parseDom(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\n\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getVar(MY_URL, '0'));\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"stui-vodlist__media搜索\",\"path\":\"stui-vodlist__media\",\"rule\":\"var d = [];\\r\\nvar list = parseDomForArray(getResCode(), '.stui-vodlist__media&&li');\\r\\nfor (var j in list) {\\r\\n    d.push({\\r\\n        title: parseDomForHtml(list[j], 'a&&title'),\\r\\n        desc: parseDomForHtml(list[j], '.pic-text&&Text'),\\r\\n        img: parseDom(list[j], 'a&&data-original'),\\r\\n        content: parseDomForHtml(list[j], '.detail--h3&&Text'),\\r\\n        url: parseDom(list[j], 'a&&href')+'#immersiveTheme#'\\r\\n    });\\r\\n}\\r\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"myui-vodlist一级\",\"path\":\"myui-vodlist\",\"rule\":\"var d = [];\\nparseDomForArray(getResCode(), '.myui-vodlist&&li').forEach(list => {\\n  d.push({\\n       title: parseDomForHtml(list, 'h4&&Text'),\\n       desc: parseDomForHtml(list, '.pic-tag&&Text'),\\n       pic_url: parseDom(list, '.lazyload&&data-original'),\\n       url: parseDom(list,'a&&href')+'#immersiveTheme#'\\n  });\\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"nav-tabs二级\",\"path\":\"nav-tabs\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    desc: '330&&float',\\n    col_type: 'x5_webview_single'\\n});\\n\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\nd.push({\\n    title: parseDomForHtml(html, '.data,0&&Text').replace('地区：', '  ').replace('年份：', '  ') + '\\\\n' + parseDomForHtml(html, '.data,1&&Text').substring(0, 15) + '\\\\n' + parseDomForHtml(html, '.data,2&&Text'),\\n    desc: parseDomForHtml(html, '.data,3&&Text'),\\n    pic_url: parseDom(html, '.lazyload&&data-original'),\\n    url: fm,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\nvar tabs = [];\\nvar lists = [];\\nif(!arts||!conts){\\nvar arts = parseDomForArray(html, '.nav-tabs&&a');\\nfor (var i in arts) {\\n    tabs.push(parseDomForHtml(arts[i], 'Text'))\\n}\\nvar conts = parseDomForArray(html, 'body&&.myui-content__list||.b');\\nfor (var i in conts) {\\n    lists.push(parseDomForArray(conts[i], 'ul&&li'))\\n}\\n}\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n        var url = \\\"#noLoading#@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\\\";\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: url,\\n            col_type: 'flex_button'\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)集/,'$1').replace('第', '').replace('期', ''),\\n            url: parseDom(list[j], 'a&&href')+lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\ntry {\\n    setTabs(tabs, MY_URL);\\n    setLists(lists, getVar(MY_URL, '0'));\\n} catch (e) {}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"myui-vodlist__media搜索\",\"path\":\"myui-vodlist__media\",\"rule\":\"var d = [];\\r\\nvar list = parseDomForArray(getResCode(), '.myui-vodlist__media&&li');\\r\\nfor (var j in list) {\\r\\n    d.push({\\r\\n        title: parseDomForHtml(list[j], 'a&&title'),\\r\\n        desc: parseDomForHtml(list[j], '.pic-text&&Text'),\\r\\n        pic_url: parseDom(list[j], 'a&&data-original'),\\r\\n        content: parseDomForHtml(list[j], '.detail--h4&&Text'),\\r\\n        url: parseDom(list[j], 'a&&href')+'#immersiveTheme#'\\r\\n    })\\r\\n}\\r\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"vodlist一级\",\"path\":\"vodlist\",\"rule\":\"js:\\r\\nvar res = {};\\r\\nvar d = [];\\ntry{\\nvar list = parseDomForArray(getResCode(), '.vodlist&&li');\\r\\nfor (var j in list) {\\r\\n  d.push({\\r\\n       title: parseDomForHtml(list[j], 'a&&title'),\\r\\n       desc: parseDomForHtml(list[j], 'a&&Text'),\\r\\n       pic_url: parseDom(list[j], '.lazyload&&data-original'),\\r\\n       url: parseDom(list[j],'a&&href')\\r\\n  });\\r\\n}}catch(e){}\\r\\nres.data = d;\\r\\nsetHomeResult(res);\"},{\"col_type\":\"movie_3\",\"name\":\"mo-play-load二级\",\"path\":\"mo-play-load\",\"rule\":\"js:\\nvar d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    desc: '330&&float',\\n    col_type: 'x5_webview_single'\\n});\\n\\n//var lazy = `@lazyRule=.player-wrapper&&script&&Html.js:eval(input.replace(/player_.*?={/,'player_aaaa={'));decodeURIComponent(base64Decode(player_aaaa.url))+'#ignoreImg=true#'+'#isVideo=true#'`;\\n\\nvar arts = parseDomForArray(html, 'body&&.module-tab-content&&.module-tab-item');\\n\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(parseDomForHtml(arts[i], 'span&&Text').replace('[推荐]', ''))\\n}\\n\\nvar conts = parseDomForArray(html, 'body&&.sort-item');\\n\\nvar lists = [];\\nfor (var i in conts) {\\n    lists.push(parseDomForArray(conts[i], 'body&&a'))\\n}\\nvar title = parseDomForHtml(html, 'body&&Text');\\n\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\nd.push({\\n    title: parseDomForHtml(html, '.video-info-items,2&&Text').replace('分类|', '').replace('地区：', '').replace('年份：', ' ').substring(0, 18) + '\\\\n' + '\\\\n' + parseDomForHtml(html, '.video-info-items,1&&Text').substring(0, 18),\\n    pic_url: parseDom(html, '.lazyload&&data-src'),\\n    url: fm,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n        var url = \\\"#noLoading#@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\\\";\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: url,\\n            col_type: 'flex_button'\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)集/, '$1').replace('第', '').replace('期', ''),\\n            url: parseDom(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\ntry {\\n    setTabs(tabs, MY_URL);\\n    setLists(lists, getVar(MY_URL, '0'));\\n} catch (e) {}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"module-item一级\",\"path\":\"module-item\",\"rule\":\"js:\\nvar res = {};\\nvar  d = [];\\nvar html = getResCode();\\nvar list = parseDomForArray(html, 'body&&.module-list&&.module-item');\\nfor (var j in list) {\\n  d.push({\\n       title: parseDomForHtml(list[j], 'a&&title'),\\n       desc: parseDomForHtml(list[j], '.module-item-text&&Text'),\\n       pic_url: parseDom(list[j], '.lazy&&data-src'),\\n       url: parseDom(list[j],'a&&href')+\\\"#immersiveTheme#\\\"\\n  });\\n    }\\nres.data = d;\\nsetHomeResult(res);\"},{\"col_type\":\"movie_3\",\"name\":\"nav-tabs1二级\",\"path\":\"nav-tabs1\",\"rule\":\"js:\\nvar d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    desc: '330&&float',\\n    col_type: 'x5_webview_single'\\n});\\n\\nvar arts = parseDomForArray(html,'body&&.nav-tabs');\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(parseDomForHtml(arts[i], 'a&&Text'))\\n}\\n\\nvar conts = parseDomForArray(html, 'body&&.stui-content__playlist');\\nvar lists =[];\\nfor (var i in conts) {\\n    lists.push(parseDomForArray(conts[i], 'ul&&li'))\\n}\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\nd.push({\\n title: parseDomForHtml(getResCode(), 'p,1&&Text').replace('类型：','').replace('地区：',' ').replace('年份：','').replace('语言：','')+ '\\\\n\\\\n'+parseDomForHtml(getResCode(), 'p,4&&Text').substring(0, 30),\\n    desc:parseDomForHtml(getResCode(), 'p,2&&Text'),\\n pic_url: parseDom(html, 'body&&.lazyload&&data-original'),\\n url: fm,\\n col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    try {\\n        for (var i = 0; i < tabs.length; i++) {\\n            var url = \\\"@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！'\\\";\\n            d.push({\\n                title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n                url: url,\\n                col_type: 'flex_button'\\n            })\\n        }\\n\\n    } catch (e) {}\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)集/,'$1').replace('第', '').replace('期', ''),\\n            url: parseDom(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\n\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getVar(MY_URL, '0'));\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"定位二级\",\"path\":\"erji\",\"rule\":\"var tabs = [];\\r\\nvar lists = [];\\r\\n\\r\\nvar arts = parseDomForArray(html, 线路);\\r\\nvar conts = parseDomForArray(html, 选集);\\r\\n\\r\\nfor (var i in arts) {\\r\\n    tabs.push(parseDomForHtml(arts[i], 线路名))\\r\\n}\\r\\n\\r\\nfor (var i in conts) {\\r\\n    lists.push(parseDomForArray(conts[i], 选集列表))\\r\\n}\\r\\nfunction setTabs(tabs, vari) {\\r\\n    d.push({\\r\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\r\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\r\\n        col_type: 'flex_button'\\r\\n    })\\r\\n    for (var i = 0; i < tabs.length; i++) {\\r\\n        var url = \\\"#noLoading#@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\\\";\\r\\n        d.push({\\r\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\r\\n            url: url,\\r\\n            col_type: 'flex_button'\\r\\n        })\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction setLists(lists, index) {\\r\\n    var list = lists[index];\\r\\n    if (getVar('shsort') == '1') {\\r\\n        var list = lists[index].reverse();\\r\\n    }\\r\\n    for (var j in list) {\\r\\n        d.push({\\r\\n            title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)集/, '$1').replace('第', '').replace('期', ''),\\r\\n            url: parseDom(list[j], 'a&&href') + lazy,\\r\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\r\\n        });\\r\\n    }\\r\\n}\\r\\ntry {\\r\\n    setTabs(tabs, MY_URL);\\r\\n    setLists(lists, getVar(MY_URL, '0'));\\r\\n} catch (e) {}\"}]","icon":""},{"last_chapter_rule":"","title":"模板·Q","author":"发粪涂墙","version":20,"type":"tool","url":"hiker://empty","col_type":"text_center_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nif (getItem(\"start\", \"\") == \"\") {\n    setItem(\"start\", \"1\")\n    confirm({\n        title: '温馨提示',\n        content: '请勿删除或改名此模板，以免依赖此模板的小程序无法使用！！\\n并特别感谢 Reborn LoyDgIk大佬的技术支持!!!',\n        confirm: '',\n        cancel: 'refreshPage()'\n    })\n}\n\naddListener(\"onClose\", $.toString(() => {\n    clearVar(\"template-url\")\n    clearVar(\"template-search-url\")\n    clearVar(\"template-pages-unfold\")\n}))\n\nlet d2 = [{\n    desc: \"输入分类或详情页链接测试匹配\",\n    col_type: \"input\",\n    url: \"input\",\n    title: \"测试\",\n    extra: {\n        onChange: \"putVar('template-url',input)\"\n    }\n},{\n    desc: \"输入搜索链接，**为关键字占位符\",\n    col_type: \"input\",\n    url: \"input\",\n    title: \"测试搜索\",\n    extra: {\n        titleVisible: false,\n        defaultValue: getVar(\"template-search-url\"),\n        onChange: \"putVar('template-search-url',input)\"\n    }\n}, {\n    desc: \"输入搜索关键词测试匹配\",\n    col_type: \"input\",\n    url: $.toString((ruleTitle)=>{\n            return \"hiker://search?s=\" + input +  \"&rule=\"+ ruleTitle;\n    }, MY_RULE.title),\n    title: \"测试搜索\",\n}, {\n    title: \"生成规则\",\n    col_type: \"text_center_1\",\n    url: \"input://////请输入规则名.js:\" + $.toString(() => {\n        var url = getVar('template-url', \"\");\n        if (url.length <= 0 || input.length <= 0) {\n            return \"toast://请先输入链接和规则名\"\n        }\n        var rule = {\n            \"last_chapter_rule\": \"\",\n            \"title\": input,\n            \"author\": \"\",\n            \"url\": url,\n            \"version\": 0,\n            \"col_type\": \"movie_3\",\n            \"class_name\": \"\",\n            \"class_url\": \"\",\n            \"area_name\": \"\",\n            \"area_url\": \"\",\n            \"sort_name\": \"\",\n            \"year_name\": \"\",\n            \"sort_url\": \"\",\n            \"year_url\": \"\",\n            \"find_rule\": \"js:\\nconst {\\n    autoPage\\n} = $.require(\\\"hiker://page/auto?rule=模板·Q\\\");\\nautoPage(getResCode())\",\n            \"search_url\": getVar(\"template-search-url\"),\n            \"titleColor\": \"\",\n            \"group\": \"测试\",\n            \"searchFind\": \"js:\\nconst {\\n    autoPage\\n} = $.require(\\\"hiker://page/auto?rule=模板·Q\\\");\\nautoPage(getResCode())\",\n            \"detail_col_type\": \"movie_1\",\n            \"detail_find_rule\": \"js:\\n//通用匹配\\nputVar(\\\"_x5\\\", $.toString(() => {\\n    var urls = _getUrls()\\n    var newUrls = urls.filter(url => {\\n        return !url.includes(\\\"url=\\\") &&\\n            url.match(/\\\\.mp4|\\\\.m3u8|\\\\.flv/)\\n    });\\n    return newUrls[0]\\n}))\\nvar lazy = \\\"@lazyRule=.js:showLoading('动态解析中，请稍候');'x5Rule://'+input+'@' + getVar('_x5')\\\";\\nconst {\\n    autoPage\\n} = $.require(\\\"hiker://page/auto?rule=模板·Q\\\");\\nautoPage(getResCode())\",\n            \"sdetail_col_type\": \"movie_1\",\n            \"sdetail_find_rule\": \"*\",\n            \"ua\": \"mobile\",\n            \"preRule\": \"\",\n            \"pages\": \"[]\"\n        };\n        return \"海阔视界规则分享，当前分享的是：小程序￥home_rule￥\" + JSON.stringify(rule)\n    })\n},{\ntitle: '文字教程',\ncol_type: 'text_2',\nurl: 'hiker://page/detail?rule=视界论坛R',\nextra: {\n    url: 'https://haikuoshijie.cn/topic/8440#fypage#noHistory#',\n},\n// url: 'web://https://haikuoshijie.cn/topic/8440'\n},{\ntitle: '视频教程',\ncol_type: 'text_2',\nurl: $(\"https://www.bilibili.com/video/BV1dM4y1g7re?share_source=copy_web\").lazyRule(() => {\n        showLoading(\"强力嗅探中，请稍候……\")\n        let inputValue = input\n        return $(inputValue).x5Lazy(() => {\n            var urls = _getUrls()\n            /**\n             * exceptKeys 是排除的关键字列表\n             */\n            var exceptKeys = [\"m3u8djksiej\", \"playm3u8\", \"m3u8.tv\", \"min.css\"]\n            /**\n             * searchKeys 是匹配的关键字列表\n             */\n            var searchKeys = [\".mp3\", \".mp4\", \".m3u8\", \".flv\", \".avi\", \".3gp\", \"mpeg\", \".wmv\", \".mov\", \"rmvb\", \".dat\", \"qqBFdownload\", \"mime=video%2F\"]\n            fy_bridge_app.log(JSON.stringify(urls))\n            for (var i in urls) {\n                if (exceptKeys.every((key)=> !urls[i].includes(key)) \n                    && searchKeys.some((key)=> urls[i].includes(key))\n                    ) {\n                    fy_bridge_app.log(urls[i])\n                    return urls[i]\n                }\n            }\n        })\n    })\n// url: 'web://https://www.bilibili.com/video/BV1dM4y1g7re?share_source=copy_web'\n},{\ntitle: getVar('template-pages-unfold', 'false') === 'true'? '点我收缩模板列表': '点我展开模板列表',\ncol_type: 'text_center_1',\nurl: $(\"#noLoading#\").lazyRule((pageUnfold) => {\n     putVar('template-pages-unfold', pageUnfold === 'true' ? 'false' : 'true')\nrefreshPage(false)\nreturn 'toast://' + (getVar('template-pages-unfold', 'false') === 'true'? '展开成功': '收缩成功')\n}, getVar('template-pages-unfold', 'false'))\n},{\ntitle: '如果上面的测试通过能显示图片，那么就说明是可以生成规则的，依次填入分类链接与搜索链接，第三个框留空点击生成规则，填好名字即可，详细添加分类词之类的请点击上面的两个教程链接参考！！',\ncol_type: 'rich_text'\n}]\nif(getVar('template-pages-unfold', 'false') === 'true') {\nlet d = []\nd.push({\n    title: '点击模板可查看代码：',\n    col_type: 'rich_text'\n})\nlet pageList = MY_RULE.pageList.filter(page => page.name != '字符串处理工具'\n&& page.name != '#Mapping'\n&& page.name != '#auto')\nfor (let page of pageList) {\n    d.push({\n        title: page.name,\n        col_type: 'text_2',\n        url: $().rule((page) => {\n            const {\n                htmlEscape\n            } = $.require(\"hiker://page/stringtool\");\n            let d = []\n            d.push({\n                title: htmlEscape(page.rule),\n                col_type: 'rich_text'\n            })\n            setResult(d)\n        }, page)\n    })\n}\nd2.push.apply(d2, d)\n}\nsetResult(d2)","searchFind":"js:\n/*let surl =  getVar(\"template-search-url\")\nlog(\"surl=\"+surl)\nlet insplits=MY_URL.split(\"#\")\nlog(insplits)\nlet url = surl.replace(\"**\", insplits[1]).replace(\"fypage\", insplits[2])\nlog(\"url=\"+url)\nlet html=request(url,{})\nlog(html);\nlog(MY_URL)*/\nvar lazy = '';\nconst {\n    autoPage\n} = $.require(\"hiker://page/auto?rule=模板·Q\");\nautoPage(getResCode())","search_url":"hiker://empty#**#fypage.js: let surl =  getVar(\"template-search-url\")；；let insplits=input.split(\"#\")；；let url = surl.replace(base64Decode(\"Kio=\"), insplits[1]).replace(base64Decode(\"ZnlwYWdl\"), insplits[2])；；url；；","titleColor":"","group":"#⃣️工具","detail_col_type":"movie_3","detail_find_rule":"js:\nvar lazy = '';\nconst {\n    autoPage\n} = $.require(\"hiker://page/auto?rule=模板·Q\");\nautoPage(getResCode())","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"一级stui-vodlist\",\"path\":\"stui-vodlist\",\"rule\":\"var d = [];\\nvar html = getResCode();\\nvar list = parseDomForArray(html, '.stui-vodlist&&li');\\nfor (var j in list) {\\n    d.push({\\n        title: parseDomForHtml(list[j], 'a&&title'),\\n        desc: parseDomForHtml(list[j], '.pic-text&&Text'),\\n        img: parseDom(list[j], '.lazyload||a&&data-original')+'@Referer=',\\n        url: parseDom(list[j], 'a&&href') + '#immersiveTheme#'\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"二级.b\",\"path\":\".b\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    desc: '330&&float',\\n    col_type: 'x5_webview_single'\\n});\\n\\nvar tabs = [];\\nvar conts = parseDomForArray(html, 'body&&.b');\\nvar lists = [];\\nfor (var i in conts) {\\n    tabs.push(parseDomForHtml(conts[i], 'h3&&Text'))\\n    lists.push(parseDomForArray(conts[i], 'ul&&li'))\\n}\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\nd.push({\\n    title: parseDomForHtml(html, '.stui-content__detail--h1&&Text').replace('地区', '\\\\n地区').replace('主演', '\\\\n主演'),\\n    desc: parseDomForHtml(html, '.desc||.detail-content&&Text'),\\n    pic_url: parseDom(html, '.lazyload&&data-original'),\\n    url: fm,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n        for (var i = 0; i < tabs.length; i++) {\\n            var url = \\\"@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！'\\\";\\n            d.push({\\n                title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n                url: url,\\n                col_type: 'flex_button'\\n            })\\n        }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)集/,'$1').replace('第', '').replace('期', ''),\\n            url: parseDom(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\n\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getVar(MY_URL, '0'));\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"搜索stui-vodlist__media\",\"path\":\"stui-vodlist__media\",\"rule\":\"var d = [];\\nvar list = parseDomForArray(getResCode(), '.stui-vodlist__media&&li');\\nlog('搜索结果')\\nlog(list)\\nif (list.length == 0) throw \\\"搜索为空，可能匹配错误\\\"\\nfor (var j in list) {\\n    d.push({\\n        title: parseDomForHtml(list[j], 'a&&title'),\\n        desc: parseDomForHtml(list[j], '.pic-text&&Text'),\\n        img: parseDom(list[j], 'a&&data-original'),\\n        content: parseDomForHtml(list[j], '.detail--h3&&Text'),\\n        url: parseDom(list[j], 'a&&href')+'#immersiveTheme#'\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"一级myui-vodlist\",\"path\":\"myui-vodlist\",\"rule\":\"var d = []\\nvar list = pdfa(getResCode(), '.myui-vodlist&&li')\\nfor (var j in list) {\\n    d.push({\\n        title: pdfh(list[j], 'h4&&Text'),\\n        desc: pdfh(list[j], '.pic-tag||.pic-text&&Text'),\\n        img: pd(list[j], '.lazyload&&data-original'),\\n        url: pd(list[j], 'a&&href') + '#immersiveTheme#'\\n    })\\n}\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"二级nav-tabs\",\"path\":\"nav-tabs\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    desc: '330&&float',\\n    col_type: 'x5_webview_single'\\n});\\n\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\nd.push({\\n    title: pdfh(html, '.data&&Text').replace('地区：', '  ').replace('年份：', '  ') + '\\\\n' + pdfh(html, '.data,1&&Text').substring(0, 15) + '\\\\n' + pdfh(html, '.data,2&&Text'),\\n    desc: pdfh(html, '.data,3&&Text'),\\n    img: pd(html, '.lazyload&&data-original'),\\n    url: fm,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nvar tabs = [];\\nvar lists = [];\\nif (!arts || !conts) {\\n    var arts = pdfa(html, '.nav-tabs&&a');\\n    //log(arts);\\n\\n    for (var i in arts) {\\n        tabs.push(pdfh(arts[i], 'Text'))\\n    }\\n    var conts = pdfa(html, 'body&&.myui-content__list||.b');\\n    // log(conts);\\n\\n    for (let item of conts) {\\n        lists.push(pdfa(item, 'ul&&li'));\\n    }\\n}\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n        var url = \\\"#noLoading#@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\\\";\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: url,\\n            col_type: 'flex_button'\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: pdfh(list[j], 'a&&Text').replace(/第(\\\\d+)集/, '$1').replace('第', '').replace('期', ''),\\n            url: pd(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2',\\n            extra: {\\n                blockRules: [\\n                    \\\".jpg\\\",\\n                    \\\".jpeg\\\",\\n                    \\\".png\\\",\\n                    \\\".mp4\\\",\\n                    \\\".m3u8\\\",\\n                    \\\".gif\\\"\\n                ]\\n            }\\n        });\\n    }\\n}\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getVar(MY_URL, '0'));\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"搜索myui-vodlist__media\",\"path\":\"myui-vodlist__media\",\"rule\":\"var d = [];\\r\\nvar list = parseDomForArray(getResCode(), '#searchList&&li');\\nlog('搜索结果')\\nlog(list)\\nif (list.length == 0) throw \\\"搜索为空，可能匹配错误\\\"\\r\\nfor (var j in list) {\\r\\n    d.push({\\r\\n        title: parseDomForHtml(list[j], 'a&&title'),\\r\\n        desc: parseDomForHtml(list[j], '.pic-text&&Text'),\\r\\n        pic_url: parseDom(list[j], 'a&&data-original'),\\r\\n        content: parseDomForHtml(list[j], '.detail--h4&&Text'),\\r\\n        url: parseDom(list[j], 'a&&href')+'#immersiveTheme#'\\r\\n    })\\r\\n}\\r\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"一级vodlist\",\"path\":\"vodlist\",\"rule\":\"var d = [];\\nvar list = parseDomForArray(getResCode(), '.vodlist&&li');\\nfor (var j in list) {\\n  d.push({\\n       title: parseDomForHtml(list[j], 'a&&title'),\\n       desc: parseDomForHtml(list[j], 'a&&Text'),\\n       pic_url: parseDom(list[j], '.lazyload&&data-original')+'@Referer=',\\n       url: parseDom(list[j],'a&&href')\\n  });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"二级mo-play-load\",\"path\":\"mo-play-load\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    desc: '330&&float',\\n    col_type: 'x5_webview_single'\\n});\\n\\nvar arts = parseDomForArray(html, 'body&&.module-tab-content&&.module-tab-item');\\n\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(parseDomForHtml(arts[i], 'span&&Text').replace('[推荐]', ''))\\n}\\n\\nvar conts = parseDomForArray(html, 'body&&.sort-item');\\n\\nvar lists = [];\\nfor (var i in conts) {\\n    lists.push(parseDomForArray(conts[i], 'body&&a'))\\n}\\nvar title = parseDomForHtml(html, 'body&&Text');\\n\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\nd.push({\\n    title: parseDomForHtml(html, '.video-info-items,2&&Text').replace('分类|', '').replace('地区：', '').replace('年份：', ' ').substring(0, 18) + '\\\\n' + '\\\\n' + parseDomForHtml(html, '.video-info-items,1&&Text').substring(0, 18),\\n    pic_url: parseDom(html, '.lazyload&&data-src'),\\n    url: fm,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n        var url = \\\"#noLoading#@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\\\";\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: url,\\n            col_type: 'flex_button'\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)集/, '$1').replace('第', '').replace('期', ''),\\n            url: parseDom(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\n\\n    setTabs(tabs, MY_URL);\\n    setLists(lists, getVar(MY_URL, '0'));\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"二级nav-tabs1\",\"path\":\"nav-tabs1\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    desc: '330&&float',\\n    col_type: 'x5_webview_single'\\n});\\n\\nvar arts = parseDomForArray(html,'.nav-tabs&&a');\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(parseDomForHtml(arts[i], 'a&&Text'))\\n}\\n\\nvar conts = parseDomForArray(html, 'body&&.stui-content__playlist||.b');\\nvar lists =[];\\nfor (var i in conts) {\\n    lists.push(parseDomForArray(conts[i], 'ul&&li'))\\n}\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\nd.push({\\n title: parseDomForHtml(getResCode(), 'p,1&&Text').replace('类型：','').replace('地区：',' ').replace('年份：','').replace('语言：','')+ '\\\\n\\\\n'+parseDomForHtml(getResCode(), 'p,4&&Text').substring(0, 30),\\n    desc:parseDomForHtml(getResCode(), 'p,2&&Text'),\\n pic_url: parseDom(html, '.lazyload&&data-original'),\\n url: fm,\\n col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n        for (var i = 0; i < tabs.length; i++) {\\n            var url = \\\"@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！'\\\";\\n            d.push({\\n                title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n                url: url,\\n                col_type: 'flex_button'\\n            })\\n        }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)集/,'$1').replace('第', '').replace('期', ''),\\n            url: parseDom(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\n\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getVar(MY_URL, '0'));\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"定位二级\",\"path\":\"erji\",\"rule\":\"var tabs = [];\\nvar lists = [];\\n\\nvar arts = pdfa(html, 线路);\\nvar conts = pdfa(html, 选集);\\n\\nfor (var i in arts) {\\n    tabs.push(pdfh(arts[i], 线路名))\\n}\\n\\nfor (var i in conts) {\\n    lists.push(pdfa(conts[i], 选集列表))\\n}\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n        var url = \\\"#noLoading#@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\\\";\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: url,\\n            col_type: 'flex_button'\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: pdfh(list[j], 'a&&Text'),\\n            url: pd(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\ntry {\\n    setTabs(tabs, MY_URL);\\n    setLists(lists, getVar(MY_URL, '0'));\\n} catch (e) {}\"},{\"col_type\":\"movie_3\",\"name\":\"二级play_source_tab\",\"path\":\"play_source_tab\",\"rule\":\"var d = [];\\nvar html = getResCode();\\nd.push({\\n    desc: '330&&float',\\n    col_type: 'x5_webview_single'\\n});\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\ntry {\\nd.push({\\n    title: parseDomForHtml(html, '.remarks&&Text') + '\\\\n' + parseDomForHtml(html, '.s-top-info-detail&&a&&Text')+ parseDomForHtml(html, '.s-top-info-detail&&a,1&&Text')+ parseDomForHtml(html, '.s-top-info-detail&&a,2&&Text') + '\\\\n““简介：不能用就删掉吧””',\\n    desc: parseDomForHtml(html, '.desc_txt&&Text').substring(0, 20),\\n    img: parseDom(html, '.img-cover||.vod-detail-bj&&src'),\\n    url: fm,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n} catch (e) {}\\n\\nvar arts = parseDomForArray(html, '.play_source_tab&&a');\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(parseDomForHtml(arts[i], 'a&&Text'))\\n}\\nvar conts = parseDomForArray(html, 'body&&#playsx');\\nvar lists = [];\\nfor (var i in conts) {\\n    lists.push(parseDomForArray(conts[i], 'ul&&li'))\\n}\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n        for (var i = 0; i < tabs.length; i++) {\\n            var url = \\\"@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！'\\\";\\n            d.push({\\n                title: (getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i]).replace('',''),\\n                url: url,\\n                col_type: 'flex_button'\\n            })\\n        }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)集/,'$1').replace('第', '').replace('期', ''),\\n            url: parseDom(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\n\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getVar(MY_URL, '0'));\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"二级fed-play-item\",\"path\":\"fed-play-item\",\"rule\":\"var d = [];\\nvar html = getResCode();\\nd.push({\\n    desc: '330&&float',\\n    col_type: 'x5_webview_single'\\n});\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\nvar arts = parseDomForArray(html, 'body&&.fed-drop-btns');\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(parseDomForHtml(arts[i], 'a&&Text'))\\n}\\nvar conts = parseDomForArray(html, 'body&&.fed-play-item');\\nvar lists = [];\\nfor (var i in conts) {\\n    lists.push(parseDomForArray(conts[i], 'body&&.fed-btns-info'))\\n}\\nd.push({\\n    title: parseDomForHtml(html, 'dd&&li,3&&Text') + '\\\\n' + parseDomForHtml(html, 'dd&&li,4&&Text').substring(0, 15) + '\\\\n' + parseDomForHtml(html, 'dd&&li,5&&Text').substring(0, 15),\\n    desc: parseDomForHtml(html, 'dd&&li,6&&Text').substring(0, 25),\\n    pic_url: parseDom(html, '.fed-lazy&&data-original'),\\n    url: fm,\\n    col_type: 'movie_1_vertical_pic'\\n});\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n        var url = \\\"@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！'\\\";\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: url,\\n            col_type: 'flex_button'\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)集/, '$1').replace('第', '').replace('期', ''),\\n            url: parseDom(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\n\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getVar(MY_URL, '0'));\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"搜索dl\",\"path\":\"dl\",\"rule\":\"var d = [];\\nvar list = parseDomForArray(getResCode(), 'body&&dl');\\nlog('搜索结果')\\nlog(list)\\nif (list.length == 0) throw \\\"搜索为空，可能匹配错误\\\"\\nfor (var j in list) {\\n  d.push({\\n       title: parseDomForHtml(list[j], 'h1&&Text'),\\n       desc: parseDomForHtml(list[j], '.fed-list-remarks&&Text'),\\n\\t    content: parseDomForHtml(list[j], '.fed-part-esan--span&&Text'),\\n       img: parseDom(list[j], 'a&&data-original'),\\n       url: parseDom(list[j], 'a&&href')\\n  });\\n}\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"#Mapping\",\"path\":\"Mapping\",\"rule\":\"js:\\n$.exports = {\\n    \\\"home\\\": [\\n        //\\n        {\\n            keys: [\\\" b \\\"],\\n            url: \\\".b\\\",\\n            //     allKey: true,\\n        },\\n        {\\n            keys: [\\\"nav-tabs\\\"],\\n            url: \\\"nav-tabs\\\",\\n        },\\n        {\\n            keys: [\\\"myui-content__list\\\"],\\n            url: \\\"myui-content__list\\\",\\n        },\\n        {\\n            keys: [\\\"nav-tabs\\\",\\\"stui-content__playlist\\\"],\\n            url: \\\"nav-tabs1\\\",\\n            allKey: true,\\n        },\\n        {\\n            keys: [\\\"h3\\\",\\\"stui-content__playlist\\\"],\\n            url: \\\"h3\\\",\\n            allKey: true,\\n        },\\n        {\\n            keys: [\\\"myui-vodlist \\\"],\\n            url: \\\"myui-vodlist\\\",\\n        },\\n        {\\n            keys: [\\\"mo-movs-item\\\"],\\n            url: \\\"mo-movs-item\\\",\\n        },\\n        {\\n            keys: [\\\"module-tab-item\\\"],\\n            url: \\\"module-tab-item\\\",\\n            //     allKey: true,\\n        },\\n        {\\n            keys: [\\\"stui-vodlist \\\"],\\n            url: \\\"stui-vodlist\\\",\\n            //     allKey: true,\\n        },\\n        {\\n            keys: [\\\"play_source_tab\\\"],\\n            url: \\\"play_source_tab\\\",\\n        },\\n        {\\n            keys: [\\\"fed-play-item\\\"],\\n            url: \\\"fed-play-item\\\",\\n        },\\n        {\\n            keys: [\\\"module-items\\\"],\\n            url: \\\"module-items\\\",\\n        },\\n        {\\n            keys: [\\\"vodlist \\\",\\\"lazyload\\\"],\\n            url: \\\"vodlist\\\",\\n            allKey: true,\\n        },\\n        {\\n            keys: [\\\"mo-play-load\\\"],\\n            url: \\\"mo-play-load\\\",\\n        },\\n        {\\n            keys: [\\\"fed-list-title\\\"],\\n            url: \\\"fed-list-title\\\",\\n            //allKey: true,\\n        },\\n        {\\n            keys: [\\\"pack-ykpack\\\\\\\"\\\"],\\n            url: \\\"pack-ykpack\\\",\\n        },/*\\n        {\\n            keys: [\\\"item\\\"],\\n            url: \\\"item\\\",\\n        },*/\\n        {\\n            keys: [\\\"data_list\\\"],\\n            url: \\\"data_list\\\",\\n        },\\n    ],\\n    \\\"search\\\": [\\n        // search 里写搜索的子页面映射\\n        {\\n            keys: [\\\"stui-vodlist__media\\\"],\\n            url: \\\"stui-vodlist__media\\\",\\n        },\\n        {\\n            keys: [\\\"myui-vodlist__media\\\"],\\n            url: \\\"myui-vodlist__media\\\",\\n        },\\n        {\\n            keys: [\\\"module-search-item\\\"],\\n            url: \\\"module-search-item\\\",\\n        },\\n        {\\n            keys: [\\\"dl \\\"],\\n            url: \\\"dl\\\",\\n            allKey: true,\\n        },\\n    ]\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"#auto\",\"path\":\"auto\",\"rule\":\"js:\\n// 获取该关键字的子页面代码\\nfunction getPageSource(key) {\\n    let src = request(\\\"hiker://page/\\\" + key + \\\"?rule=模板·Q\\\");\\n    // log(src)\\n    src = JSON.parse(src).rule;\\n    return src;\\n}\\nconst sourceMap = $.require(\\\"hiker://page/Mapping?rule=模板·Q\\\");\\n\\nfunction autoPage(htmlsrc, type) {\\n    let pageRules = [],\\n        htmlSource = htmlsrc,\\n        pageType,\\n        mMapping;\\n    if (type !== undefined) {\\n        pageType = type;\\n    } else {\\n        pageType = MY_TYPE;\\n    }\\n    mMapping = sourceMap[pageType];\\n    if (mMapping === undefined || !Array.isArray(mMapping)) {\\n        throw new Error(\\\"不存在\\\" + pageType + \\\"类型的模板\\\");\\n    }\\n    for (let item of mMapping) {\\n        if (item.allKey) {\\n            if (item.keys.every(key => htmlSource.includes(key))) {\\n                pageRules.push(item);\\n            }\\n        } else {\\n            if (item.keys.some(key => htmlSource.includes(key))) {\\n                pageRules.push(item);\\n            }\\n        }\\n    }\\n    if(pageRules.length == 0) {\\n        log(\\\"暂无合适的模板\\\");\\n    }\\n    for (let pageRule of pageRules) {\\n        log(\\\"正在匹配：\\\" + pageRule.url);\\n        try {\\n            eval.call(null, \\\";(function(){\\\" + getPageSource(pageRule.url) + \\\"})()\\\");\\n            log(\\\"匹配模板成功，正在结束匹配进程\\\");\\n            break;\\n        } catch (e) {\\n            log(\\\"匹配模板错误\\\");\\n            log(e.toString())\\n            log(\\\"正在匹配下一个模板......\\\")\\n            if (pageRule.url == pageRules[pageRules.length - 1].url) {\\n                log(\\\"已匹配到最后一个模板，暂无合适的模板\\\");\\n                setResult([]);\\n            }\\n        }\\n    }\\n\\n}\\n$.exports.autoPage = autoPage;\"},{\"col_type\":\"movie_3\",\"name\":\"一级pack-ykpack\",\"path\":\"pack-ykpack\",\"rule\":\"var d =[];\\nvar list = parseDomForArray(getResCode(), 'body&&.pack-ykpack');\\nfor (var j in list) {\\n  d.push({\\n       title: parseDomForHtml(list[j], 'a&&title'),\\n       desc: parseDomForHtml(list[j], 'span,-1&&Text'),\\n       img: parseDom(list[j], '.eclazy&&data-original')+'@Referer=',\\n       url: parseDom(list[j],'a&&href')+ '#immersiveTheme#'\\n  });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"一级module-items\",\"path\":\"module-items\",\"rule\":\"var d = [];\\nvar html = getResCode();\\nvar list = pdfa(html, '.module-items&&.module-item');\\nfor (var j in list) {\\n    d.push({\\n        title: pdfh(list[j], 'a&&title'),\\n        desc: pdfh(list[j], '.module-item-text&&Text'),\\n        pic_url: pd(list[j], 'img||.lazy&&data-src')+'@Referer=',\\n        url: pd(list[j], 'a&&href') + \\\"#immersiveTheme#\\\"\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"二级module-tab-item\",\"path\":\"module-tab-item\",\"rule\":\"var d = [];\\nvar html = getResCode();\\nd.push({\\n    desc: '330&&float',\\n    col_type: 'x5_webview_single'\\n});\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\ntry {\\n    var title = pdfa(html, 'body--a&&.tag-link');\\n} catch (e) {\\n    var title = '';\\n}\\nvar T = [];\\nfor (var i in title) {\\n    T.push(pdfh(title[i], 'a&&Text'))\\n}\\nd.push({\\n    title: T.join('  ') + '\\\\n' + pdfh(html, '.video-info-items,1&&Text').split('/').join('  ').substring(0, 20) + '\\\\n' + pdfh(html, '.video-info-items&&Text').split('/').join('  ').substring(0, 20),\\n    desc: pdfh(html, '.video-info-items,2&&Text'),\\n    img: pd(html, '.lazyload&&data-original||data-src||src'),\\n    url: fm,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nvar arts = pdfa(html, 'body&&.module-tab-item');\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(pdfh(arts[i], 'span&&Text'))\\n}\\nvar conts = pdfa(html, 'body&&.scroll-box-y');\\nvar lists = [];\\nfor (var i in conts) {\\n    lists.push(pdfa(conts[i], 'body&&a'))\\n}\\n\\nfunction setTabs(tabs, vari) {\\nd.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n        var url = \\\"@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！'\\\";\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: url,\\n            col_type: 'flex_button'\\n        })\\n    }\\n    d.push({\\n        col_type: 'line_blank'\\n    })\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: pdfh(list[j], 'a&&Text').replace(/第(\\\\d+)集/, '$1').replace('第', '').replace('期', ''),\\n            url: pd(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2',\\n            extra: {\\n                blockRules: [\\n                    \\\".jpg\\\",\\n                    \\\".jpeg\\\",\\n                    \\\".png\\\",\\n                    \\\".mp4\\\",\\n                    \\\".m3u8\\\",\\n                    \\\".gif\\\"\\n                ]\\n            }\\n        });\\n    }\\n}\\ntry {\\n    setTabs(tabs, MY_URL);\\n    setLists(lists, getVar(MY_URL, '0'));\\n} catch (e) {\\n    d.push({\\n        title: '没有选集',\\n        col_type: 'text_center_1'\\n    })\\n}\\nd.push({\\n    title: '<br>',\\n    col_type: 'rich_text'\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"搜索module-search-item\",\"path\":\"module-search-item\",\"rule\":\"var d = [];\\nvar list = parseDomForArray(getResCode(), 'body&&.module-search-item');\\nlog('搜索结果')\\nlog(list)\\nif (list.length == 0) throw \\\"搜索为空，可能匹配错误\\\"\\nfor (var j in list) {\\n    d.push({\\n        title: parseDomForHtml(list[j], 'h3&&Text'),\\n        desc: parseDomForHtml(list[j], '.video-serial&&Text'),\\n        content: parseDomForHtml(list[j], '.video-info-aux&&Text'),\\n        img: parseDom(list[j], 'img&&data-original||data-src'),\\n        url: parseDom(list[j], '.video-serial&&href') + '#immersiveTheme#'\\n    });\\n}\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"一级item\",\"path\":\"item\",\"rule\":\"var d = [];\\nvar list = pdfa(getResCode(), 'body&&.item');\\nfor (let i in list) {\\n    d.push({\\n        title: parseDomForHtml(list[i], 'img&&alt'),\\n        desc: parseDomForHtml(list[i], 'p&&Text'),\\n        pic_url: parseDom(list[i], 'img&&src'),\\n        url: parseDom(list[i], 'a&&href'),\\n        col_type: 'movie_3'\\n    })\\n}\\nsetResult(d)\"},{\"name\":\"一级data_list\",\"path\":\"data_list\",\"rule\":\"var d = [];\\nvar list = parseDomForArray(getResCode(), '#data_list&&li');\\nfor (let i in list) {\\n    d.push({\\n        title: parseDomForHtml(list[i], 'a&&title'),\\n        desc: parseDomForHtml(list[i], 'em&&Text'),\\n        pic_url: parseDom(list[i], 'img&&data-src'),\\n        url: parseDom(list[i], 'a&&href'),\\n        col_type: 'movie_3'\\n    })\\n}\\nsetResult(d)\"},{\"name\":\"二级h3\",\"path\":\"h3\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    desc:'330&&float',\\n\\t\\tcol_type: 'x5_webview_single'\\n});\\n\\nvar arts = parseDomForArray(html,'body&&.stui-pannel:has(.stui-content__playlist)');\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(parseDomForHtml(arts[i], 'h3&&Text'))\\n}\\n\\nvar conts = parseDomForArray(html, 'body&&.stui-content__playlist');\\nvar lists =[];\\nfor (var i in conts) {\\n    lists.push(parseDomForArray(conts[i], 'ul&&li'))\\n}\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\nd.push({\\n\\ttitle: parseDomForHtml(html, '.data,2&&Text').replace('类型：','').replace('地区：','').replace('年份：',' ').substring(0, 18)+ '\\\\n' + parseDomForHtml(html,'.data,1&&Text').substring(0, 15)+'\\\\n'+parseDomForHtml(html, '.data&&Text').substring(0, 15),\\n\\tdesc:parseDomForHtml(html,'.detail-sketch||.data,3||#desc&&Text'),\\n\\tpic_url: parseDom(html, '.lazyload&&data-original'),\\n\\turl: fm,\\n\\tcol_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n        var url = \\\"@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！'\\\";\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: url,\\n            col_type: 'flex_button'\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)集/, '$1').replace('第', '').replace('期', ''),\\n            url: parseDom(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\n\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getVar(MY_URL, '0'));\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"一级fed-list-title\",\"path\":\"fed-list-title\",\"rule\":\"var d = [];\\nvar list = parseDomForArray(getResCode(), '.fed-list-info&&li');\\nfor (var j in list) {\\n  d.push({\\n       title: parseDomForHtml(list[j], '.fed-list-title&&Text'),\\n       desc: parseDomForHtml(list[j], '.fed-text-center&&Text'),\\n       img: parseDom(list[j], 'a&&data-original')+'@Referer=',\\n       url: parseDom(list[j], 'a&&href')\\n  });\\n}\\nsetResult(d)\"},{\"name\":\"二级myui-content__list\",\"path\":\"myui-content__list\",\"rule\":\"var d = [];\\nvar html = getResCode();\\nd.push({\\n    desc:'330&&float',\\n\\t\\tcol_type: 'x5_webview_single'\\n});\\ntry {\\n    var fm = set_switch\\n} catch (e) {\\n    fm = MY_URL\\n}\\nd.push({\\n    title: parseDomForHtml(html, '.data,0&&Text').replace('地区：', '  ').replace('年份：', '  ') + '\\\\n' + parseDomForHtml(html, '.data,1&&Text').substring(0, 15) + '\\\\n' + parseDomForHtml(html, '.data,2&&Text'),\\n    desc: parseDomForHtml(html, '.data,3&&Text'),\\n    pic_url: parseDom(html, '.lazyload&&data-original'),\\n    url: fm,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nvar arts = parseDomForArray(html, 'body&&.myui-panel-box:has(.myui-content__list)');\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(parseDomForHtml(arts[i], 'h3&&Text'))\\n}\\n\\nvar conts = parseDomForArray(html, 'body&&.myui-content__list');\\nvar lists = [];\\nfor (var i in conts) {\\n    lists.push(parseDomForArray(conts[i], 'ul&&li'))\\n}\\n\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n        var url = \\\"#noLoading#@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\\\";\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: url,\\n            col_type: 'flex_button'\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: parseDomForHtml(list[j], 'a&&Text'),\\n            url: parseDom(list[j], 'a&&href')+lazy,\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\ntry {\\n    setTabs(tabs, MY_URL);\\n    setLists(lists, getVar(MY_URL, '0'));\\n} catch (e) {}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"字符串处理工具\",\"path\":\"stringtool\",\"rule\":\"js:\\nconst matchList  = {\\n  // \\\"<\\\":\\\"&lt;\\\",\\n  // \\\">\\\": \\\"&gt;\\\",\\n  // \\\"&\\\": \\\"&amp;\\\",\\n  // '\\\"': \\\"&quot;\\\",\\n  // \\\"'\\\": \\\"acute;\\\",\\n  \\\" \\\": \\\"&nbsp;\\\",\\n  \\\"\\\\n\\\":\\\"<br>\\\"\\n}\\n// 字符过滤器\\nfunction htmlEscape(text){\\n  let regStr = '(' + Object.keys(matchList).toString() + ')'\\n  regStr = regStr.replace(/,/g, ')|(')  \\n  const regExp = new RegExp(regStr, 'g')\\n  return text.replace(regExp, match => matchList[match])\\n}\\n$.exports.htmlEscape = htmlEscape\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类1\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getVar(MY_RULE.group, \\\"0\\\")\\nconst cate_temp_json = getVar(MY_RULE.title, JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putVar(MY_RULE.group, fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putVar(MY_RULE.title, JSON.stringify(new_cate))\\n                        putVar(MY_RULE.url, input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putVar(MY_RULE.title, JSON.stringify(params.cate_temp))\\n                        putVar(MY_RULE.url, input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"一级公共模板\",\"path\":\"yiji\",\"rule\":\"function 一级() {};\\nObject.assign(一级.prototype, {\\n    constructor: 一级,\\n    test() {},\\n    获取源码(url, header) {\\n        return fetch(true_url, {\\n            headers: header || {\\n                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'\\n            }\\n        }) // 默认统一使用PC UA\\n    },\\n    获取正确链接(page, regex) {\\n        let true_url = getMyVar('header.url', MY_URL);\\n        let 链接处理工具 = $.require('hiker://page/url-processor?rule=模板·Q')\\n        true_url = 链接处理工具\\n            .链接(true_url)\\n            .页码(page)\\n            .插入新处理规则(regex || [])\\n            .获取处理结果();\\n        return true_url;\\n    },\\n    打造分类(ruleList) {\\n        // '0' 为默认不折叠，'1' 为默认折叠\\n        const 当前折叠状态 = getMyVar('header.fold', '1')\\n\\n        // 引入动态分类依赖\\n        let htmlCategories = $.require('hiker://page/categories-header?rule=模板·Q')\\nvar getRangeColors = function(){\\n        return '#'+('00000'+(Math.random()*0x1000000<<0).toString(16)).substr(-6);\\n      }\\n        htmlCategories.界面(d)\\n            // .分类链接(true_url)\\n            .源码(html)\\n            .页码(page)\\n            .添加分类定位(ruleList)\\n            .开启内置折叠功能() // 必须\\n            .折叠(当前折叠状态) // 必须\\n            .选中的分类颜色(getRangeColors())\\n         //   .选中的分类颜色('#098AC1')\\n            .开始打造分类();\\n    },\\n    生成片单(d, html) {\\n        let list = parseDomForArray(html, 列表);\\n        for (let j in list) {\\n            let img = parseDom(list[j], 图片);\\n            d.push({\\n                title: parseDomForHtml(list[j], 标题),\\n                desc: parseDomForHtml(list[j], 描述),\\n                img: img + '@Referer=' + img,\\n                url: parseDom(list[j], 链接) + \\\"#immersiveTheme#\\\"\\n            });\\n        }\\n    }\\n})\\n\\n$.exports = new 一级();\\n$.exports\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类2\",\"path\":\"categories-header\",\"rule\":\"/**\\n * 本地网页插件链接 hiker://files/rules/js/categories-header.js\\n * 子页面链接 hiker://page/categories-header\\n * 道长仓库链接 http://hiker.nokia.press/hikerule/rulelist.json?id=2705\\n * 码云 Gitee 链接 https://gitee.com/reborn0/HikerRules/raw/master/plugins/categories-header.js\\n */\\n/**\\n * Object.assign 用法参考链接\\n *\\n * 1.https://www.daimajiaoliu.com/daima/47139a9e7100407\\n * 2.https://segmentfault.com/a/1190000011778875\\n * 3.https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\\n */\\n// 利用 Symbol 实现私有变量和私有方法，外界不可访问（参考链接2）\\nconst symbolMap = {\\n    // checkParams: Symbol('checkParams'),\\n    mLayout: Symbol('mLayout'),\\n    true_url: Symbol('true_url'),\\n    mPage: Symbol('mPage'),\\n    src: Symbol('src'),\\n    ruleObjList: Symbol('ruleObjList'),\\n    mFold: Symbol('mFold'),\\n    mFoldInnerEnable: Symbol('mFoldInnerEnable'),\\n    mFoldIndex: Symbol('mFoldIndex'),\\n    mFoldLayout: Symbol('mFoldLayout'),\\n    mColor: Symbol('mColor'),\\n    mTag: Symbol('mTag'),\\n}\\n\\nfunction CategoriesHeader(color) {\\n    // 'use strict';\\n    // ...\\n    // this[symbolMap.listRule] = []\\n    // this[symbolMap.subListRule] = []\\n    this[symbolMap.mColor] = color || \\\"#FA7298\\\";\\n    this[symbolMap.ruleObjList] = []\\n    this.VARMAP = {\\n        CATEGORY: \\\"header.category\\\",\\n        URL: \\\"header.url\\\",\\n        FOLD: \\\"header.fold\\\",\\n    }\\n    this[symbolMap.mFoldLayout] = {\\n        injectIndex: 1\\n    }\\n    this[symbolMap.mFoldIndex] = 1\\n}\\n\\nObject.assign(CategoriesHeader.prototype, {\\n    // Override 构造方法，相当于 function.prototype.constructor = (...) => {...}，new function() 的时候会自动执行\\n    constructor: CategoriesHeader,\\n    // 定义私有方法\\n    VERSION: 202112011900,\\n    checkParams() {\\n        if (!this[symbolMap.mLayout]) {\\n            throw new Error(\\\"请调用 layout(d) 传入当前界面\\\")\\n        }\\n        if (!(this[symbolMap.src] || this[symbolMap.true_url])) {\\n            throw new Error(\\\"请调用 trueUrl(url) 传入当前分类的链接或调用 html(mHtml) 传入当前分类页面的源码\\\")\\n        }\\n        if (!this[symbolMap.mPage]) {\\n            throw new Error(\\\"请调用 page(mPage) 传入当前页数\\\")\\n        }\\n        if (this[symbolMap.ruleObjList].length < 1) {\\n            throw new Error(\\\"请调用相关方法传入定位规则\\\")\\n        }\\n        if (!this[symbolMap.mFold]) {\\n            this[symbolMap.mFold] = '0'\\n        }\\n    },\\n    layout(mLayout) {\\n        this[symbolMap.mLayout] = mLayout\\n        return this\\n    },\\n    trueUrl(url) {\\n        this[symbolMap.true_url] = url\\n        return this\\n    },\\n    page(mPage) {\\n        if (typeof (mPage) === 'string') {\\n            mPage = parseInt(mPage)\\n        }\\n        this[symbolMap.mPage] = mPage\\n        return this\\n    },\\n    html(mSrc) {\\n        this[symbolMap.src] = mSrc\\n        return this\\n    },\\n    list(rule) {\\n        if (this[symbolMap.ruleObjList].length > 0) {\\n            throw new Error(\\\"list(rule) add(ruleObj) 只能二选一！\\\")\\n        }\\n        this[symbolMap.ruleObjList] = [{}]\\n        this[symbolMap.ruleObjList][0].listRule = rule\\n        this[symbolMap.ruleObjList][0]['一级分类'] = rule\\n        return this\\n    },\\n    subList(rule) {\\n        if (this[symbolMap.ruleObjList].length > 1) {\\n            throw new Error(\\\"subList(rule) add(ruleObj) 只能二选一！\\\")\\n        }\\n        if (!this[symbolMap.ruleObjList][0] || (!this[symbolMap.ruleObjList][0].listRule && !this[symbolMap.ruleObjList][0]['一级分类'])) {\\n            throw new Error(\\\"请先调用 list(rule) 或 一级分类(rule) 定位一级分类\\\")\\n        }\\n        this[symbolMap.ruleObjList][0].subListRule = rule\\n        this[symbolMap.ruleObjList][0]['子分类'] = rule\\n        return this\\n    },\\n    title(rule) {\\n        if (this[symbolMap.ruleObjList].length > 1) {\\n            throw new Error(\\\"title(rule) add(ruleObj) 只能二选一！\\\")\\n        }\\n        if (!this[symbolMap.ruleObjList][0] || (!this[symbolMap.ruleObjList][0].listRule && !this[symbolMap.ruleObjList][0]['一级分类'])) {\\n            throw new Error(\\\"请先调用 list(rule) 或 一级分类(rule) 定位一级分类\\\")\\n        }\\n        this[symbolMap.ruleObjList][0].titleRule = rule\\n        this[symbolMap.ruleObjList][0]['分类标题'] = this[symbolMap.ruleObjList][0].titleRule\\n        return this\\n    },\\n    url(rule) {\\n        if (this[symbolMap.ruleObjList].length > 1) {\\n            throw new Error(\\\"url(rule) add(ruleObj) 只能二选一！\\\")\\n        }\\n        if (!this[symbolMap.ruleObjList][0] || (!this[symbolMap.ruleObjList][0].listRule && !this[symbolMap.ruleObjList][0]['一级分类'])) {\\n            throw new Error(\\\"请先调用 list(rule) 或 一级分类(rule) 定位一级分类\\\")\\n        }\\n        this[symbolMap.ruleObjList][0].urlRule = rule\\n        this[symbolMap.ruleObjList][0]['分类链接'] = this[symbolMap.ruleObjList][0].urlRule\\n        return this\\n    },\\n    /**\\n     * 是否开启折叠功能\\n     *\\n     * @param enabled true 表示开启，false 表示禁用\\n     * @returns {CategoriesHeader}\\n     */\\n    foldInner(enabled) {\\n        if (!(typeof (enabled) === 'boolean')) {\\n            throw new Error(\\\"请传入 true 或 false 表示开启或关闭折叠功能！\\\")\\n        }\\n        this[symbolMap.mFoldInnerEnable] = enabled\\n        return this\\n    },\\n    /**\\n     * 从第 index 行开始折叠\\n     *\\n     * @param index 开始折叠的行数\\n     * @returns {CategoriesHeader}\\n     */\\n    foldIndex(index) {\\n        if (!(typeof (index) === 'number')) {\\n            throw new Error(\\\"开始折叠行请传入数字！\\\")\\n        }\\n        if (index < 1) {\\n            throw new Error(\\\"开始折叠行请传入大于 0 的整数！\\\")\\n        }\\n        this[symbolMap.mFoldIndex] = index || 1;\\n        return this\\n    },\\n    /**\\n     * 折叠按钮的界面\\n     *\\n     * @param layout 与 d.push 结构一致，\\n     *        例：{ title:\\\"标题1\\\", url:\\\"xxx\\\", col_type:\\\"scroll_button\\\" };\\n     *        参数采用可选覆盖模式，不写的参数则使用默认;\\n     *        比如传入 { col_type:\\\"text_1\\\" }，那最终结果就是 { title:\\\"标题1\\\", url:\\\"xxx\\\", col_type:\\\"text_1\\\" }\\n     * @returns {CategoriesHeader}\\n     */\\n    foldLayout(layout) {\\n        if (typeof layout === 'object') {\\n            let keys = Object.keys(layout)\\n            let injectIndex = layout.injectIndex || layout['折叠按钮插入行']\\n            if (layout.title || layout.url || layout.col_type || injectIndex) {\\n                for (let i = 0; i < keys.length; i++) {\\n                    const key = keys[i]\\n                    this[symbolMap.mFoldLayout][key] = layout[key];\\n                }\\n            } else {\\n                throw new Error(\\\"请传入正确的折叠界面元素！\\\")\\n            }\\n            // injectIndex 折叠按钮插入第 injectIndex 行\\n            if (injectIndex) {\\n                if (!(typeof (injectIndex) === 'number')) {\\n                    throw new Error(\\\"折叠按钮插入行请传入数字！\\\")\\n                }\\n                if (injectIndex < 1) {\\n                    throw new Error(\\\"折叠按钮插入行请传入大于 0 的整数！\\\")\\n                }\\n                if (injectIndex > this[symbolMap.mFoldIndex]) {\\n                    throw new Error(\\\"折叠按钮插入行不得大于显示折叠行数！请调用 .foldIndex(index) 或 .第几行开始折叠(index) 传入正确的显示折叠行数\\\")\\n                }\\n                this[symbolMap.mFoldLayout].injectIndex = injectIndex || 1;\\n            }\\n        } else {\\n            throw new Error(\\\"请传入正确的折叠界面元素！\\\")\\n        }\\n        return this;\\n    },\\n    // 当前是否折叠\\n    fold(isFold) {\\n        if (typeof (isFold) === 'string') {\\n            isFold = isFold === '1'\\n        }\\n        if (isFold) {\\n            this[symbolMap.mFold] = '1';\\n        } else {\\n            this[symbolMap.mFold] = '0';\\n        }\\n        return this\\n    },\\n    color(mColor) {\\n        this[symbolMap.mColor] = mColor\\n        return this\\n    },\\n    tag(mTag) {\\n        this[symbolMap.mTag] = mTag\\n        return this\\n    },\\n    add(ruleObj) {\\n        // log($.stringify(ruleObj))\\n        if (ruleObj.constructor === Array) {\\n            this[symbolMap.ruleObjList] = this[symbolMap.ruleObjList].concat(ruleObj)\\n        } else {\\n            this[symbolMap.ruleObjList].push(ruleObj)\\n        }\\n        return this;\\n    },\\n    evalJSRule(item, jsRule) {\\n        let rule = jsRule.replace(\\\"@js:\\\", \\\"\\\")\\n        rule = rule.trim()\\n        // log($.stringify(rule))\\n        let input = item\\n        if (rule.startsWith(\\\"(\\\")) {\\n            eval('result = ' + rule)\\n        } else {\\n            /**\\n             * 还原成 $.toString(...) 的最终结果，达到最终处理方式跟上面的 if 一致的目的\\n             */\\n            eval('result = ' + '(() => {' + rule + '})()')\\n        }\\n        return (result || '')\\n    },\\n    getTitle(src, category) {\\n        let title = ''\\n        let titleRule = category.titleRule || 'a&&Text'\\n        if (titleRule.startsWith(\\\"@js:\\\")) {\\n            title = this.evalJSRule(src, titleRule)\\n        } else {\\n            title = parseDomForHtml(src, titleRule)\\n        }\\n        return title || \\\"\\\";\\n    },\\n    getUrl(src, category) {\\n        let url = ''\\n        let urlRule = category.urlRule || 'a&&href'\\n        if (typeof urlRule === 'object') {\\n            let mUrlRule = urlRule.rule || urlRule['解析规则'] || 'a&&href';\\n            if (mUrlRule.startsWith(\\\"@js:\\\")) {\\n                url = this.evalJSRule(src, mUrlRule);\\n            } else {\\n                let parse = parseDom;\\n                if (urlRule.parseOption) {\\n                    switch (urlRule.parseOption) {\\n                        case \\\"parseDom\\\":\\n                        case \\\"pd\\\":\\n                            parse = parseDom;\\n                            break;\\n                        case \\\"parseDomForHtml\\\":\\n                        case \\\"pdfh\\\":\\n                            parse = parseDomForHtml;\\n                            break;\\n                        default:\\n                            parse = parseDom;\\n                    }\\n                } else if (urlRule[\\\"解析方法\\\"]) {\\n                    switch (urlRule[\\\"解析方法\\\"]) {\\n                        case \\\"parseDom\\\":\\n                        case \\\"pd\\\":\\n                            parse = parseDom;\\n                            break;\\n                        case \\\"parseDomForHtml\\\":\\n                        case \\\"pdfh\\\":\\n                            parse = parseDomForHtml;\\n                            break;\\n                        default:\\n                            parse = parseDom;\\n                    }\\n                }\\n                url = parse(src, mUrlRule);\\n            }\\n            if (urlRule.dealUrl) {\\n                url = urlRule.dealUrl(url)\\n            } else if (urlRule['二次处理']) {\\n                url = urlRule['二次处理'](url)\\n            }\\n        } else {\\n            if (urlRule.startsWith(\\\"@js:\\\")) {\\n                url = this.evalJSRule(src, urlRule);\\n            } else {\\n                url = parseDom(src, urlRule);\\n            }\\n        }\\n        return url || \\\"\\\";\\n    },\\n    build() {\\n        // 检测是否传入需要的参数\\n        this.checkParams()\\n        // 每一个分类的唯一标识\\n        let mTag = this[symbolMap.mTag] || \\\"\\\"\\n        //翻页 需要根据实际替换\\n        const html = this[symbolMap.src] || request(this[symbolMap.true_url])\\n        const empty = \\\"hiker://empty\\\"\\n        //获取列表\\n        const categories = []\\n        this[symbolMap.ruleObjList].map(ruleObj => {\\n            let list = []\\n            let listRule = ruleObj.listRule || ruleObj[\\\"一级分类\\\"]\\n            if (listRule.startsWith(\\\"@js:\\\")) {\\n                // log($.stringify(listRule))\\n                list = this.evalJSRule(html, listRule)\\n            } else {\\n                list = parseDomForArray(html, listRule)\\n            }\\n            // log(list)\\n            list.map(category => {\\n                categories.push({\\n                    list: category,\\n                    subListRule: ruleObj.subListRule || ruleObj[\\\"子分类\\\"],\\n                    titleRule: ruleObj.titleRule || ruleObj[\\\"分类标题\\\"],\\n                    urlRule: ruleObj.urlRule || ruleObj[\\\"分类链接\\\"],\\n                });\\n            })\\n        })\\n\\n        // log($.stringify(categories))\\n\\n        let init_cate = []\\n        for (let i = 0; i < 20; i++) {\\n            init_cate.push(\\\"0\\\")\\n        }\\n\\n        const cate_temp_json = getMyVar(mTag + this.VARMAP.CATEGORY, JSON.stringify(init_cate))\\n        const cate_temp = JSON.parse(cate_temp_json)\\n\\n        if (this[symbolMap.mPage] === 1) {\\n\\n            categories.forEach((category, index) => {\\n\\n                // 折叠 UI\\n                if (this[symbolMap.mFoldInnerEnable] && this[symbolMap.mFoldLayout].injectIndex === (index+1)) {\\n                    let foldLayout = {\\n                        title: this[symbolMap.mFoldLayout].title || (this[symbolMap.mFold] === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>'),\\n                        url: this[symbolMap.mFoldLayout].url || $(\\\"hiker://empty#noHistory#\\\").lazyRule((params) => {\\n                            putMyVar(params.mTag + params.VARMAP.FOLD, getMyVar(params.mTag + params.VARMAP.FOLD, params.isFold) === '1' ? '0' : '1')\\n                            refreshPage(false);\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            mTag: mTag,\\n                            isFold: this[symbolMap.mFold],\\n                            VARMAP: this.VARMAP\\n                        }),\\n                        col_type: this[symbolMap.mFoldLayout].col_type || \\\"scroll_button\\\",\\n                    }\\n                    this[symbolMap.mLayout].push(foldLayout)\\n                }\\n\\n                //具体列表下的分类\\n                let sub_categories = [];\\n                if (category.subListRule.startsWith(\\\"@js:\\\")) {\\n                    sub_categories = this.evalJSRule(category.list, category.subListRule)\\n                } else {\\n                    sub_categories = parseDomForArray(category.list, category.subListRule);\\n                }\\n                if (index < (this[symbolMap.mFoldIndex] || 1)) {\\n                    sub_categories.forEach((item, key) => {\\n                        let title = this.getTitle(item, category)\\n                        let url = this.getUrl(item, category)\\n\\n                        this[symbolMap.mLayout].push({\\n                            title: key.toString() === cate_temp[index] ? '““””<b><font color=' + this[symbolMap.mColor] + '>' + title + ' </font></b>' : title,\\n                            url: $(url).lazyRule((params) => {\\n                                let new_cate = []\\n                                if (params.index === 0) {\\n                                    params.cate_temp.forEach((cate, index) => {\\n                                        new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                                    });\\n                                } else {\\n                                    params.cate_temp[params.index] = params.key.toString()\\n                                }\\n                                putMyVar(params.tag + params.VARMAP.CATEGORY, JSON.stringify(params.index === 0 ? new_cate : params.cate_temp))\\n                                putMyVar(params.tag + params.VARMAP.URL, input)\\n                                refreshPage(true)\\n                                return \\\"hiker://empty\\\"\\n                            }, {\\n                                cate_temp: cate_temp,\\n                                index: index,\\n                                VARMAP: this.VARMAP,\\n                                tag: mTag,\\n                                key: key,\\n                                page: this[symbolMap.mPage],\\n                            }),\\n                            col_type: 'scroll_button',\\n                        })\\n                    })\\n                    this[symbolMap.mLayout].push({\\n                        col_type: \\\"blank_block\\\"\\n                    });\\n                } else if (this[symbolMap.mFold] === '0') {\\n                    sub_categories.forEach((item, key) => {\\n                        let title = this.getTitle(item, category)\\n                        let url = this.getUrl(item, category)\\n\\n                        this[symbolMap.mLayout].push({\\n                            title: key.toString() === cate_temp[index] ? '““””<b><font color=' + this[symbolMap.mColor] + '>' + title + ' </font></b>' : title,\\n                            url: $(url).lazyRule((params) => {\\n                                params.cate_temp[params.index] = params.key.toString()\\n\\n                                putMyVar(params.tag + params.VARMAP.CATEGORY, JSON.stringify(params.cate_temp))\\n                                putMyVar(params.tag + params.VARMAP.URL, input)\\n                                refreshPage(true)\\n                                return \\\"hiker://empty\\\"\\n                            }, {\\n                                cate_temp: cate_temp,\\n                                index: index,\\n                                VARMAP: this.VARMAP,\\n                                tag: mTag,\\n                                key: key,\\n                                page: this[symbolMap.mPage],\\n                            }),\\n                            col_type: 'scroll_button',\\n                        })\\n                    })\\n                    this[symbolMap.mLayout].push({\\n                        col_type: \\\"blank_block\\\"\\n                    });\\n                }\\n            });\\n        }\\n    },\\n\\n    界面(layout) {\\n        return this.layout(layout)\\n    },\\n    分类链接(trueUrl) {\\n        return this.trueUrl(trueUrl);\\n    },\\n    页码(page) {\\n        return this.page(page);\\n    },\\n    源码(html) {\\n        return this.html(html);\\n    },\\n    定位一级分类(list) {\\n        return this.list(list);\\n    },\\n    定位子分类(subList) {\\n        return this.subList(subList);\\n    },\\n    定位分类标题(title) {\\n        return this.title(title);\\n    },\\n    定位分类链接(url) {\\n        return this.url(url);\\n    },\\n    开启内置折叠功能() {\\n        return this.foldInner(true);\\n    },\\n    关闭内置折叠功能() {\\n        return this.foldInner(false);\\n    },\\n    第几行开始折叠(index) {\\n        return this.foldIndex(index);\\n    },\\n    折叠按钮样式(layout) {\\n        return this.foldLayout(layout)\\n    },\\n    折叠(fold) {\\n        return this.fold(fold);\\n    },\\n    选中的分类颜色(color) {\\n        return this.color(color);\\n    },\\n    唯一标识(mTag) {\\n        return this.tag(mTag)\\n    },\\n    添加分类定位(ruleObj) {\\n        return this.add(ruleObj);\\n    },\\n    开始打造分类() {\\n        return this.build();\\n    },\\n\\n})\\n$.exports = new CategoriesHeader();\\n$.exports\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理工具\",\"path\":\"url-processor\",\"rule\":\"/**\\n * 本地网页插件链接 hiker://files/rules/js/UrlProcessor.js\\n * 子页面链接 hiker://page/url-processor\\n * 道长仓库链接 http://hiker.nokia.press/hikerule/rulelist.json?id=2849\\n * 码云 Gitee 链接 https://gitee.com/reborn0/HikerRules/raw/master/plugins/UrlProcessor.js\\n */\\nfunction UrlProcessor() {\\n    this.params = {}\\n    this.regexMap = [\\n        {\\n            reg: '(vodtype|videot)\\\\\\\\/\\\\\\\\w+',\\n            exec: () => {\\n                return this.params.url\\n                    .replace(/-\\\\d+.html/, '-' + this.params.page + '.html')\\n                    .replace(/((vodtype|videot)\\\\/\\\\w+).html/, '$1-' + this.params.page + '.html')\\n            }\\n        },\\n        {\\n            reg: '\\\\\\\\/?[\\\\\\\\w\\\\\\\\d]+-.*?-.*?-.*?-.*?-.*?-.*?-.*?-\\\\\\\\d*---\\\\\\\\d*.html',\\n            exec: () => {\\n                return this.params.url\\n                    .replace(/\\\\d*(---.html)/, this.params.page + '$1')\\n                    .replace(/(---\\\\d+.html)/, this.params.page + '$1'); // 拼接页码\\n            }\\n        },\\n        {\\n            reg: '((\\\\\\\\/vod\\\\\\\\/show)?(\\\\\\\\/area\\\\\\\\/[\\\\\\\\w\\\\\\\\d%]+)?(\\\\\\\\/by\\\\\\\\/[\\\\\\\\w\\\\\\\\d%]+)?(\\\\\\\\/id\\\\\\\\/\\\\\\\\d+)?(\\\\\\\\/letter\\\\\\\\/[\\\\\\\\w\\\\\\\\d%]+)?)(\\\\\\\\/page\\\\\\\\/\\\\\\\\d+)?(\\\\\\\\/year\\\\\\\\/\\\\\\\\d+)?\\\\\\\\.html',\\n            exec: () => {\\n                let regExp = /((\\\\/vod\\\\/show)?(\\\\/area\\\\/[\\\\w\\\\d%]+)?(\\\\/by\\\\/[\\\\w\\\\d%]+)?(\\\\/id\\\\/\\\\d+)?(\\\\/letter\\\\/[\\\\w\\\\d%]+)?)(\\\\/page\\\\/\\\\d+)?(\\\\/year\\\\/\\\\d+)?\\\\.html/\\n                return this.params.url\\n                    .replace(regExp, '$1' + (\\\"/page/\\\" + this.params.page) + '$8' + \\\".html\\\")\\n            }\\n        }\\n    ]\\n}\\n\\nObject.assign(UrlProcessor.prototype, {\\n    constructor: UrlProcessor,\\n    checkParams() {\\n        if (!this.params.url) {\\n            throw new Error(\\\"请先调用 .baseUrl(url) 传入链接进行初始化!\\\")\\n        }\\n        if (!this.params.page) {\\n            throw new Error(\\\"请先调用 .page(page) 传入页码进行初始化!\\\")\\n        }\\n    },\\n    baseUrl(url){\\n        this.params.url = url\\n        return this\\n    },\\n    page(page){\\n        this.params.page = page\\n        return this\\n    },\\n    addExtra(regExp) {\\n        if (regExp.constructor === Array) {\\n            this.regexMap = this.regexMap.concat(regExp)\\n        } else {\\n            this.regexMap.push(regExp)\\n        }\\n        return this;\\n    },\\n    debug() {\\n        this.params.debug = true\\n        return this;\\n    },\\n    exec() {\\n        this.checkParams()\\n        let true_url = ''\\n        for (let i = 0; i < this.regexMap.length; i++) {\\n            let regObj = this.regexMap[i];\\n            let urlExp = regObj.reg;\\n            if (typeof urlExp === 'string') {\\n                urlExp = new RegExp(urlExp)\\n            }\\n            if (urlExp.test(this.params.url)) {\\n                if (this.params.debug) {\\n                    log(urlExp.toString())\\n                }\\n                true_url = regObj.exec();\\n                break;\\n            }\\n        }\\n        if (true_url) {\\n            return true_url;\\n        } else {\\n            return this.params.url\\n        }\\n    },\\n    获取处理结果() {\\n        return this.exec()\\n    },\\n    链接(url) {\\n        return this.baseUrl(url)\\n    },\\n    页码(page) {\\n        return this.page(page)\\n    },\\n    插入新处理规则(regExp) {\\n        return this.addExtra(regExp)\\n    },\\n    调试模式() {\\n        return this.debug();\\n    }\\n})\\n$.exports=new UrlProcessor()\\n$.exports\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数\",\"path\":\"jxhs\",\"rule\":\"var fftt = 'Mw8giyH1CqnTz3B7VHj7MTzvcuXIErgr1D/PugFmhOWvF6WTnKV54M1uUckMlxnLIUMbZ7FiqgLuRWcbwGXhb+67fSMBdz5Vsf6zP1dv9f4hQxtnsWKqAu5FZxvAZeFv8ki+AZPvNsd/0JVRBjUHC5QmtCkVhlM/kpn/BFWtRr0H/ZHQQq4l4JDNzXnMXA0myyvLSNZWc/sIn/vWSAHU9kAbjU4qSZsSAu9by0bMwdCPDsU4ppskU39rBSPFNDBzYyvXsJhrztaabnexWz65cpcx/H34lECjupP0oLCkmODO4WZXi1C2GnAA+h1I7YDdyyvLSNZWc/sIn/vWSAHU9kBUv7gd1Qj5oRaCUU7r2I0mmFaoD3Q9RpDhmSenxUEIP7+zUU1QW0/0yvSKOLD/wrZEVUca7lD0mfnmHuCOPLg17QCC6yJ9qIcxo3Rh/YFMPKiB1xoeDNcCD97Cs8QBwhdbux6xz/HtOSlMGtu9/AWnr5tI3aX5+x8VcCVwJ/y+SXu9+l97W7KcATyE/A4fy963XgJY2zS48DLS/kiBU3Q873LlyBK4K9Q/z7oBZoTlepYzd6bnhzKgDBj5/fX1sDKHABIyMs4PqDBy1Epmzu3cXRvPGFj1xmg4sYTw/EpayyvLSNZWc/sIn/vWSAHU9qpRYwPSVaek0SQ+LoPrGP128aEqssiPJrXXIGnYsy3MmwePe41HTI6MhJlAVd+F1UkY7wLTnL4QS7GPJsBvvfYp1xWcgVqDWkR7GoNOOMNwoyRy8bMPTZJ2xeqVCEhXyL4CsuqbinNXddqoloYeAOkqzVkXD/VS903fB2lDun0pjVznHNJQFhgia6QLq2qZg9U+SVOiXOyVg2lNovINWuWfhc7+Ty7jXzR4CXArcUr2ItdtzQvj4A0229ZtBAXj1B2k8ocmCbW1+fJ4+xJTOEennAeM0zBL7Ze+W9MFZr9EoOeoToq7VEqmUEBdpKwQzpsGtGj9OLys264hCIF8Fc4dIeONwhRjuUi1Lfpm2i0swHelD1loEesCyD501H7RYzCFmPvn8znewphfbNGA5JP/fxoRrSNw+JnoOCSgLuJUg//XSvDUWNCk4IGr5YXTOSuOKLeuLncZ50H8JRU7fCY=';\\nvar ssyz = 'TloGnnikThrfs/5fDNlk5CSsbaGtAH7W/uMZjuYoIupB6bCoo9CotLQHfPIdGgbkbynKqL2aUE2Xy558X2QxHYtTU09vD+4oaCDIuSZO7nxDbLfRGfWj7zql+yMbvF+aJoD/m6Psfw/PyYOAp/ZVGdrPzaCByfd0HL5DFVSw+YF2OC40V8SP9RxdFKKdrBuPxCWdxUCFrJ+1lRy/TU3LC84C4xxEBhgud7RtBp0zZArqBE06+Z3JtDP0eFCz/D5X0409qPHK3e1y/LuUgccuxpHnjYLE1GjlP8wYA2hQWe7yPngggQBHw33/gvb3tuCcxEKTWgmah/R32AH9ZF8jF7WemT26lUizVXe/spCdhDiwRmgTBTHWuSeJWgKHJRb9iVSn2X6OK90RfEqjkC/rIUeZMOlYpXh7zXix9HkNSurWsdOgtH46rV4Xi7EYo5Ksh0ZP9HUrZ5YHpH3pyeXMlZINa9KUhHeS6n79hjw9AlRL8ys+hzx2iDejWJBmihuJVQYjlWSgB7EAMas2+2yzBCS7H2+45+c8/PETISE+t0qXX621OW+KdysH4jBck/eV9seH/bTWaEoBMesyj/x/h6ScJQtQRavyAk+318qOcIJ+68hs502OnfsTjUgXtyXDjZ7TIcvBBIdP0ewBZpCdOxonBPMSC/QfoZBfJDV6YxXMTghGkKraKK2t+/3MUd+PwippGuO3P2jnH88FPyyx9f12Z/jKRNS+6l9fL9MbuGjr/wL73kz5E7sUEI4NTNOkZrShs/ni+qKrz4WBygFPymdAogdK4WNX2t9wb+t0+uk9ozEHo+kmifijiMQHrwsGNh++imQtlLD7hff6T7uHuY9f34N+NRhedZLNOS3aDJ6SQw96bLncC5rIk5XwLw/NejXlzWg2SDlRGyz31UArjafxA8EgsQ0weLWJn8C3+RqU8sO39MGS4yjQDG5gIa4bSUvBru7wJ6t0FTrBFRGYHeSGRAcyu7SB1CRmJ0rFgwBd59E2LLA56xPs9RUpedVUI/RoFKQlr8g0dUnP3BPtDSfkhSsIrOyyo+fD7u6wJmXzxckZYSvaJCyjvoTQR853a7y3wJ/AlB/nhdqW4QtdirczrhioAEdgZ/u0c+QtZx00QFJd+O6UWVqHQREOVdmiGdtJ+yuf05M6vr26SaegpFUR2hiEHZQYOR/+kTta2i0='\"},{\"col_type\":\"movie_3\",\"name\":\"二级mo-movs-item\",\"path\":\"mo-movs-item\",\"rule\":\"var d = [];\\nvar html = getResCode();\\nvar arts = pdfa(html, 'body&&.mo-movs-btns');\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(pdfh(arts[i], 'Text'))\\n}\\nvar conts = pdfa(html, 'body&&.mo-movs-item');\\nvar lists = [];\\nfor (var i in conts) {\\n    lists.push(pdfa(conts[i], 'ul&&li'))\\n}\\nvar title = pdfh(html, '.mo-part-full&&alt');\\nd.push({\\n    title: '分类：' + pdfh(html, '.mo-cols-lays&&li,2--span&&Text') + ' | ' + pdfh(html, '.mo-cols-lays&&li,3--span&&Text') + ' | ' + pdfh(html, '.mo-cols-lays&&li,4--span&&Text') + '\\\\n' + pdfh(html, '.mo-cols-lays&&li&&Text').substring(0, 15) + '\\\\n' + pdfh(html, '.mo-cols-lays&&li,1&&Text').substring(0, 15),\\n    desc: '更新时间：' + pdfh(html, '.mo-cols-lays&&li,5&&Text').substring(0, 15),\\n    img: pd(html, '.mo-situ-pics&&data-original'),\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n        var url = \\\"#noLoading#@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\\\";\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: url,\\n            col_type: 'flex_button'\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: pdfh(list[j], 'Text'),\\n            url: pd(list[j], 'a&&href') + lazy,\\n            col_type: list.length > 3 ? 'text_3' : 'text_2'\\n        });\\n    }\\n}\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getVar(MY_URL, '0'));\\nsetResult(d);\"}]","icon":"http://q1.qlogo.cn/g?b=qq&nk=569617079&s=640"},{"firstHeader":"class","last_chapter_rule":"","title":"解码🐴","author":"晓","version":0,"url":"http://encode.chahuo.com","col_type":"movie_2","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d=[];\nd.push({\n    title:'',\n    url:'http://encode.chahuo.com/',\n    col_type:\"\",\n   desc: '100%&&float',\ncol_type: 'x5_webview_single', pic_url:\"\"\n});\n\nsetResult(d)","searchFind":"","search_url":"","titleColor":"#ff871f78","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]"},{"last_chapter_rule":"","title":"解析口","author":"发粪涂墙","version":0,"url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nd.push({\n    desc: '220',\n    url: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/jiexi/jiexi.html',\n    col_type: 'x5_webview_single'\n});\nvar titles = fetch(\"hiker://files/jiexi/jiexi.txt\", {}).split('\\n');\nfor (var i = 0; i < titles.length; i++) {\n    var t = titles[i].split(\"&&\");\n    d.push({\n        title: fetch(\"hiker://files/jx_cache.txt\") == t[1] ? \"‘‘\"+t[0] + \"’’\" : t[0],\n        desc: t[1],\n        url: t[1] + '@lazyRule=.js:if(fetch(\"hiker://files/jx_cache.txt\") == input){\"toast://当前解析口：\"+input}else{writeFile(\"hiker://files/jx_cache.txt\",input);refreshPage();\"toast://修改成功\"}',\n        col_type: 'text_4'\n    });\n}\nsetResult(d);","searchFind":"","search_url":"","titleColor":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","icon":""},{"last_chapter_rule":"","title":"解析测试","author":"1606142","version":1,"type":"tool","url":"hiker://empty","col_type":"long_text","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n\r\nvar res = {};\r\nvar d = [];\nvar d1 = [];\nvar d2 = [];\nvar d3 = [];\nvar d4 = [];\nvar d5 = [];\nfunction sel(a){\n   try{\n      a=a.match(/[\\w]*?\\.com/g)[0];\n     }catch(e){return 'oth';}\n            switch (a) {\n                case \"qq.com\":\n                    str = 'tx';\n                    break;\n                case \"iqiyi.com\":\n                    str = 'qy';\n                    break;\n                case \"youku.com\":\n                    str = 'yk';\n                    break;\n                case \"mgtv.com\":\n                    str = 'mg';\n                    break;\n                case \"bilibili.com\":\n                    str = 'bl';\n                    break;\n                default:\n                    str = 'oth';\n                    break;\n            }\nreturn str;\n}\n\ninput=getVar('input');\nputVar('input','');\nvar name=getVar('i');\n\nd.push({\ntitle:'测试',\ndesc:'输入测试链接...',\nurl:`putVar('input',input);refreshPage(false);`,\ncol_type:'input'\n});\nvar path='file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/DuanNian/MyParse.json';\nvar fi=fetch(path,{});\ntry{\neval('jx='+fi);\nsaveFile('save.txt',fi);\nif(name==''||!jx.title.toString().includes(name))name=jx.title[0];\n\nd.push({\ntitle:'测试从 '+name+' 开始: ',\ndesc:'点击切换起点解析',\nurl:`select://{\"title\": \"选择解析...\",\"options\" :[`+jx.title.map(a=>{return '\"'+a+'\"'})+`],col: 3, \"js\": \"putVar('i',input);refreshPage(false);'toast://切换至'+input+'开始测试！'\"}`,\ncol_type:'text_1'\n});\nd.push({col_type:'line_blank'});\nif(input!=''&&input.includes('://')){\nvar cs=0;\nfor(var ii=0;ii<jx.title.length;ii++){\n\nif(name!=jx.title[ii]&&cs==0){\ncontinue;\n}else if(name==jx.title[ii]){cs=1;}\n\n\nif(jx.title[ii]!='defaultParse'){\ntry{\nshowLoading('正在测试 '+jx.title[ii]);\n\nif((typeof jx.codes[jx.title[ii]])!='string')\nvar url=jx.codes[jx.title[ii]](input);\n\nelse{\nvar url='';\n}\n\nif(url.includes('toast://')||!url.includes('://')||url==input)url='';\n}catch(e){\nurl='';\n}\n\nif(url!='')\n{\nd1.push({\ntitle:jx.title[ii],\ndesc:'找到一个免嗅',\nurl:`select://{\"title\": \"选择操作...\", \"options\" :['播放','添加','删除'], col: 3, \"js\": \"if(input=='播放'){\\``+url+`\\`;}else {var path='file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/DuanNian/MyParse.json';var fi=fetch(path,{});eval('jx='+fi);var ne=new RegExp('^`+jx.title[ii]+`,|,`+jx.title[ii]+`$|([,\\\\\"])`+jx.title[ii]+`,|,`+jx.title[ii]+`(\\\\\")','g');eval('a='+fi);if(input=='添加'){var set=jx.settings['`+sel(input)+`'];jx.settings['`+sel(input)+`']='`+jx.title[ii]+`'+(set==''?'':',')+set.replace(ne,'$1$2');for(j of jx.title){jx.codes[j]=j+'解析';}var fi=JSON.stringify(jx);}else{var jxl=jx.title.filter(a=>{if(a!='`+jx.title[ii]+`')return a;});for(j of jx.title){if(j!='`+jx.title[ii]+`')jx.codes[j]=j+'解析';else delete jx.codes[j];}jx.title=jxl;jx.settings=JSON.parse(JSON.stringify(jx.settings).replace(ne,'$1$2'));var fi=JSON.stringify(jx);}for(j of jx.title){fi=fi.replace('\\\\\"'+j+'解析\\\\\"',((typeof a.codes[j])!='function'?('\\\\\"'+a.codes[j].toString().trim()+'\\\\\"'):a.codes[j].toString().trim()));}writeFile(path,fi);'toast://完成！'}\"}`,\ncol_type:'text_1'\n});\ntry{\nputVar('i',jx.title[ii+1]);\n}catch(e){\nclearVar('i');}\nd1.push({col_type:'line'});\nd1.push({\ntitle:'下一个',\nurl:`hiker://empty@lazyRule=.js:putVar('input','`+input+`');refreshPage(false);'toast://下一个'`,\ncol_type:'text_2'\n});\nd1.push({\ntitle:'从头开始',\nurl:`hiker://empty@lazyRule=.js:putVar('input','`+input+`');clearVar('i');refreshPage(false);'toast://开始'`,\ncol_type:'text_2'\n});\nhideLoading();\nbreak;\n}\n\n\nelse{\nif((typeof jx.codes[jx.title[ii]])!='string')\nd2.push({\ntitle:jx.title[ii],\n\nurl:`select://{\"title\": \"选择操作...\", \"options\" :['重试','添加','删除'], col: 3, \"js\": \"if(input=='重试'){\\`hiker://empty@lazyRule=.js:var path='file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/DuanNian/MyParse.json';var fi=fetch(path,{});eval('jx='+fi);jx.codes['`+jx.title[ii]+`']('`+input+`');\\`}else {var path='file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/DuanNian/MyParse.json';var fi=fetch(path,{});eval('jx='+fi);var ne=new RegExp('^`+jx.title[ii]+`,|,`+jx.title[ii]+`$|([,\\\\\"])`+jx.title[ii]+`,|,`+jx.title[ii]+`(\\\\\")','g');eval('a='+fi);if(input=='添加'){var set=jx.settings['`+sel(input)+`'];jx.settings['`+sel(input)+`']='`+jx.title[ii]+`'+(set==''?'':',')+set.replace(ne,'$1$2');for(j of jx.title){jx.codes[j]=j+'解析';}var fi=JSON.stringify(jx);}else{var jxl=jx.title.filter(a=>{if(a!='`+jx.title[ii]+`')return a;});for(j of jx.title){if(j!='`+jx.title[ii]+`')jx.codes[j]=j+'解析';else delete jx.codes[j];}jx.title=jxl;jx.settings=JSON.parse(JSON.stringify(jx.settings).replace(ne,'$1$2'));var fi=JSON.stringify(jx);}for(j of jx.title){fi=fi.replace('\\\\\"'+j+'解析\\\\\"',((typeof a.codes[j])!='function'?('\\\\\"'+a.codes[j].toString().trim()+'\\\\\"'):a.codes[j].toString().trim()));}writeFile(path,fi);'toast://完成！'}\"}`,\ncol_type:'text_3'\n});\nelse{\nvar x5=jx.codes['defaultParse'](jx.codes[jx.title[ii]]+input).replace(/\\\\/g,'\\\\\\\\\\\\\\\\').replace(/\\\"/g,'\\\\\"').replace(/\\'/g,\"\\\\'\").replace(/\\`/g,'\\\\`').replace(/[\\s]/g,' ');\nd4.push({\ntitle:jx.title[ii],\n\nurl:`select://{\"title\": \"选择操作...\", \"options\" :['解析','添加','删除'], col: 3, \"js\": \"if(input=='解析'){'`+x5+`'}else {var path='file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/DuanNian/MyParse.json';var fi=fetch(path,{});eval('jx='+fi);var ne=new RegExp('^`+jx.title[ii]+`,|,`+jx.title[ii]+`$|([,\\\\\"])`+jx.title[ii]+`,|,`+jx.title[ii]+`(\\\\\")','g');eval('a='+fi);if(input=='添加'){var set=jx.settings['`+sel(input)+`'];jx.settings['`+sel(input)+`']='`+jx.title[ii]+`'+(set==''?'':',')+set.replace(ne,'$1$2');for(j of jx.title){jx.codes[j]=j+'解析';}var fi=JSON.stringify(jx);}else{var jxl=jx.title.filter(a=>{if(a!='`+jx.title[ii]+`')return a;});for(j of jx.title){if(j!='`+jx.title[ii]+`')jx.codes[j]=j+'解析';else delete jx.codes[j];}jx.title=jxl;jx.settings=JSON.parse(JSON.stringify(jx.settings).replace(ne,'$1$2'));var fi=JSON.stringify(jx);}for(j of jx.title){fi=fi.replace('\\\\\"'+j+'解析\\\\\"',((typeof a.codes[j])!='function'?('\\\\\"'+a.codes[j].toString().trim()+'\\\\\"'):a.codes[j].toString().trim()));}writeFile(path,fi);'toast://完成！'}\"}`,\ncol_type:'text_3'\n});}\n}\n}}\n}\nhideLoading();\nif(d2!='')\nd3.push({\ntitle:'⭐️以下是解析失败的免嗅:',\ncol_type:'text_1'\n\n});\nif(d4!='')\nd5.push({\ntitle:'⭐️以下不是免嗅，需要手动测试:',\ncol_type:'text_1'\n\n});\n}catch(e){\nd.push({\ntitle:'文件损坏，点击此处恢复(如果有备份的话)',\ncol_type:'text_center_1',\ndesc:'先点一下试一试吧',\nurl:`hiker://empty@lazyRule=.js:writeFile('`+path+`',readFile('save.txt'));refreshPage(false);'toast://执行成功！'`\n});\n}\nd=d.concat(d1).concat(d3).concat(d2).concat(d5).concat(d4);\n\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":"","search_url":"hiker://empty","titleColor":"#fff20c00","group":"#⃣️工具","detail_col_type":"long_text","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"\nvar path='file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/DuanNian/MyParse.json';\nvar fi=fetch(path,{});\neval('jx='+fi);\neval('a='+fi);\njx.settings.cj='hiker://files/cache/Parse_Dn.js';\njx.title=jx.title.filter(a=>{\nif(jx.codes[a]){jx.codes[a]=a+'解析';\nreturn a;}\nelse{delete jx.codes[a];}});\nvar fi=JSON.stringify(jx);\nfor(j of jx.title){fi=fi.replace('\"'+j+'解析\"',((typeof a.codes[j])!='function'?('\"'+a.codes[j].toString().trim()+'\"'):a.codes[j].toString().trim()));}writeFile(path,fi);\n","pages":"[]","icon":""},{"last_chapter_rule":"","title":"萤火虫3.0","author":"","version":0,"url":"hiker://empty#fypage","col_type":"movie_1_vertical_pic","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n\nd=[];\n\neval(decodeURIComponent(fetch('hiker://files/rules//bili3.0.js',{})));\n\nset_rule1();","searchFind":"","search_url":"","titleColor":"","group":"#⃣️工具","detail_col_type":"movie_2","detail_find_rule":"js:\n\neval(decodeURIComponent(fetch('hiker://files/rules//bili3.0.js',{})));\n\nset_rule2();","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"if(!fetch('hiker://files/rules//bili3.0.js'))\nwriteFile('hiker://files/rules//bili3.0.js', base64Decode(JSON.parse(request('hiker://page/bili')).rule))","pages":"[{\"col_type\":\"movie_3\",\"name\":\"bili\",\"path\":\"bili\",\"rule\":\"\"}]"},{"last_chapter_rule":"","title":"MyFieldᴰⁿ","author":"断念&道长魔改","version":374,"type":"tool","url":"hiker://empty","col_type":"text_center_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"工具","year_url":"","find_rule":"js:\n//log(MOBILE_UA);\nconst {demoData,defaultSets,floors} = $.require(\"hiker://page/demoData?rule=MyFieldᴰⁿ\");\nconst {getOne,unique2,duplicates} = $.require(\"hiker://page/utils?rule=MyFieldᴰⁿ\");\nlet sjTest =[];for(let i in demoData){sjTest=sjTest.concat(demoData[i])}\nthis.d = [];\nconst jxItem = $.require(\"hiker://page/jxItem?rule=MyFieldᴰⁿ\");\nvar Route = $.require(\"hiker://page/Route?rule=MyFieldᴰⁿ\");\neval(getItem('myFunction'));\n// mzPopup();\nvar jxOldV = getVar('jxOldV');\nvar jxNewV = getVar('jxNewV');\nvar versionTips = parseFloat(jxNewV) > parseFloat(jxOldV) ? '‘‘有新版本: v' + jxNewV + '\\n先更新小程序然后点击下方按钮拉取至本地’’' : 'v'+jxOldV;\nd.push({\n    title: '‘‘’’<big><span style=\"color:#0C0000\">断插 道长魔改',\n    desc: versionTips,\n    url: Route.szParse,\n    //url: 'toast://这是标题',\n    col_type: 'text_center_1'\n});\n\nfunction czGuide() {\n    return $().rule((k) => {\n        setResult([{\n            title: eval(JSON.parse(fetch(\"hiker://page/Guide?rule=MyFieldᴰⁿ\"))).rule,\n            col_type: 'rich_text'\n        }]);\n    })\n}\naddListener('onClose', $.toString(() => {\n    //clearVar(\"parseUrl.url\");\n    clearItem(\"class\");\n}));\nd.push({\n    title:'开始解析',\n    col_type: 'input',\n    desc: \"请输解析地址\",\n    url:$.toString(()=>{\n        let url = getVar(\"parseUrl.url\", \"\").trim();\n        let sel = getItem(\"selected\", \"\");\n        let jx = getItem(\"selected\", \"\");\n        if(jx&&jx.length>2&&!jx.startsWith('http')){\n            jx = '';//断插高级方法直接清空解析链接后面调用标题名字\n        }\n        if (!/^http/.test(url)&&!/http|function/.test(sel)) {\n            log(getItem(\"selected\", \"\"));\n            return \"toast://还没有输入链接哦\";\n        }\n        let playUrl = jx + url;\n        log(playUrl);\n        if(!/^http/.test(playUrl)&&!/http|function/.test(sel)){\n            return 'toast://看起来播放地址似乎不对劲?\\n'+playUrl\n        }\n        return $().lazyRule((playUrl,url)=>{\n            let title = getItem(\"selected0\", \"&&\").split(\"&&\")[0].replace(/👉/g,'');\n            log('title:'+title);\n            if(getItem('dn.test_mode')==='断插'&&!/^不选$|^魔断$/.test(title)){\n                eval(\"var config =\" + fetch(\"hiker://files/cache/MyParseSet.json\"));\n                eval(fetch(config.cj));\n                let title = getItem(\"selected0\", \"&&\").split(\"&&\")[0].replace(/👉/g,'').replace(/不选/g,'');\n                log('开始调用断插测试,myFiled超时为:'+getItem('dn.timeout','5000'));\n                return aytmParse(url,title,parseInt(getItem('dn.timeout','5000')));\n            }else if(getItem('dn.test_mode')==='断插'&&/^魔断$/.test(title)){\n                eval(\"var config =\" + fetch(\"hiker://files/cache/MyParseSet.json\"));\n                eval(fetch(config.cj));\n                log('开始调用魔断拟真测试,myFiled超时为:'+getItem('dn.timeout','5000'));\n                return aytmParse(url,'',parseInt(getItem('dn.timeout','5000')));\n            }\n            else{\n                const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n                return lazyParse(playUrl,parseInt(getItem('dn.timeout','5000')))||'toast://解析失败,具体看日志'\n            }\n        },playUrl,url)\n    }),\n    extra: {\n        blockRules: ['baidu.*.png', '.jpg','.mp3','.mp4','.m3u8','.flv','.avi','.3gp','.mpeg','.wmv','.mov','.rmvb','.gif','.jpg','.jpeg','.png','.ico','.svg'],\n        titleVisible: true,\n        defaultValue: getVar('parseUrl.url', '') || \"\",\n        onChange: 'putVar(\"parseUrl.url\",input)'\n    }\n});\nlet sel_title = ['Q神','断插'].map((it) => {\n    let test_mode = getItem('dn.test_mode','Q神');\n    return it===test_mode?'👉'+it:it;\n});\n\nd.push({\n    title:'💫'+getItem('dn.test_mode','Q神'),\n    col_type:'scroll_button',\n    url:$(sel_title,2).select(()=>{\n        input = input.replace(/👉/g,'');\n        setItem('dn.test_mode',input);\n        // setItem(\"selected\", url);\n        setItem(\"selected\", \"\"); // 重置解析头\n        setItem(\"selected0\", \"不选&&\"); //切换模式清空选中的解析\n        refreshPage(true);\n        return 'toast://已切换模式为:'+input\n    })\n});\n\nlet titleArr = [], urlArr = [];\nvar json={title:[],codes:{}};\nif(getItem('dn.test_mode','Q神')==='Q神'){\n    let parseUrlText = request(\"hiker://files/jiexi/jiexi.txt\");\n    let parseUrlArray = parseUrlText.split(/\\n/);\n    parseUrlArray.forEach((it) => {\n        it = it.split(\"&&\");\n        titleArr.push(it[0]);\n        urlArr.push(it[1]);\n    });\n}\nelse if(getItem('dn.test_mode','Q神')==='断插'){\n    let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\n    try {\n        eval('json='+setFile);\n    }catch (e) {\n        log('Json解析发生了错误:'+e.message);\n    }\n    titleArr = json.title;\n    titleArr.forEach((it) => {\n        urlArr.push(json.codes[it]);\n    });\n    //$.stringify(json)\n}\n\nd.push({\n    title:titleArr.length+'',\n    col_type:'scroll_button',\n    url:$(getItem('dn.test_mode','Q神')+'共计解析数量:'+titleArr.length+'个\\n是否随机来个地址进行测试?').confirm((sjTest,getOne)=>{\n        putVar('parseUrl.url', getOne(sjTest));\n        refreshPage(true);\n        return 'toast://地址已给你了'\n    },sjTest,getOne)\n});\n\nlet realTitles = titleArr;\nlet barry = getItem('dn.test_mode','Q神')==='Q神'?['不选']:['不选','魔断'];\ntitleArr = barry.concat(titleArr);\ntitleArr = titleArr.map((it) => {\n    let title = getItem(\"selected0\", \"&&\").split(\"&&\")[0];\n    return it===title?'👉'+it:it;\n});\nd.push({\n    title: '☢️'+getItem(\"selected0\", \"&&\").split(\"&&\")[0],\n    url: $(titleArr, 3).select((realTitles,urlArr) => {\n        input = input.replace(/👉/g,'');\n        if(input==='不选'){\n            setItem(\"selected\", '');\n            setItem(\"selected0\", input + \"&&\" + '');\n            refreshPage(false);\n            return \"toast://已取消解析口,直接进行直链解析\";\n        }else if(input==='魔断'){\n            setItem(\"selected\", '');\n            setItem(\"selected0\", input + \"&&\" + '');\n            refreshPage(false);\n            return \"toast://已设置为魔断解析，可直接触发备胎模式\";\n        }\n        let i = realTitles.indexOf(input);\n        let url = urlArr[i];\n        log(\"\\n更改接口> \" + url);\n        if(typeof(url)!=='string'){\n            log($.toString(url));\n            setItem(\"selected\", $.toString(url));\n            // return 'toast://暂不支持断插function系列的高级解析测试'\n        }else{\n            setItem(\"selected\", url);\n        }\n        setItem(\"selected0\", input + \"&&\" + url);\n        refreshPage(false);\n        return \"toast://切换解析口为:\"+input;\n    }, realTitles,urlArr),\n    col_type: \"scroll_button\"\n});\nd.push({\n    title:'🍀主题',\n    url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=主题#noHistory##noRecordHistory#\",\n    col_type: \"scroll_button\"\n});\nd.push({\n    title:'🍀解析',\n    url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=解析#noHistory##noRecordHistory#\",\n    col_type: \"scroll_button\"\n});\n\nd.push({\n    title:'🕒'+getItem('dn.timeout','5000'),\n    col_type:'scroll_button',\n    url:$(getItem('dn.timeout','5000'),'请输入解析超时毫秒').input(()=>{\n        if(!parseInt(input)){\n            return 'toast://超时设置错误，拒绝保存'\n        }\n        setItem('dn.timeout',input||'5000');\n        refreshPage(true);\n        return 'toast://已设置解析超时毫秒:'+getItem('dn.timeout','5000');\n    }),\n});\nd.push({\n    title:'📲导出TXT',\n    col_type:'scroll_button',\n    url:$('确认导出本地明文且复制云剪切板?\\n可完美导出名称地址的通用规则,对function类兼容暂时不是很好').confirm((titleArr,urlArr)=>{\n        //urlArr=urlArr.slice(2);\n        titleArr=titleArr.filter(it=>!/不选|魔断/.test(it));\n        let mode = getItem('dn.test_mode','Q神');\n        if(mode==='断插'||mode==='Q神'){\n            let jxCode = [];\n            titleArr.forEach((it) => {\n                let i = titleArr.indexOf(it);\n                let code = urlArr[i];\n                let outCode = (typeof(code)==='string'||typeof(code)==='undefined')?code.trim():base64Encode(code.toString().trim());\n                let outTitle = it.replace(/👉/g,'');\n                if(outTitle.startsWith('http')&&(typeof(outCode)==='undefined'||!outCode)){\n                    jxCode.push(outTitle+','+outTitle);\n                }else{\n                    jxCode.push(outTitle+','+outCode||'')\n                }\n            });\n            let outText = jxCode.join('\\n');\n            let outPath = 'hiker://files/rules/DuanNian/MyParseOut_'+mode+'.txt';\n            writeFile(outPath,outText);\n            let pastes = getPastes();\n            let importUrl = sharePaste(base64Encode(outText),pastes[1]);\n            let importCode = '魔断解析导入口令¥¥'+importUrl;\n            copy(importCode);\n            return 'toast://文件已导出到:'+outPath+'\\n请自行通过MT管理器查看'\n        }else{\n            return 'toast://我不清楚你要做什么?\\n'+mode;\n        }\n    },titleArr,urlArr),\n});\nd.push({\n    title:'📥导入TXT',\n    col_type:'scroll_button',\n    url:$().rule(()=>{\n        let d = [];\n        d.push({\n            title:'导入说明',\n            col_type:'text_1',\n            desc:'支持此插件导出格式的文本进行导入。\\n格式1: 名称,地址 一行一个解析\\n格式2:云剪切板 魔断解析导入口令¥¥剪切板地址',\n            url:'hiker://empty'\n        });\n        d.push({\n            desc: \"txt文本解析规则,一行一个\",\n            col_type: 'input',\n            title:'解析文本',\n            extra: {\n                titleVisible: false,\n                defaultValue: getVar('dn.import_text', ''),\n                type: \"textarea\",\n                height:-1,\n                onChange: 'putVar(\"dn.import_text\",input)'\n            }\n        });\n        d.push({\n            title:'📥导入',\n            col_type:'text_center_1',\n            url:$('确定编辑好了吗?此操作将覆盖本地已有的记录，建议备份后用空文件导入').confirm(()=>{\n                const {defaultSets} = $.require(\"hiker://page/demoData?rule=MyFieldᴰⁿ\");\n                let parseRoute = 'hiker://files/rules/DuanNian/MyParse.json';\n                let jsCode = fetch(parseRoute)||JSON.stringify({title:[],codes:{},settings:defaultSets});\n                try {\n                    eval('var json =' + jsCode);\n                }\n                catch (e) {\n                    return 'toast://发生错误:\\n'+e.message\n                }\n                let toImport = getVar(\"dn.import_text\");\n                if(/魔断解析导入口令¥¥/.test(toImport)&&toImport.split('¥¥').length>1){\n                    let url = toImport.split('¥¥')[1];\n                    if(!/^http/.test(url)){\n                        return 'toast://剪切板地址有误,导入失败'\n                    }\n                    toImport = parsePaste(url);\n                    toImport = base64Decode(toImport);\n                }\n                let jiexi = toImport.split('\\n').filter(it=>it.trim());\n                let parseTitle = [];\n                let parseCode = {};\n                for (let i in jiexi) {\n                    let title=jiexi[i].split(',')[0];\n                    let code=jiexi[i].split(',')[1];\n                    parseTitle.push(title);\n                    //log(title);\n                    if(!(code.replace(/[\\s]/g,'').startsWith('http'))){\n                        // log(title+'为函数解析');\n                        if(code.replace(/[\\s]/g,'').length>20){//视为function\n                            try {\n                                code = eval(base64Decode(code));\n                                // log(code);\n                            }catch (e) {\n                                code = e.message;\n                            }\n                        }\n                    }\n                    parseCode[title]=code;\n                }\n                let scObject = [\"CityIP\", \"pcUA\", \"cacheM3u8\", \"defaultParseWeb\",\"maoss\", \"LLQ\"];\n                parseTitle = parseTitle?parseTitle.filter(it=>!scObject.includes(it)):[];\n                var newParseTitle = json.title.concat(parseTitle);\n                json.title = Array.from(new Set(newParseTitle));\n                Object.assign(json.codes, parseCode);\n                let newFile = $.stringify(json); //JSON.parse会报错\n                writeFile(parseRoute, newFile);\n                refreshPage(false);\n                return 'toast://已成功导入'+jiexi.length+'条解析';\n            }),\n            extra:{\n                lineVisible:true\n            }\n        });\n        setResult(d);\n    }),\n});\nd.push({\n    title:'☯️查重处理',\n    col_type:'scroll_button',\n    url:$().lazyRule((unique2,duplicates,floors)=>{\n        let parseRoute = 'hiker://files/rules/DuanNian/MyParse.json';\n        let jsCode = fetch(parseRoute);\n        try {\n            eval('var json =' + jsCode);\n        }\n        catch (e) {\n            return 'toast://本地那个MyParse.json文件有问题,这个功能不给你用了!'\n        }\n        let titles = json.title;\n        let codes = json.codes;\n        let keys= Object.keys(codes);\n        let keys_re_ct = keys.length - unique2(keys).length; // 名称重复\n        let normal_list = [];\n        for(let o in codes){\n            if(typeof(codes[o])!=='undefined'&&typeof(codes[o])!=='function'){\n                normal_list.push(codes[o]);\n            }\n        }\n        let reNorList = unique2(normal_list);\n        let value_re_ct = normal_list.length - reNorList.length; //代码重复\n        let values_re = duplicates(normal_list);//重复的值\n        let ftlist = [];\n        let flags = {};\n        let myFloors = floors;\n        for(let j in codes){//遍历所有\n            let one = codes[j];\n            try {\n                if (typeof(one) !== 'function'&&values_re.includes(one)) {\n                    if (typeof (flags[one]) === 'undefined' || !flags[one]) {\n                        //取出第一个标志\n                        flags[one] = myFloors[0];\n                        myFloors.splice(0, 1);//删除标志列表里的第一个元素\n                    }\n                    ftlist.push({key: flags[one] + j, value: one});\n                } else {\n                    ftlist.push({key: j, value: one});\n                }\n            }catch (e) {\n                log(e.message)\n            }\n        }\n        // log(JSON.stringify(flags));\n        let newCodes = {};\n        for(let k in ftlist){\n            newCodes[ftlist[k].key] = ftlist[k].value;\n        }\n        let tips = '检测到名称复用项目数:'+keys_re_ct+',代码重复项目数量:'+value_re_ct+'\\n需要一键打个标识吗?不支持自动删除,打标志自行解决';\n        return $(tips).confirm((value_re_ct,json,newCodes,parseRoute)=>{\n            if(value_re_ct<1){\n                return 'toast://既然都是0个重复项目了，就不需要我做什么了!'\n            }\n            function compare(){\n                return function (a, b){\n                    const {floors} = $.require(\"hiker://page/demoData?rule=MyFieldᴰⁿ\");\n                    let x = a.substring(0,1);\n                    let y = b.substring(0,1);\n                    return floors.indexOf(y)-floors.indexOf(x);\n                }\n            }\n            json.codes = newCodes;\n            let titles = Object.keys(newCodes);\n            titles = titles.sort(compare());\n            json.title = titles;\n            var newFile = $.stringify(json); //JSON.parse会报错\n            writeFile(parseRoute, newFile);\n            refreshPage(false);\n            return 'toast://已一键打上标志';\n        },value_re_ct,json,newCodes,parseRoute)\n    },unique2,duplicates,floors),\n});\nd.push({\n    title:\"🔄重置B站UA\",\n    col_type: \"scroll_button\",\n    url: \"https://www.bilibili.com/\",\n    extra: {\n        ua: PC_UA\n    }\n});\nd.push({\n    title:\"🗑️批量删除\",\n    col_type: \"scroll_button\",\n    url: $('hiker://empty#noRecordHistory#').rule(()=>{\n        let localHtml = 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/plscParse.html';\n        let testcode = fetch(localHtml);\n        if(!testcode||/批量删除解析/.test(testcode)){\n            writeFile(localHtml,fetch('http://hiker.nokia.press/hikerule/zyw_data/10'));\n        }\n        let d = [];\n        d.push({title: \"批量删除解析\", desc: \"auto&&float\", url: \"file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/plscParse.html\", col_type: \"x5_webview_single\"});\n        setResult(d);\n    }),\n});\nlet web_sel = '爱奇艺/优酷/腾讯/芒果/哔哩哔哩/搜狐/西瓜/阿里/PPTV/咪咕/乐视/1905/风行'.split('/');\nd.push({\n    title:'‘‘’’<span style=\"color:#00d9ff\">来个测试地址',\n    col_type: \"text_2\",\n    url:$(web_sel,4).select((demoData,getOne)=>{\n        let urls = demoData[input];\n        let url = getOne(urls)||'';\n        if(!url){\n            return 'toast://'+input+'这个网站暂时没有播放例子'\n        }\n        putVar('parseUrl.url', url);\n        refreshPage(true);\n        return 'toast://给你找了个'+input+'的播放地址:\\n'+url;\n    },demoData,getOne)\n});\nif(getItem('dn.test_mode','Q神')==='Q神'){\n    d.push({\n        //'#ff7000'\n        title:'‘‘’’<span style=\"color:#ff7000\">Q神插件接口设置',\n        // title: '““Q神插件接口设置””',\n        url: \"hiker://page/EditUrl?rule=MyFieldᴰⁿ\",\n        col_type: 'text_2'\n    });\n}else if(getItem('dn.test_mode','Q神')==='断插'){\n    let url = realTitles.length>0?\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\":$('别设置了，先拉代码').confirm()\n    d.push({\n        title:'‘‘’’<span style=\"color:#ff7000\">断插接口设置',\n        url: url,\n        col_type: 'text_2'\n    });\n}\nd.push({\n    title:'‘‘’’<span style=\"color:#ff7000\">小白关怀模式: </span><span style=\"color:grey\"><small>不懂不学啥也不会？拯救傻白甜的你</small></span>',\n    url: $('#noLoading##noRecordHistory#').lazyRule(()=>{\n        return 'hiker://page/smallWhite?rule=MyFieldᴰⁿ'\n    }),\n    col_type: 'text_1',\n});\n\njxItem.lqFile();\nlet extra = d.slice(-7,d.length); //断插添加的元素\nd = d.slice(0,-7); // 自己的函数\nextra[0].title='拉取列表(不推荐)'\nextra[0].col_type='text_2'\nextra[1].title='拉取代码(强烈推荐)'\nextra[1].col_type='text_2'\nextra[4].col_type='text_center_1'\nextra[4].url=czGuide();\nextra.splice(2,1);\nd = d.concat(extra);\n// d.splice(d.length-5,1);\nsetResult(d);","searchFind":"","search_url":"","titleColor":"#","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"Parse_Dn-vue.html\",\"path\":\"Parse_Dn.html\",\"rule\":\"<!DOCTYPE html>\\n<html>\\n<head>\\n    <meta charset=\\\"utf-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\\\" />\\n    <title>Parse_Dn_vue</title>\\n    <script>\\n        const vuePath = 'hiker://files/rules/dzHouse/js/vue.js';\\n        if(typeof(fba)=='undefined'||!fba){\\n            var fba = fy_bridge_app;\\n        }\\n        try {\\n            if(typeof(request)=='undefined'||!request){\\n                eval(fba.getInternalJs());\\n            }\\n            // fba.log(vuePath);\\n            if(!request(vuePath)){\\n                fba.writeFile(vuePath,request('http://hiker.nokia.press/hikerule/rulelist.json?id=1823'));\\n            }\\n            try {\\n                eval(fba.fetch(vuePath));\\n            }catch (e) {\\n                // console.log(e.message);\\n                fba.log(e.message);\\n            }\\n            // fba.log('加载vue组件完毕');\\n        }catch (e) {\\n            alert(e.message);\\n        }\\n    </script>\\n    <!--    <script src=\\\"https://unpkg.com/vue@next\\\"></script>-->\\n    <!--    <script src=\\\"file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/js/vue.js\\\"></script>-->\\n    <style>\\n        body {\\n            margin: 0 5px 0 5px;\\n            padding: 0 0px 0 0px;\\n            /*            background: #F9F0DA;*/\\n            font-weight: 0;\\n            font-family: \\\"Microsoft YaHei\\\",\\\"宋体\\\",\\\"Segoe UI\\\", \\\"Lucida Grande\\\", Helvetica, Arial,sans-serif, FreeSans, Arimo;\\n        }\\n        #app{\\n            margin-top:-10px;\\n        }\\n        #tips{\\n            margin-top:-10px;\\n            margin-bottom:5px;\\n        }\\n        .fung{\\n            text-align:center\\n        }\\n        div.box {\\n            margin-top:-1px;\\n            height: 43px;\\n            line-height: 20px;\\n        }\\n        /*输入框尺寸*/\\n        form {\\n            background: transparent;\\n            position: relative;\\n            width: 100%;\\n        }\\n\\n        input, label, select {\\n            border: none;\\n            outline: none;\\n        }\\n        /*字体位置*/\\n        input {\\n            width: 77%;\\n            height: 32px;\\n            padding-left: 66px;\\n            padding-right: 0px;\\n        }\\n\\n        label {\\n            text-align:center;\\n            line-height: 43px;\\n            height: 40px;\\n            width: 60px;\\n            cursor: pointer;\\n            position: absolute;\\n        }\\n\\n        /*小框*/\\n        .bar label {\\n            /*background: #D06B6C;*/\\n            border-radius: 5px 555px 555px 5px;\\n            width: 60px;\\n            font-size: 13px;\\n            top: 0;\\n            left: 3px;\\n        }\\n\\n        /*输入框样式*/\\n        .bar input {\\n            /*border-radius: 5px 555px 555px 5px;\\n             */\\n            border-radius: 4px;\\n        }\\n\\n        /*列表*/\\n        select {\\n            text-align:center;\\n            line-height:40px;\\n            height: 40px;\\n            width: 20px;\\n            cursor: pointer;\\n            position: absolute;\\n        }\\n\\n        /*列表*/\\n        .lieb select{\\n            /*border-radius: 4px;*/\\n            border-radius: 555px 5px 5px 555px;\\n            width: 80px;\\n            text-align:center;\\n            font-size: 13px;\\n            top: 0;\\n            right: 2px;\\n        }\\n\\n        /*头像*/\\n        .round_icon{\\n            width: 40px;\\n            height: 40px;\\n            display: flex;\\n            border-radius: 50%;\\n            align-items: center;\\n            justify-content: center;\\n            overflow: hidden;\\n        }\\n    </style>\\n</head>\\n<body>\\n<div class=\\\"fung\\\">\\n    <a style=\\\"float:left;\\\">\\n        <button  :style=\\\"'border: none;border-radius:10px;background: '+themes.closeBtn.background+';width: 80px; font-size: 18px;color: '+themes.closeBtn.color\\\" onclick=\\\"cancel();\\\">关 闭</button>\\n    </a>\\n    <a class=\\\"btn btn-primary\\\">\\n        <button  :style=\\\"'border: none;border-radius:10px;background: '+themes.tipsBtn.background+';width: 120px; font-size: 18px;color: '+themes.tipsBtn.color\\\" @click=\\\"showTips=!showTips\\\">{{showTips?\\\"隐藏提示\\\":\\\"显示提示\\\"}}</button>\\n    </a>\\n    <a style=\\\"float:right\\\">\\n        <button :style=\\\"'border: none;border-radius:10px;background: '+themes.saveBtn.background+';width: 80px; font-size: 18px;color: '+themes.saveBtn.color\\\" onclick=\\\"clickme('配 置 已 保 存 ！', 1000, '开');\\\">保 存</button>\\n    </a>\\n\\n</div>\\n<br>\\n<div id=\\\"app\\\">\\n    <h6 id=\\\"tips\\\" v-html=\\\"tips\\\" v-show=\\\"showTips\\\"></h6>\\n    <div class=\\\"box bar\\\" v-for=\\\"option in options\\\">\\n        <form>\\n            <label type=\\\"submit\\\" :style=\\\"'background:'+themes.barlabel.background+';color:'+themes.barlabel.color\\\">{{ option.name }}</label>\\n            <input :style=\\\"'background:'+themes.barInput.background+';border: 3px solid '+themes.barInput.color\\\" type=\\\"text\\\" onclick=\\\"resetSelect(this.id)\\\" :placeholder=\\\"option.placeholder||placeholder\\\" v-model=\\\"option.value\\\" v-bind:id=\\\"option.id\\\">\\n            <div class=\\\"lieb\\\">\\n                <select :style=\\\"'background:'+themes.select.background+';color:'+themes.select.color\\\" :clearable=\\\"true\\\" size=\\\"2\\\" :id=\\\"option.id+'Select'\\\" :name=\\\"option.id\\\" onchange=\\\"getOption(this.id,this.name)\\\"  v-model=\\\"option.value\\\">\\n                    <option v-if=\\\"option.id!=='qju'&&option.id!=='cj'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in mySelect\\\">{{ sel }}</option>\\n                    <option v-else-if=\\\"option.id==='qju'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in ['默认'].concat(mySelect)\\\">{{ sel }}</option>\\n                    <option :value=\\\"sel\\\" :key=\\\"index\\\" v-else v-for=\\\"(sel,index) in cjSel\\\">{{ sel }}</option>\\n                </select>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n<div>\\n    <a v-for=\\\"ver in verinfo\\\" style=\\\"float:left;margin-top:1px;margin-right: 20px\\\" v-bind:id='ver.id' onclick=\\\"doOption(this.id)\\\">\\n        <img :src=\\\"ver.avatar\\\" class=\\\"round_icon\\\"  alt=\\\"\\\">\\n        <span style=\\\"margin-left:10px;line-height:10px;font-size:12px;color: grey;\\\">{{ ver.author }}</span>\\n    </a>\\n    <a style=\\\"float:right;margin-top:10px;\\\">\\n        <button :style=\\\"'border: none;border-radius:10px;background:'+themes.saveCloseBtn.background+';width: 160px;height:40px; font-size: 18px;color: '+themes.saveCloseBtn.color\\\" onclick=\\\"clickme('配 置 已 保 存 ！', 1000, '关');\\\">保存并关闭界面</button>\\n    </a>\\n</div>\\n<script>\\n    let tips = `提示：<br>①注意插件选项，没有手动导入插件的话不用动它。如设置不当会导致规则无法使用，<br>解决办法：视界打开更多设置→文件管理→点cache→长按MyParseSet.json删除掉；<br>②全局设置如果选择了非默认那么全部的解析会使用这一设置，不想这样的话请填入默认；<br>③绿色保存按钮仅仅保存配置不会关闭设置页面，配置后想保存并关闭设置页面的话请点蓝色按钮；<br>④如果遇到保存按钮点不动或者报错的情况，以下路径挨着删除一遍，然后重新拉取插件，网页再打开此网页[不要先拉代码]。记得备份<br>\\n主插件存放路径: /cache/Parse_Dn.js<br>\\n网页脚本存放路径: /cache/Parse_Dn.html<br>\\n旧断插配置路径:/cache/MyParseSet.json<br>\\n新断插配置路径/rules/DuanNian/MyParse.json<br>\\n    ⑤阅读完提示点关闭加载完整设置页面，如出问题无法自行解决点图片进入论坛向我反馈。<br>`;\\n    let placeholder='输入解析名或者URL......';\\n    //#aa96da #fc5185\\n    let themes = {\\n        name:'默认主题',\\n        closeBtn:{color:'#f6f6f6',background:'#aa96da'},\\n        saveBtn:{color:'#F9F0DA',background:'#068006'},\\n        saveCloseBtn:{color:'#F9F0DA',background:'#05BFC5'},\\n        tipsBtn:{color:'#F9F0DA',background:'#05BFC5'},\\n        barlabel:{color:'#F9F0DA',background:'#aa96da'},\\n        barInput:{color:'#aa96da',background:'#ffffd2'},\\n        select:{color:'#F9F0DA',background:'#aa96da'},\\n    };\\n    let themeDef = {\\\"name\\\":\\\"断念原皮\\\",\\\"closeBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#c5464a\\\"},\\\"saveBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#068006\\\"},\\\"saveCloseBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"tipsBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"barlabel\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"},\\\"barInput\\\":{\\\"color\\\":\\\"#D06B6C\\\",\\\"background\\\":\\\"#F9F0DA\\\"},\\\"select\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"}};\\n    var themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\n    if(!fba.fetch(themeRoute)){\\n        fba.writeFile(themeRoute,JSON.stringify({now_theme:'默认主题',themes:[themes,themeDef]}))\\n    }\\n    try {\\n        let myThemes = JSON.parse(fba.fetch(themeRoute));\\n        let nowTheme = myThemes.themes.filter(it=>it.name === myThemes.now_theme);\\n        themes = nowTheme?nowTheme[0]:myThemes.themes[0];\\n    }catch (e) {}\\n\\n    // 断念初始化部分\\n    const allApi=['https://test.rongxingvr.com/test/?url=','http://cache.languang.icu:88/didi.php?url='];\\n    var settings = {\\n        qy: '你爹科技',\\n        yk: '领酷',\\n        tx: '荣耀',\\n        mg: '蚂蚁兄弟',\\n        bl: 'OK解析',\\n        sh: '江湖D',\\n        xg: '江湖D',\\n        al: '江湖D',\\n        pp: '人人迷',\\n        mi: '1080',\\n        le: '迪奥嗅探',\\n        oth: '道长仓库通免',\\n        one: '1080',\\n        fun: '融兴',\\n        qju: '默认',\\n        cj: 'hiker://files/cache/Parse_Dn.js'\\n    };\\n    var oldRoute = \\\"hiker://files/cache/MyParseSet.json\\\";\\n    var mySet = fba.fetch(oldRoute);\\n    var newRoute = \\\"hiker://files/rules/DuanNian/MyParse.json\\\";\\n    if(!fba.fetch(newRoute)){\\n        fba.writeFile(newRoute,JSON.stringify({settings:settings,title:[\\\"yun1717\\\",\\\"你爹科技\\\",\\\"融兴\\\",\\\"人人迷-优酷\\\"],codes:{\\\"你爹科技\\\":\\\"http://cache.languang.icu:88/didi.php?url=\\\",\\\"融兴\\\":\\\"https://test.rongxingvr.com/test/?url=\\\",\\\"人人迷-优酷\\\":\\\"https://svip.renrenmi.cc:2222/api/?key=nn4j8rukPXSVzR78E9&url=\\\"}}))\\n    }\\n    var newConfig = fba.fetch(newRoute);\\n    var mySelect = [];\\n    function compare(list) {\\n        return function (it) {\\n            return !list.includes(it)\\n        }\\n    }\\n    if(newConfig&&newConfig.length>20){\\n        eval(\\\"newConfig =\\\" + newConfig + \\\";\\\");\\n        settings = Object.assign(settings,newConfig.settings);\\n        var ycTitle = ['defaultParse', 'defaultParseWeb','maoss', 'CityIP', 'cacheM3u8', 'pcUA', 'parseLc', 'gparse', 'nparse'];\\n        mySelect = newConfig.title.filter(compare(ycTitle));\\n        // mySelect = mySelect.map((it)=>{\\n        //     let flag = 'Ⓤ';\\n        //     if(typeof(newConfig.codes[it])==='function'){\\n        //         flag = 'Ⓙ';\\n        //     }else if(typeof(newConfig.codes[it])==='undefined'){\\n        //         flag = '';\\n        //     }\\n        //     return flag+it\\n        // });\\n    }\\n    //fba.log(JSON.stringify(mySelect));\\n\\n    let options = [\\n        {\\n            name:'爱奇艺',\\n            id:'qy',\\n            value:settings.qy,\\n            placeholder:'设置爱奇艺'\\n        },\\n        {\\n            name:'优酷',\\n            id:'yk',\\n            value:settings.yk\\n        },\\n        {\\n            name:'腾讯',\\n            id:'tx',\\n            value:settings.tx\\n        },\\n        {\\n            name:'芒果',\\n            id:'mg',\\n            value:settings.mg\\n        },\\n        {\\n            name:'哔哩哔哩',\\n            id:'bl',\\n            value:settings.bl\\n        },\\n        {\\n            name:'搜狐',\\n            id:'sh',\\n            value:settings.sh\\n        },\\n        {\\n            name:'西瓜',\\n            id:'xg',\\n            value:settings.xg\\n        },\\n        {\\n            name:'阿里',\\n            id:'al',\\n            value:settings.al\\n        },\\n        {\\n            name:'PPTV',\\n            id:'pp',\\n            value:settings.pp\\n        },\\n        {\\n            name:'咪咕',\\n            id:'mi',\\n            value:settings.mi\\n        },\\n        {\\n            name:'乐视',\\n            id:'le',\\n            value:settings.le\\n        },\\n        {\\n            name:'1905',\\n            id:'one',\\n            value:settings.one\\n        },\\n        {\\n            name:'风行',\\n            id:'fun',\\n            value:settings.fun\\n        },\\n        {\\n            name:'其他',\\n            id:'oth',\\n            value:settings.oth\\n        },\\n        {\\n            name:'全局',\\n            id:'qju',\\n            value:settings.qju\\n        },\\n        {\\n            name:'插件',\\n            id:'cj',\\n            value:settings.cj\\n        },\\n    ];\\n\\n    function Did(id){\\n        return document.getElementById(id);\\n    }\\n    function getOption(id,title) {\\n        var obj = Did(id);\\n        Did(title).value = obj.options[obj.selectedIndex].text;\\n        // Did(title).value = obj.options[obj.selectedIndex].text.replace(/Ⓤ|Ⓙ/g,'');\\n    }\\n    function resetSelect(id){\\n        Did(id+\\\"Select\\\").options.selectedIndex = -1;\\n    }\\n\\n    //函数部分\\n\\n    function Toast(msg,duration){\\n        duration=isNaN(duration)?2000:duration;\\n        var m = document.createElement('div');\\n        m.innerHTML = msg;\\n        m.style.cssText=\\\"width:45%; min-width:150px; background:#311; opacity:0.6; height:auto;min-height: 45px; color:#fff; line-height:45px; text-align:center; border-radius:10px; position:fixed; top:60%; left:26%; z-index:999999;\\\";\\n        document.body.appendChild(m);\\n        setTimeout(function() {\\n            var d = 0.5;\\n            m.style.webkitTransition = '-webkit-transform ' + d + 's ease-in, opacity ' + d + 's ease-in';\\n            m.style.opacity = '0';\\n            setTimeout(function() { document.body.removeChild(m) }, d * 1000);\\n        }, duration);\\n    }\\n\\n    function openDnPage(){\\n        fba.open(JSON.stringify({\\n            rule: \\\"=^_^=\\\",\\n            title: \\\"编辑解析\\\",\\n            url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory##noRecordHistory#\\\",\\n            group: \\\"\\\",\\n            col_type: \\\"\\\",\\n            //findRule: \\\"js:this.d=[];$.require(\\\\\\\"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\\\\\\\").edit();setResult(d);\\\",\\n            preRule: \\\"\\\",\\n            extra: {}\\n        }));\\n    }\\n    function openTheme(){\\n        fba.open(JSON.stringify({\\n            rule: \\\"=^_^=\\\",\\n            title: \\\"主题管理\\\",\\n            url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=主题#noHistory##noRecordHistory#\\\",\\n            group: \\\"\\\",\\n            col_type: \\\"\\\",\\n            preRule: \\\"\\\",\\n            extra: {}\\n        }));\\n    }\\n    function openJxManage(){\\n        fba.open(JSON.stringify({\\n            rule: \\\"=^_^=\\\",\\n            title: \\\"解析配置管理\\\",\\n            url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=解析#noHistory##noRecordHistory#\\\",\\n            group: \\\"\\\",\\n            col_type: \\\"\\\",\\n            preRule: \\\"\\\",\\n            extra: {}\\n        }));\\n    }\\n    function cancel(){\\n        if(!mySet){\\n            fba.writeFile(oldRoute, JSON.stringify(settings, null, 4));\\n            fba.refreshPage(true);\\n        }else{\\n            fba.back(false);\\n        }\\n    }\\n    function clickme(msg,duration,title){\\n        try{\\n            for(let key in settings){\\n                // fba.log(Did(key)+''+key);\\n                try{\\n                    //settings[key] = Did(key).value.replace(/Ⓤ|Ⓙ/g,'');\\n                    settings[key] = Did(key).value;\\n                }catch(e){\\n                    alert(\\\"未获取到节点:\\\"+key+\\\"\\\\n\\\"+e.message);\\n                }\\n\\n            }\\n            if(mySelect){\\n                Object.assign(newConfig.settings, settings);\\n                fba.writeFile(newRoute, $$$.stringify(newConfig));\\n            }\\n            fba.writeFile(oldRoute, $$$.stringify(settings));\\n            Toast(msg,duration);\\n            if(title===\\\"关\\\"){\\n                fba.back();\\n            }else{\\n                fba.refreshPage(true);\\n            }\\n        }catch(e){\\n            alert(e.message)\\n        }\\n    }\\n\\n    //let width=window.screen.availWidth;\\n    //let widthPx=+52;\\n    //alert(\\\"当前分辨率:\\\"+window.screen.availWidth+\\\"*\\\"+window.screen.height);\\n    var verinfo = [{\\n        id:'dn',\\n        author:'断念',\\n        avatar:'https://s3.ax1x.com/2021/02/22/y7wb9O.jpg',\\n        option:openDnPage,\\n    },\\n        {\\n            id:'dz',\\n            author:'道长',\\n            avatar:'http://q1.qlogo.cn/g?b=qq&nk=434857005&s=640',\\n            option:openTheme\\n        },\\n        {\\n            id:'lm',\\n            author: '蓝莓',\\n            avatar: 'http://q1.qlogo.cn/g?b=qq&nk=2579949378&s=640',\\n            option:openJxManage\\n        }\\n    ];\\n\\n    function doOption(option_id){\\n        let ver = verinfo.filter(it=>it.id===option_id)[0];\\n        ver.option();\\n    }\\n\\n    const RenderHtmlApp = {\\n        data() {\\n            return {\\n                // rawHtml: '<span style=\\\"color: red\\\">这里会显示红色！</span>',\\n                options:options,\\n                verinfo:verinfo,\\n                placeholder:placeholder,\\n                tips:tips,\\n                themes:themes,\\n                mySelect:mySelect,\\n                // cjSel:['请选择插件 (只作用lazyRule)','hiker://files/cache/Parse_Dn.js','hiker://files/rules/dzHouse/js/srcauto.js','hiker://files/rules/js/Parse-V2_Dn.js'],\\n                cjSel:['请选择插件 (只作用lazyRule)','hiker://files/cache/Parse_Dn.js'],\\n                settings:settings,\\n                showTips:false,\\n                //widthPx:widthPx\\n            }\\n        },\\n        methods:{\\n            // changeVal:function(event){\\n            //     getOption(this.id,this.name);\\n            //     this.selOption = event.target.value;\\n            //     alert(\\\"你选中了\\\"+event.target.value);\\n            // }\\n            doOption:doOption\\n        }\\n    }\\n    try {\\n        const app=Vue.createApp(RenderHtmlApp);\\n        app.mount('body');\\n    }catch (e) {\\n        console.log(e.message)\\n    }\\n\\n</script>\\n\\n</body>\\n</html>\"},{\"col_type\":\"movie_3\",\"name\":\"Parse_Dn.js\",\"path\":\"Parse_Dn.js\",\"rule\":\"//============免嗅调用============\\n//－－－=^_^=\\n\\nvar version = 3.491211;\\nvar updateDate = '2021/12/11/16:11';\\nvar _mySet = {\\n    qju: '默认',\\n    oth:'道长仓库通免',\\n    cjcache: 'hiker://files/cache/Parse_Dn.js',\\n    themecache: 'hiker://files/cache/MyTheme.json',\\n    jiexicache: 'hiker://files/cache/MyJiexi.json',\\n    x5cache: 'hiker://files/cache/Parse_Dn.html',\\n    oldConfig: 'hiker://files/cache/MyParseSet.json',\\n    ckLink: 'https://code.aliyun.com//Hiker/raw/master/v/',\\n    cj: 'https://code.aliyun.com//Hiker/raw/master/v/CloudParse-V2_Dn.js',\\n    x5Url: 'https://code.aliyun.com//Hiker/raw/master/v/Parse_Dn.html',\\n    parseRoute: 'hiker://files/rules/DuanNian/MyParse.json',\\n    x5Route: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/Parse_Dn.html'\\n};\\nvar MyParseS = {};\\nvar mySet = _mySet;\\nif (fileExist(_mySet.parseRoute)) {\\n    eval('var parseFile =' + fetch(_mySet.parseRoute));\\n    MyParseS = parseFile.codes;\\n    mySet = parseFile.settings;\\n}\\nvar parseTitle = [\\n    \\\"yun1717\\\",\\n    \\\"PanGu\\\",\\n    \\\"FuXing\\\",\\n    \\\"isVideo\\\",\\n    \\\"defaultParse\\\",\\n    \\\"道长仓库通免\\\",\\n    \\\"defaultParseWeb\\\",\\n    \\\"OK解析\\\",\\n    \\\"M3U8TV\\\",\\n];\\n//－－－=^_^=\\n\\n//接口设置.\\n\\nvar setUrl = \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noRecordHistory#\\\";\\nvar set_switch = setUrl;\\nvar lazy = `eval('var config =' + fetch(getVar('oldConfig')));eval(fetch(config.cj));aytmParse(input)`;\\n\\n//var parwix = `var yurl='https://daili.mayixiongdi.cn/?url=';Referer': 'https://www.mayixiongdi.cn/ys?id=';'https://daili.mayixiongdi.cn/api.php', 'Referer':'https://daili.mayixiongdi.cn';\\n// 全民https://pcvideoaliyun.tianshangrenjian.mgtv.com.88wuma.com/?url=\\n\\n//－－－备 用－－－\\n/*\\n * 影视工场： https://ysgc.cc/\\n * 江湖: 555电影 https://www.555dy2.com/phone.html ｜ 17看 http://17kanyy.cn/ http://jhjiexi.30vr.cn/?url= ｜ http://api.maizimall.com/index.php?url=\\n * 江湖: http://www.tianshuyun.net/index.php/vod/play/id/448377/sid/1/nid/1.html\\n * 江湖2: http://98hyk.cn/index.php/vod/play/id/72841/sid/1/nid/1.html\\n * 人人迷: https://vip.susou.tv/player/?url= ｜ https://www.momdm.cc/\\n *\\n * wuigen: https://www.5igen.com/dmplayer/player/?url=\\n * 干饭(人人迷): https://jx.zui.cm/?url=\\n * https://2.66movie.top/player/?url=\\n *\\n */\\n\\n\\nvar tools = {\\n    MD5: function(data) {\\n        eval(getCryptoJS());\\n        return CryptoJS.MD5(data).toString(CryptoJS.enc.Hex);\\n    },\\n    AES: function(text, key, iv, isEncrypt) {\\n        eval(getCryptoJS());\\n        var key = CryptoJS.enc.Utf8.parse(key);\\n        var iv = CryptoJS.enc.Utf8.parse(iv);\\n        if (isEncrypt) {\\n            return CryptoJS.AES.encrypt(text, key, {\\n                iv: iv,\\n                mode: CryptoJS.mode.CBC,\\n                padding: CryptoJS.pad.Pkcs7\\n            }).toString();\\n        };\\n        return CryptoJS.AES.decrypt(text, key, {\\n            iv: iv,\\n            padding: CryptoJS.pad.Pkcs7\\n        }).toString(CryptoJS.enc.Utf8);\\n    },\\n    //ascii\\n    nextCharacter: function(asciiValue, k) {\\n        var s = asciiValue;\\n        return String.fromCharCode(s + k);\\n    },\\n    //凯撒\\n    caesarCipher: function(stringValue, k) {\\n        var newString = \\\"\\\";\\n        for (var i = 0; i < stringValue.length; i++) {\\n            newString += this.nextCharacter(stringValue[i].charCodeAt(), k);\\n        }\\n        return newString;\\n    },\\n    nowDate: function() {\\n        var date1 = new Date();\\n        var dateStr = \\\"\\\";\\n        if (date1) {\\n            dateStr = date1.getFullYear();\\n            var month = date1.getMonth() + 1;\\n            var day = date1.getDate();\\n            if (month < 10) {\\n                dateStr += \\\"-0\\\" + month;\\n            } else {\\n                dateStr += \\\"-\\\" + month;\\n            }\\n            if (day < 10) {\\n                dateStr += \\\"-0\\\" + day;\\n            } else {\\n                dateStr += \\\"-\\\" + day;\\n            }\\n        }\\n        return dateStr;\\n    },\\n    toJSON: function(json) {\\n        return JSON.stringify(json, (key, value) => {\\n            if (typeof value == 'function') {\\n                return value.toString();\\n            } else {\\n                return value;\\n            }\\n        }, 4);\\n    },\\n    toVNum: function(a) {\\n        var a = a.toString();\\n        var c = a.split('.');\\n        var num_place = [\\\"\\\", \\\"0\\\", \\\"00\\\", \\\"000\\\", \\\"0000\\\"],\\n            r = num_place.reverse();\\n        for (var i = 0; i < c.length; i++) {\\n            var len = c[i].length;\\n            c[i] = r[len] + c[i];\\n        }\\n        var res = c.join('');\\n        return res;\\n    },\\n    cprVersion: function(a, b) {\\n        var _a = parseInt(this.toVNum(a)),\\n            _b = parseInt(this.toVNum(b));\\n        b = isNaN(_b) ? version : b;\\n        if (_a > _b) {\\n            putVar('jxNewV', '有新版本: ' + a);\\n        } else {\\n            clearVar('jxNewV');\\n        }\\n        putVar('jxOldV', b);\\n    },\\n    atob:function (str){\\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\\n        return Base64.atob(str);\\n    },\\n    btoa:function (str){\\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\\n        return Base64.btoa(str);\\n    },\\n    江湖:function (config_url, tem, token) {\\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\\n        var atob=Base64.atob;\\n        var btoa=Base64.btoa;\\n        var config_a = tem || \\\"ffsirllq\\\";\\n        var video = '';\\n        var tem = [];\\n        var config_arry = [];\\n        var config_b = config_a.length;\\n        if (token == 0x1) {\\n            var config_url = atob(config_url);\\n        } else {\\n            var config_url = encodeURIComponent(config_url);\\n        }\\n        var config_c = config_url.length;\\n        for (i = 0x0; i < 0x100; i++) {\\n            tem[i] = config_a[i % config_b].charCodeAt();\\n            config_arry[i] = i;\\n        }\\n        for (j = i = 0x0; i < 0x100; i++) {\\n            j = (j + config_arry[i] + tem[i]) % 0x100;\\n            tmp = config_arry[i];\\n            config_arry[i] = config_arry[j];\\n            config_arry[j] = tmp;\\n        }\\n        for (a = j = i = 0x0; i < config_c; i++) {\\n            a = (a + 0x1) % 0x100;\\n            j = (j + config_arry[a]) % 0x100;\\n            tmp = config_arry[a];\\n            config_arry[a] = config_arry[j];\\n            config_arry[j] = tmp;\\n            k = config_arry[(config_arry[a] + config_arry[j]) % 0x100];\\n            video += String.fromCharCode(config_url[i].charCodeAt() ^ k);\\n        }\\n        log(decodeURIComponent(video));\\n        if (token == 0x1) {\\n            return decodeURIComponent(video);\\n        } else {\\n            return btoa(video);\\n        }\\n    }\\n};\\nif (getVar(\\\"jxOldV\\\", \\\"0\\\") != version) {\\n    putVar('cjCache', _mySet.cjcache);\\n    putVar('x5Cache', _mySet.x5Cache);\\n    putVar('oldConfig', _mySet.oldConfig);\\n    putVar('parseRoute', _mySet.parseRoute);\\n    let jxNewV = fetch('https://gitee.com/Duan-Nian/Dn/raw/master/hikerview/ParseVersion.txt'),\\n        jxOldV = (fetch(_mySet.cjcache).split('version = \\\"')[1] + '').split('\\\"')[0];\\n    tools.cprVersion(jxNewV, jxOldV);\\n}\\n\\nvar ParseS = {};\\nvar originalParseS = {\\n    // updateDate: updateDate,\\n    parseLc:'https://code.aliyun.com//Hiker/raw/master/p/parseLc.js',\\n    CityIP: 'http://pv.sohu.com/cityjson',\\n    pcUA: 'User-Agent@Mozilla/5.0 (Windows NT 10.0\\\\；\\\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36',\\n    cacheM3u8: function(vUrl, ref) {\\n        try {\\n            var m3u8 = fetch(vUrl, {});\\n            writeFile('hiker://files/cache/videos.m3u8', m3u8);\\n        } catch (e) {}\\n        return 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/videos.m3u8#';\\n    },\\n    isVideo:function(playUrl){\\n        const {isVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n        return isVideo(playUrl)\\n    },\\n    defaultParse: function(url,timeout) {\\n        return ParseS.defaultParseWeb(url,timeout);\\n    },\\n    defaultParseWeb: function(playUrl,timeout,extra) {\\n        // log('传入defaultParseWeb的超时:'+timeout);\\n        timeout = parseInt(timeout)||parseInt(getVar('dp.jxTimeout','5000'))||5000;\\n        extra = extra||{};\\n        let playUrlList = extra.playUrlList||[];\\n        if(typeof(playUrlList)==='object'&&playUrlList.length>0){\\n            playUrlList.unshift(playUrl);\\n            let playUrls=playUrlList.slice(0,4);\\n            let names=extra.nameList.slice(0,4);\\n           // log('开始批量解析(已去重,只取前3个备胎，加道长群:486722328获取最新魔断动态):'+names);\\n            playUrls=playUrls.map((it,id)=>it+\\\";\\\"+names[id]);\\n            //log(playUrls);\\n            const {LazyParseFast} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            let ret = LazyParseFast(playUrls,timeout,timeout);\\n            if(typeof(ret)==='object'&&ret.length>0){\\n                //return ret[0]\\n                //log(ret);\\n                let v = getAppVersion();\\n                if(parseInt(v)>=2194&&ret.length>1){\\n                    let urls = Array.from(new Set(ret));\\n                    names=urls.map((it,id)=>it.split(\\\"★\\\").length>1?it.split(\\\"★\\\")[1]:\\\"线路:\\\"+parseInt(id+1));\\n                    urls=urls.map(it=>it.split(\\\"★\\\")[0]);\\n                    let headers = urls.map((it)=>{\\n                        if(!/;/.test(it)||it.split(';').length<2){\\n                            return {}\\n                        }else{\\n                            let head = it.split(';')[1];\\n                            if(!/@/.test(head)||!/{|}/.test(head)){\\n                                return {}\\n                            }\\n                            head=head.split(\\\"{\\\")[1].split(\\\"}\\\")[0];\\n                            //head = head.replace(/{|}/g,'');\\n                            head = head.split('&&');\\n                            let obj = {};\\n                            for(let i in head){\\n                                let key = head[i].split('@')[0];\\n                                let value = head[i].split('@')[1].replace(/;/,'；；');\\n                                obj[key] = value;\\n                            }\\n                            return obj\\n                        }\\n                    });\\n                    urls = urls.map((it)=>{\\n                        let turl=it.split(';')[0];\\n                        if(it.includes(\\\"#isVideo=true#\\\")&&!turl.includes(\\\"#isVideo=true#\\\")){\\n                            turl+=\\\"#isVideo=true#\\\";\\n                        }\\n                        return turl\\n                    });\\n                    return JSON.stringify({urls:urls,headers:headers,names:names});\\n                }else{\\n                    return ret[0].split(\\\"★\\\")[0]\\n                }\\n            }else{\\n                return ret\\n            }\\n        }else{\\n            const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            let x5Play=lazyParse(playUrl,timeout);\\n            if(typeof(x5Play)==\\\"undefined\\\"||!x5Play){\\n                return \\\"toast://道长仓库解析失败\\\"\\n            }\\n            let tips=/x5Rule|webRule/.test(x5Play)?\\\"x5/web免嗅开始\\\":\\\"极速免嗅探完毕，地址:\\\"+(/^http/.test(x5Play)?x5Play:'非正常链接');\\n            log(tips);\\n            return x5Play;\\n        }\\n    },\\n    \\\"maoss\\\":\\n        function (jxurl, ref, key) {\\n            return this.猫(jxurl, ref, key)\\n        },\\n    免嗅:function(vipUrl,k){\\n        k=k||\\\"url\\\";\\n        try{\\n            let realUrl=JSON.parse(fetch(vipUrl))[k];\\n            if(realUrl.startsWith('/')){\\n                realUrl = 'https://'+realUrl;\\n            }\\n            return this.isVideo(realUrl)||\\\"\\\";\\n        }catch(e){\\n            //log(e.message);\\n            return \\\"\\\"\\n        }\\n    },\\n    '猫':function (jxurl, ref, key) {\\n        try {\\n            var getVideoInfo = function (text) {\\n                return tools.AES(text, key, iv);\\n            };\\n            let headers = {headers: {\\\"Referer\\\": ref||''}};\\n            var html = ref?request(jxurl, headers):request(jxurl);\\n            if (/&btwaf=/.test(html)) {\\n                html = request(jxurl + \\\"&btwaf\\\" + html.match(/&btwaf(.*?)\\\"/)[1], {headers: {\\\"Referer\\\": ref}});\\n            }\\n            var iv = html.split(\\\"_token = \\\\\\\"\\\")[1].split(\\\"\\\\\\\"\\\")[0];\\n            eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + \\\"\\\");\\n            if (!/^http/.test(config.url)) {\\n                config.url = decodeURIComponent(tools.AES(config.url, \\\"dvyYRQlnPRCMdQSe\\\", iv));\\n            }\\n            return config.url;\\n        }\\n        catch (e) {\\n            return \\\"\\\";\\n        }\\n    },\\n    LLQ: function(jxurl) {\\n        try {\\n            var api = jxurl.split('?url=')[0] + \\\"api.php\\\";\\n            var b64id = base64Encode(jxurl.split('url=')[1]);\\n            var parseid = tools.caesarCipher(b64id, -1);\\n            var json = JSON.parse(request(api, {\\n                headers: {\\n                    'Referer': jxurl\\n                },\\n                method: 'POST',\\n                body: 'url=' + parseid\\n            }));\\n            url = (json.code == 200 ? base64Decode(tools.caesarCipher(json.url, -1)) : '');\\n            return url;\\n        } catch (e) {\\n            return '';\\n        }\\n    },\\n    PanGu: function(vipUrl, data) {\\n        try {\\n            /*var ref = 'https://www.pangujiexi.com/';\\n            var parse = 'https://panguapi.ntryjd.net/jiexi/?url=' + vipUrl;\\n            var api = 'https://panguapi.ntryjd.net/jiexi/api.php';\\n            */\\n            //var ref = 'https://xmystv.com/';\\n            //var parse = 'https://www.99kpw.com/pangu/index.php?url=' + tailUrl;\\n            //var api = 'https://www.99kpw.com/pangu/api.php';\\n            var parse = 'https://www.pangujiexi.com/pangu/?url=' + vipUrl;\\n            var api = 'https://panguapi.ntryjd.net/pangu2021/api.php';\\n            if (data) {\\n                ref = data[0];\\n                parse = data[1];\\n                api = data[2];\\n            }\\n            var Time = (Math.floor(new Date().getTime() / 1000) * 1).toString();\\n            var url = JSON.parse(request(api, {\\n                headers: {\\n                    'Referer': parse\\n                },\\n                body: 'url=' + vipUrl + '&referer=' + base64Encode(parse) + '&ref=1&time=' + Time + '&type=&other=' + base64Encode(vipUrl) + '&ios=0',\\n                method: 'POST'\\n            })).url;\\n            return url;\\n        } catch (e) {\\n            return '';\\n        }\\n    },\\n    yun1717: function (vipUrl) {\\n        var isyk = vipUrl.indexOf('youku');\\n        var ref = \\\"https://www.1717yun.com/jx/ty.php?url=\\\" + vipUrl;\\n        var parse = \\\"https://1717yun.com..net/0828/?url=\\\" + vipUrl;\\n        var api = \\\"https://1717yun.com..net/1004/..index..php\\\";\\n        return isyk == -1 ? this.PanGu(vipUrl, [ref, parse, api]) : this.PanGu(vipUrl, [ref + ',vip:', parse + ',vip:', api]);\\n    },\\n    OK解析:'https://okjx.cc/?url=',\\n    M3U8TV:'https://jx.m3u8.tv/jiexi/?url=',\\n    道长仓库通免:function (url,timeout){\\n        return ParseS.defaultParseWeb(url,timeout);\\n    },\\n    FuXing: function(vipUrl) {\\n        try {\\n            //if(vipUrl.indexOf('v.youku')!=-1){\\n            //    vipUrl = (JSON.parse(request(vipUrl, {redirect:false, withHeaders:true})).headers.location + '').replace(/\\\\?.*/,'');\\n            //}\\n            var ref = 'https://jx.xuetuiguang.cn/jiexi/?url=' + vipUrl;\\n            var parse = ref;\\n            var api = 'https://jx.xuetuiguang.cn/jiexi/apiu_fx.php';\\n            return this.PanGu(vipUrl, [ref, parse, api]);\\n        } catch (e) {\\n            return '';\\n        }\\n    },\\n};\\n\\nObject.assign(ParseS, originalParseS, MyParseS);\\n//覆盖顺序，第三个覆盖第二个然后覆盖第一个\\n\\n\\nfunction aytmParse(vipUrl,strTitle,timeout,playUrl) {\\n    // 参数1:正版网址地址 参数2 定向解析接口名称 参数3 x5解析超时 参数4 完整的播放链接\\n    strTitle = strTitle||'';\\n    vipUrl = decodeURIComponent(vipUrl);\\n    playUrl=decodeURIComponent(playUrl)||vipUrl||'';\\n    // log('传入aytmParse的超时:'+timeout);\\n    timeout = parseInt(timeout)||parseInt(getVar('dp.jxTimeout','5000'))||5000;\\n\\n    //-------------------------------------------------\\n    let jxsRoute = \\\"hiker://files/cache/MyJiexi.json\\\";\\n    let MyJiexi = {};\\n    let jiexis = {};\\n    try {\\n        MyJiexi = JSON.parse(fetch(jxsRoute));\\n        jiexis = MyJiexi.jiexis.filter(it=>it.name===MyJiexi.now)[0];\\n    }catch (e) {}\\n    function getPlayJx(key){\\n        let playUrlList = [];//批量播放地址列表\\n        let nameList = [];\\n        let jxs = jiexis[key]; // 适用于这个网站的解析列表\\n        if(jxs){\\n            for(let i in jxs){\\n                if(typeof ParseS[jxs[i]] == 'string'&&ParseS[jxs[i]].match(/http.*?=/)){\\n                    playUrlList.push(ParseS[jxs[i]]+vipUrl);\\n                    nameList.push(jxs[i]);\\n                }\\n            }\\n        }\\n        // return playUrlList\\n        return {playUrlList:playUrlList,nameList:nameList}\\n    }\\n    let extra = {};\\n    //-------------------------------------------------------\\n    if(!strTitle){\\n        if(/renrenmi-|fendou\\\\.duoduozy/.test(vipUrl)){\\n            str = mySet.pp;\\n            extra = getPlayJx('pp');\\n        }else{\\n            var host;\\n            try{\\n                host = vipUrl.match(/\\\\.(.*?)\\\\//)[1];\\n            }catch(e){\\n                if(!/^http/.test(playUrl)){\\n                    return \\\"断插调用失败！\\\\n非正常的vip正版地址且未识别原站解析播放地址\\\";\\n                }else{\\n                    return ParseS.道长仓库通免(playUrl,timeout)\\n                }\\n            }\\n            //host = decodeURIComponent(host);\\n            switch (mySet.qju) {\\n                case \\\"默认\\\":\\n                    switch (host) {\\n                        case \\\"qq.com\\\":\\n                            str = mySet.tx;\\n                            extra = getPlayJx('tx');\\n                            break;\\n                        case \\\"iqiyi.com\\\":\\n                            str = mySet.qy;\\n                            extra = getPlayJx('qy');\\n                            break;\\n                        case \\\"youku.com\\\":\\n                            str = mySet.yk;\\n                            extra = getPlayJx('yk');\\n                            break;\\n                        case \\\"alizy\\\":\\n                            str = mySet.al;\\n                            extra = getPlayJx('al');\\n                            break;\\n                        case \\\"mgtv.com\\\":\\n                            str = mySet.mg;\\n                            extra = getPlayJx('mg');\\n                            break;\\n                        case \\\"bilibili.com\\\":\\n                            str = mySet.bl;\\n                            extra = getPlayJx('bl');\\n                            break;\\n                        case \\\"sohu.com\\\":\\n                            str = mySet.sh;\\n                            extra = getPlayJx('sh');\\n                            break;\\n                        case \\\"tv.sohu.com\\\":\\n                            str = mySet.sh;\\n                            extra = getPlayJx('sh');\\n                            break;\\n                        case \\\"ixigua.com\\\":\\n                            str = mySet.xg;\\n                            extra = getPlayJx('xg');\\n                            break;\\n                        case \\\"pptv.com\\\":\\n                            str = mySet.pp;\\n                            extra = getPlayJx('pp');\\n                            break;\\n                        case \\\"miguvideo.com\\\":\\n                            str = mySet.mi;\\n                            extra = getPlayJx('mi');\\n                            break;\\n                        case \\\"le.com\\\":\\n                            str = mySet.le;\\n                            extra = getPlayJx('le');\\n                            break;\\n                        case \\\"1905.com\\\":\\n                            str = mySet.one;\\n                            extra = getPlayJx('one');\\n                            break;\\n                        case \\\"fun.tv\\\":\\n                            str = mySet.fun;\\n                            extra = getPlayJx('fun');\\n                            break;\\n                        default:\\n                            str = mySet.oth;\\n                            break;\\n                    }\\n                    break;\\n                default:\\n                    str = mySet.qju;\\n                    break;\\n            }\\n        }\\n    }else{\\n        log('魔断执行定向解析线路头:'+strTitle);\\n        str = strTitle;\\n    }\\n    let withBatch = !!(MyJiexi.isAuto && MyJiexi.autoMode === '速度优先');\\n    if (typeof ParseS[str] == 'function') {\\n        if(/通免/.test(str)){\\n            return ParseS[str](vipUrl,timeout);\\n        }\\n        var url = ParseS[str](vipUrl);\\n        if(/^hiker:|^toast:|^rule:/.test(url)){\\n        return url;\\n        }\\n        if(!url&&!/^http/.test(vipUrl)){\\n            return 'toast://魔断解析失败>'+vipUrl\\n        }\\n        // log(vipUrl+'免嗅探结果:'+url);\\n        if (/^\\\\//.test(url)) {\\n            url = 'https:' + url\\n        }\\n        if (/=http/.test(url)) {\\n            url = /&url=/.test(url) ? url : 'http' + decodeURIComponent(url.split('=http')[1]);\\n        }\\n        /*if(url.match(/mgtv.com/g)=='mgtv.com'){\\n            url = url + ';{Referer@https://www.mgtv.com}';\\n        } else */\\n        if (/\\\\.flv/.test(url)&&!/User-Agent/.test(url)) {\\n            url = url + ';{User-Agent@app&&Referer@' + vipUrl + '}';\\n        }\\n        if (url === '' || url === vipUrl) {\\n            return vipUrl;\\n        } else if(!/#isVideo=true#/.test(url)){\\n            return url + '#isVideo=true#';\\n        }else{\\n            return url\\n        }\\n    } else if (typeof ParseS[str] == 'string'&&ParseS[str].match(/http.*?=/)) {\\n        // log(\\\"断插开始通用执行免嗅 defaultParseWeb:\\\"+timeout);\\n        //log(\\\"默认x5\\\"+ParseS.defaultParseWeb);\\n        if(withBatch){\\n            if(typeof(extra.playUrlList)==='object'&&extra.playUrlList.length>0){\\n                extra.playUrlList = extra.playUrlList.filter(it=>it!==(ParseS[str]||str) + vipUrl);\\n                let nameList = extra.nameList;\\n                nameList.unshift(str);\\n                function unique2(array){\\n                    return Array.from(new Set(array));\\n                }\\n                extra.nameList=unique2(nameList);\\n                extra.playUrlList = unique2(extra.playUrlList);\\n            }\\n        }else{\\n            extra = {}\\n        }\\n        return ParseS.defaultParseWeb?ParseS.defaultParseWeb((ParseS[str]||str) + vipUrl,timeout,extra):(ParseS[str]||str) + vipUrl;\\n    } else if(typeof(str)==='string'&&str.length>1&&(typeof ParseS[str]=='undefined'||!ParseS[str])&&!/^http/.test(str)){\\n        return 'toast://请进行断插配置,推荐拉取道长精选!\\\\n检测到无效的解析配置:'+str;\\n    }else {\\n        return ParseS.defaultParse(str + vipUrl,timeout);\\n    }\\n}\\n\\nvar playParse = {\\n    player_xx: function(jurl, Label) {\\n        return $(jurl).lazyRule((k) => {\\n            var jsUrl = JSON.parse(fetch(getVar('oldConfig'))).cj;\\n            var Label = k;\\n            var fa = ['letv', 'pptv', 'qq', 'youku', 'qiyi', 'iqiyi', 'mgtv', 'bilibili', 'sohu', 'migu', 'm1905', 'vip'];\\n            var html = parseDom(request(input), Label);\\n            eval(html.replace(/player_.*?={/, 'pdata={'));\\n            eval(fetch(jsUrl));\\n            if (pdata.url.substr(0, 8).match(/JT..JT../)) {\\n                pdata.url = base64Decode(pdata.url);\\n            }\\n            if (pdata.url.substr(0, 8).match(/%..%../)) {\\n                pdata.url = unescape(pdata.url);\\n            }\\n            if (fa.includes(pdata.from)) {\\n                return aytmParse(pdata.url);\\n            } else {\\n                return pdata.url + '#isVideo=true#';\\n            }\\n        }, Label)\\n    }\\n};\\nfunction mzPopup() {\\n    /*\\n    if (getVar(\\\"ijk-tx\\\", \\\"\\\") == \\\"1\\\") {\\n        setItem(\\\"tixing\\\", \\\"1\\\")\\n        clearVar(\\\"ijk-tx\\\")\\n    }\\n    if (getItem(\\\"tixing\\\", \\\"\\\") == \\\"\\\") {\\n        confirm({\\n            title: '免责声明',\\n            content: '本程序不提供视频解析服务\\\\n所有内容均从用户分享中收集\\\\n仅供测试和学习交流\\\\n\\\\n确定即认可，不再提醒',\\n            confirm: $.toString(() => {\\n                putVar(\\\"ijk-tx\\\", \\\"1\\\");\\n                refreshPage(false);\\n                return \\\"toast://点击了确认\\\"\\n\\n            })\\n        })\\n    }\\n     */\\n}\\n/*\\nif (!getVar(\\\"tixing\\\")) {\\n    mzPopup();\\n    putVar('tixing','ok');\\n}\\n*/\\nfunction saveButton(content,name) {\\n    name = name||'';\\n    var data = content.split('★★★');\\n    if (data.length === 2) {\\n        var _dt = parsePaste(data[0]);\\n        content = _dt.substr(0, 6) !== 'error:' ? _dt : '';\\n    }\\n    data = content.split('★');\\n    var type = data[0];\\n    var arrList = [];\\n    var objCode = {};\\n    if (data.length > 2 && data[0] !== '直链') {\\n        var objKey = data[1];\\n        var objValue = data[2];\\n        if (type === 'MyParseS') {\\n            objValue = base64Decode(objValue);\\n        }\\n        if (objValue.split('function').length > 1) {\\n            eval('objValue=' + objValue);\\n        }\\n        arrList.splice(0, 0, objKey); //添加项目非删除\\n        objCode[objKey] = objValue;\\n\\n    } else if (type === '直链') {\\n        arrList = data;\\n        arrList.splice(0, 1);\\n    } else {\\n        arrList = null;\\n    }\\n    if (arrList != null) {\\n        var parseRoute = getVar('parseRoute');\\n        eval('var json =' + fetch(parseRoute));\\n        Array.prototype.remove = function(val) {\\n            let index = this.indexOf(val);\\n            if (index > -1) {\\n                this.splice(index, 1);\\n            }\\n        };\\n        if(name){//删除名称列表和代码\\n            json.title.remove(name);\\n            delete json.codes[name];\\n        }\\n        arrList = arrList.concat(json.title);\\n        json.title = Array.from(new Set(arrList));\\n        Object.assign(json.codes, objCode);\\n        if (type === '测试') {\\n            eval('var config =' + fetch(getVar('oldConfig')));\\n            eval(fetch(config.cj));\\n            if (typeof ParseS[data[1]] == \\\"function\\\") {\\n                return ParseS[data[1]](data[2]);\\n            } else {\\n                return ParseS.defaultParseWeb(ParseS[data[1]] + data[2]);\\n            }\\n        } else {\\n            writeFile(parseRoute, $.stringify(json));\\n            return \\\"toast://已保存内容\\\";\\n        }\\n    } else {\\n        return \\\"toast://无法识别这个内容呢\\\"\\n    }\\n}\\n// 以下代码千万不要放出来否则报错\\nif (getItem('updateDate') != updateDate) {\\n// if (true) {\\n    // 把function变成string\\n    let functionCode = saveButton + ';'+mzPopup;\\n    // writeFile('hiker://files/cache/plscParse.html', fetch(_mySet.ckLink + 'plscParse.html'));\\n    setItem('myFunction', functionCode);\\n    setItem('updateDate', updateDate);\\n}\\nvar bjItem = {\\n    hfPlugin: function(parseRoute) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            if (fileExist(k)) {\\n                var cjcache = getVar('cjCache');\\n                eval('var json =' + fetch(k));\\n                json.settings.cj = cjcache;\\n                writeFile(k, $.stringify(json));\\n                var oldRoute = getVar('oldConfig');\\n                var oldConfig = json.settings;\\n                oldConfig.cj = cjcache;\\n                writeFile(oldRoute, $.stringify(oldConfig));\\n                refreshPage(false);\\n                return 'toast://恢复成功';\\n            } else {\\n                return 'toast://需要先拉取列表'\\n            }\\n        }, parseRoute)\\n    },\\n    pullCode: function(k) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            var pullMode = k[0];\\n            var parseRoute = k[1];\\n            var parseFile = fetch(parseRoute);\\n            if (!parseFile) {\\n                var settings = fetch(getVar('oldConfig'));\\n                settings = !settings ? {} : JSON.parse(settings);\\n                var json = {};\\n                json.settings = settings;\\n                json.title = [];\\n                json.codes = {};\\n            } else {\\n                eval('var json =' + parseFile);\\n            }\\n            var parseTitle = [];\\n            var parseCode={};\\n            var cjLink = getVar('pluginLink');\\n            try {\\n                if(/@base64:\\\\/\\\\//.test(cjLink)){\\n                    eval(base64Decode(cjLink.split('@base64://')[1]));\\n                }else if(/插件名/.test(cjLink)){\\n                    let realLink = cjLink.split('插件名')[0].replace(/[\\\\s]/g,'');\\n                    log('解析云剪切板:'+realLink);\\n                    let yPaste = parsePaste(realLink);\\n                    if(/@base64:\\\\/\\\\//.test(yPaste)){\\n                        try {\\n                            eval(base64Decode(yPaste.split('@base64://')[1]));\\n                            if(typeof ParseS==='undefined'){\\n                                return 'toast://拉取个鸡毛插件,里面连ParseS对象都没有!'\\n                            }\\n                        }catch (e) {\\n                            return 'toast://鸡毛插件执行报错:\\\\n'+e.message;\\n                        }\\n                    }else{\\n                        return 'toast://未能识别云剪切板中的内容:\\\\n'+yPaste.substring(0,100);\\n                    }\\n                } else if (cjLink === 'Q神') {\\n                    let jiexi = fetch('hiker://files/jiexi/jiexi.txt').split('\\\\n');\\n                    for (i in jiexi) {\\n                        let title=jiexi[i].split('&&')[0];\\n                        let code=jiexi[i].split('&&')[1];\\n                        parseTitle.push(title);\\n                        parseCode[title]=code;\\n                    }\\n                }\\n                // }else if(/^#[a-zA-Z0-9]{2,10}$/.test(cjLink)){//福利口令2到10位\\n                else if(/^#[\\\\S]{2,10}$/.test(cjLink)){//福利口令2到10位任意非空字符串\\n                    const {taskCall, taskRun,taskReq} = $.require(\\\"hiker://page/taskCall?rule=道长仓库Pro\\\");\\n                    // log('开始执行任务仓库获取断念插件福利口令');\\n                    let result = taskCall(17,'DnFuli',[cjLink]);\\n                    if (result.status === 0) {\\n                        let ret = JSON.parse(result.result);\\n                        // log(ret);\\n                        if(ret.opt==='error'){\\n                            return 'toast://'+ret.msg;\\n                        }else if(ret.opt==='url'){\\n                            let html = fetch(ret.ret);\\n                            let arr = html.includes('http')? html:base64Decode(html);\\n                            let jiexi = arr.match(/[\\\\S]*?,.*?[\\\\s]/g);\\n                            for (let i in jiexi) {\\n                                let title=jiexi[i].split(',')[0];\\n                                let code=jiexi[i].split(',')[1].split(\\\"\\\\n\\\")[0];\\n                                parseTitle.push(title);\\n                                parseCode[title]=code;\\n                            }\\n                        }else if(ret.opt==='jx'){\\n                            if(/[\\\\S]*?,http[\\\\S]/.test(ret.ret)){\\n                                let title = ret.ret.split(',')[0];\\n                                let code = ret.ret.split(',')[1].split('\\\\n')[0];\\n                                parseTitle.push(title);\\n                                parseCode[title]=code;\\n                            }else if(/^http/.test(ret.ret)){\\n                                let title = cjLink.split('#')[1];\\n                                let code = ret.ret.split('\\\\n')[0];\\n                                parseTitle.push(title);\\n                                parseCode[title]=code;\\n                            }else{\\n                                return 'toast://未知的福利:\\\\n'+ret.ret;\\n                            }\\n                        }else if(ret.opt==='vipJx'){\\n                            let title = cjLink.split('#')[1];\\n                            let code = ret.ret;\\n                            // log(code);\\n                            parseTitle.push(title);\\n                            parseCode[title]=/function/.test(code)?eval(code):code;\\n                        }\\n                    }else{\\n                        return 'toast://仓库非最新版或者福利社功能开发中'\\n                    }\\n                }else if(cjLink==='断插'){\\n                    eval(fetch(\\\"hiker://files/cache/Parse_Dn.js\\\"));\\n                    parseTitle=Object.keys(ParseS);\\n                }else if(/^hiker:\\\\/\\\\/|^file:\\\\/\\\\/|^http|^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(cjLink)){\\n                    if(/^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(cjLink)){\\n                        cjLink = 'file://'+cjLink;\\n                    }\\n                    eval(fetch(cjLink));\\n                    parseTitle=Object.keys(ParseS);\\n                }else{\\n                    return 'toast://拉取口令有误'\\n                }\\n            } catch (e) {\\n                log(e.message);\\n            }\\n            var jxJudge = typeof ParseS == 'object';\\n            var lbJudge = typeof(parseTitle) == 'object';\\n            if (jxJudge || lbJudge) {\\n                // if (pullMode === '列表') {\\n                //     if (!lbJudge) {\\n                //         parseTitle = Object.keys(ParseS);\\n                //     }\\n                //     var newParseTitle = json.title.concat(parseTitle);\\n                //     json.title = Array.from(new Set(newParseTitle));\\n                // }\\n                // 不管拉取代码还是列表都要把列表拉了\\n                if (!lbJudge) {\\n                    parseTitle = Object.keys(ParseS);\\n                    log(parseTitle);\\n                }\\n                var scObject = [\\\"CityIP\\\", \\\"pcUA\\\", \\\"cacheM3u8\\\",\\\"isVideo\\\", \\\"defaultParse\\\",\\\"defaultParseWeb\\\",\\\"maoss\\\", \\\"LLQ\\\",\\\"parseLc\\\"];\\n                parseTitle = parseTitle?parseTitle.filter(it=>!scObject.includes(it)):[];\\n                var newParseTitle = json.title.concat(parseTitle);\\n                json.title = Array.from(new Set(newParseTitle));\\n\\n                if (pullMode === '代码') {\\n                    if (typeof originalParseS == 'object') {\\n                        for (let i in scObject) {\\n                            delete originalParseS[scObject[i]];\\n                        }\\n                        // originalParseS =originalParseS.filter(it=>!scObject.includes(Object.getOwnPropertyNames(it)[0]));\\n                        Object.assign(json.codes, originalParseS);\\n                    } else {\\n                        if(typeof(ParseS)==\\\"undefined\\\"){\\n                            Object.assign(json.codes, parseCode);\\n                            //return \\\"toast://没有代码，不可拉取\\\"\\n                        }else{\\n                            Object.assign(json.codes, ParseS);\\n                        }\\n                    }\\n                }\\n                //var newFile = tools.toJSON(json);//自定义stringify函数，带有转义字符\\n                var newFile = $.stringify(json); //JSON.parse会报错\\n                writeFile(parseRoute, newFile);\\n                refreshPage(false);\\n                return 'toast://拉取' + pullMode + '成功';\\n            } else {\\n                return 'toast://未获取到对象';\\n            }\\n        }, [k, _mySet.parseRoute])\\n    },\\n    pullScript: function(cj, x5) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            var cjFrom = 'hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ';\\n            var x5From = 'hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ';\\n            try {\\n                var cjFile = JSON.parse(fetch(cjFrom)).rule;\\n                var x5File = JSON.parse(fetch(x5From)).rule;\\n                writeFile(k[0], cjFile);\\n                writeFile(k[1], x5File);\\n                clearVar('jxOldV');\\n                clearVar('jxNewV');\\n                refreshPage(false);\\n                return 'toast://拉取成功';\\n            } catch (e) {\\n                return 'toast://未成功获取内容';\\n            }\\n        }, [cj, x5])\\n    },\\n    xlSelect: function(bianji, lbLength) {\\n        return \\\"select://\\\" + JSON.stringify({\\n            options: ['‘‘’’<span style=\\\"color:red\\\" title=\\\"删除||' + bianji + '\\\">删 除', '‘‘’’<span style=\\\"color:#F57474\\\" title=\\\"隐藏||' + bianji + '\\\">隐 藏', '‘‘’’<span style=\\\"color:#FF8000\\\" title=\\\"修改||' + bianji + '\\\">修 改', '‘‘’’<span style=\\\"color:#098AC1\\\" title=\\\"置顶||' + bianji + '0' + '\\\">置 顶', '‘‘’’<span style=\\\"color:#098AC1\\\" title=\\\"移动||' + bianji + '\\\">移 动', '‘‘’’<span style=\\\"color:#098AC1\\\" title=\\\"置底||' + bianji + lbLength + '\\\">置 底', '‘‘’’<span style=\\\"color:#04B431\\\" title=\\\"分享||' + bianji + '\\\">地板分享', '‘‘’’<span style=\\\"color:#04B431\\\" title=\\\"云分享||' + bianji + '\\\">云板分享'],\\n            col: '2',\\n            js: $.toString(() => {\\n                var parseRoute = getVar('parseRoute');\\n                eval('var json =' + fetch(parseRoute));\\n                var newInput = parseDomForHtml(input, 'span&&title').split('||');\\n                // 修改,迪迪,0   操作类型,名称,索引\\n                var type = newInput[0];\\n                var name = newInput[1];\\n                var num = newInput[2];\\n                var num2 = newInput[3];\\n                switch (type) {\\n                    case \\\"删除\\\":\\n                        let k = [name, num];\\n                        // 总感觉筛选或者搜索后，由于num的位置不对可能会删除错,事实如此,已修?\\n                        return $(\\\"即将删除: \\\" + name).confirm((k) => {\\n                            var name = k[0];\\n                            var num = k[1];\\n                            var parseRoute = getVar('parseRoute');\\n                            eval('var json =' + fetch(parseRoute));\\n                            if (json.codes.hasOwnProperty(name)) {\\n                                delete json.codes[name];\\n                            }\\n                            num = json.title.indexOf(name); //这样才会得到正确的索引\\n                            json.title.splice(num, 1);\\n                            writeFile(parseRoute, $.stringify(json));\\n                            refreshPage(false);\\n                            return \\\"toast://已将〖\\\" + name + \\\"〗删除\\\";\\n                        }, k);\\n                    case \\\"隐藏\\\":\\n                        return $(\\\"hiker://empty#noLoading#\\\").lazyRule((k) => {\\n                            var name = k[0];\\n                            var num = k[1];\\n                            var parseRoute = getVar('parseRoute');\\n                            eval('var json =' + fetch(parseRoute));\\n                            if (json.codes.hasOwnProperty(name)) {\\n                                num = json.title.indexOf(name); //这样才会得到正确的索引\\n                                json.title.splice(num, 1);\\n                                writeFile(parseRoute, $.stringify(json));\\n                                refreshPage(false);\\n                                return \\\"toast://已将〖\\\" + name + \\\"〗隐藏\\\";\\n                            } else {\\n                                return \\\"toast://可能是个网址, 您可选择删除\\\";\\n                            }\\n                        }, [name, num]);\\n                    case \\\"修改\\\":\\n                        //if (json.codes[name]) {\\n                        var nCode = name;\\n                        var titles = json.title;\\n                        var nName = \\\"这是名称\\\";\\n                        if (json.codes[name]) {\\n                            nCode = json.codes[name].toString();\\n                            nName = name;\\n                        }\\n                        return $(\\\"hiker://empty#noRecordHistory#\\\").rule((k,titles) => {\\n                            var d = [];\\n                            eval(getItem('myFunction'));\\n                            var name = k[0];\\n                            var code = k[1];\\n                            d.push({\\n                                title: '保 存',\\n                                url: saveButton + \\\"saveButton(getVar('input_edit'),name);back();\\\",\\n                                col_type: \\\"input\\\",\\n                                desc: \\\"建议按默认的代码格式修改哦\\\",\\n                                extra: {\\n                                    onChange: \\\"putVar('input_edit', input)\\\",\\n                                    type: \\\"textarea\\\",\\n                                    height: \\\"-1\\\",\\n                                    titleVisible: false,\\n                                    defaultValue: '修改★' + name + '★' + code,\\n                                }\\n                            });\\n                            d.push({\\n                                title: '‘‘’’<small><span style=\\\"color:#6EB897\\\">格式为：操作类型★标题★function(){自定义内容}<br>请勿填入其他格式',\\n                                url: $('#noLoading#').lazyRule((saveButton,name,titles) => {\\n                                    let tmpAr = getVar('input_edit').split('★');\\n                                    if(tmpAr.length<2){\\n                                        return 'toast://修改格式有误，访问被拒绝'\\n                                    }\\n                                    let newName = tmpAr[1];\\n                                    if(newName!==name&&titles.includes(newName)){\\n                                        return $('检测到同名接口:'+newName+',是否覆盖?').confirm((saveButton,name)=>{\\n                                            let code = saveButton(getVar('input_edit'),name);\\n                                            back();\\n                                            return 'toast://已保存修改\\\\n请自行检测覆盖后的内容';\\n                                        },saveButton,name);\\n                                    }else{\\n                                        let code = saveButton(getVar('input_edit'),name);\\n                                        back();\\n                                        return 'toast://已保存修改';\\n                                    }\\n                                    // if(typeof(code)==='string'&&code.length>2){\\n                                    //     return code\\n                                    // }else{\\n                                    //     return 'toast://已保存修改';\\n                                    // }\\n                                }, saveButton,name,titles),\\n                                desc: '‘‘’’<big><big><span style=\\\"color:#298A08\\\">保 存',\\n                                col_type: 'text_center_1'\\n                            });\\n                            setResult(d);\\n                        }, [nName, nCode],titles) //[name, json.codes[name].toString()])\\n                    /*} else {\\n                        return \\\"toast://只有网址或者标题, 不支持修改\\\"\\n                    }*/\\n                    case \\\"置顶\\\":\\n                    case \\\"置底\\\":\\n                        eval('var json =' + fetch(parseRoute));\\n                        num = json.title.indexOf(name); //这样才会得到正确的索引\\n                        if(num>-1){\\n                            var item = json.title.splice(num, 1);\\n                            json.title.splice(num2, 0, item[0]);\\n                            writeFile(parseRoute, $.stringify(json));\\n                            refreshPage(false);\\n                        }else{\\n                            return 'toast://没找到:'+name;\\n                        }\\n                        break;\\n                    case \\\"移动\\\":\\n                        return $('hiker://empty#noLoading#').lazyRule((k) => {\\n                            putVar('bianji', '移动#' + k);\\n                            refreshPage(false);\\n                            return input;\\n                        }, num);\\n                    case \\\"分享\\\":\\n                    case \\\"云分享\\\":\\n                        if (json.codes[name]) {\\n                            var parseText = typeof json.codes[name] == 'function' ? $.stringify(json.codes[name]) : json.codes[name];\\n                            parseText = 'MyParseS★' + name + '★' + base64Encode(parseText);\\n                        } else {\\n                            var parseText = '直链★' + json.title[num];\\n                        }\\n                        if (type == '云分享' && parseText.substr(0, 8) == 'MyParseS') {\\n                            parseText = sharePaste(parseText);\\n                            return parseText.substr(0, 6) != 'error:' ? 'copy://' + parseText + '\\\\n★★★\\\\n' + 'MyParseS：' + name : 'toast://分享失败!!云剪贴板可能挂了';\\n                        } else {\\n                            return 'copy://' + parseText;\\n                        }\\n                    default:\\n                        return 'toast://暂不支持';\\n                } //switch的\\n            }) //String的\\n        }) //stringify的\\n    },\\n    xjParse: function() {\\n        return $(\\\"hiker://empty#noHistory#\\\").rule(() => {\\n            var d = [];\\n            eval(getItem('myFunction'));\\n            d.push({\\n                title: '保 存',\\n                url: saveButton + \\\"saveButton(input);back();clearVar('input_add')\\\",\\n                col_type: \\\"input\\\",\\n                desc: \\\"输入正确格式内容\\\",\\n                extra: {\\n                    onChange: 'putVar(\\\"input_add\\\", input)',\\n                    type: \\\"textarea\\\",\\n                    height: \\\"-1\\\",\\n                    titleVisible: false,\\n                    defaultValue: getVar('input_add'),\\n                }\\n            });\\n            d.push({\\n                title: '‘‘’’<small><span style=\\\"color:#6EB897\\\">按描述诉格式输入, 请勿填入其他格式<br>本地口令: 操作类型★名称★代码<br>云口令: 链接★★★名称; 纯网址: 直链★url1★url2',\\n                desc: '‘‘’’<big><big><span style=\\\"color:#298A08\\\">保 存',\\n                url: $('noLoading').lazyRule((saveButton) => {\\n                    return saveButton(getVar('input_add'));\\n                }, saveButton),\\n                col_type: 'text_center_1'\\n            });\\n            setResult(d);\\n        })\\n    },\\n    ydParse: function(BJmode, i) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            var A = k[0].split('#')[1];\\n            var B = k[1];\\n            var parseRoute = getVar('parseRoute');\\n            eval('var json =' + fetch(parseRoute));\\n            var item = json.title.splice(A, 1); // 1: 标记开始位置，2: 删除到哪个位置\\n            json.title.splice(B, 0, item[0]); // 1: 同上，2: 0表示不删除，3: 添加对象\\n            writeFile(parseRoute, $.stringify(json));\\n            clearVar('bianji');\\n            refreshPage(false);\\n            return 'hiker://empty';\\n        }, [BJmode, i])\\n    },\\n    plscParse: function() {\\n        return $('hiker://empty#noRecordHistory#').rule(() => {\\n            var d = [];\\n            d.push({\\n                title: '批量删除解析',\\n                desc: 'auto&&float',\\n                url: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/plscParse.html',\\n                col_type: 'x5_webview_single'\\n            })\\n            setResult(d);\\n        })\\n    }\\n};\\n\\nfunction setParse() {\\n    $.require(\\\"hiker://page/Route?rule=MyFieldᴰⁿ\\\").setParse();\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"调用路由\",\"path\":\"Route\",\"rule\":\"js:\\nconst d = [];\\nconst data = {};\\n\\ndata.oldConfig = \\\"hiker://files/cache/MyParseSet.json\\\";\\ndata.cjRoute = \\\"hiker://files/cache/Parse_Dn.js\\\";\\ndata.x5Route = \\\"file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/Parse_Dn.html\\\";\\n\\n\\ndata.jxLazy = \\\"eval('var config =' + fetch('\\\" + data.oldConfig + \\\"'));eval(fetch(config.cj));aytmParse(input)\\\";\\n\\ndata.szParse = \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory##noRecordHistory#\\\";\\n\\ndata.setParse = function() {\\n    d.push({\\n        desc: '795',\\n        url: this.x5Route,\\n        col_type: 'x5_webview_single'\\n    });\\n    var oldV = getVar('jxOldV');\\n    var newV = getVar('jxNewV');\\n    var versionTips = parseFloat(newV) > parseFloat(oldV) ? '‘‘有新版本: v' + newV : '‘‘';\\n    var pics = [\\n        'https://cdn.seovx.com/img/seovx-20-10%20(92).jpg',\\n        'https://cdn.seovx.com/img/mom2018%20(207).jpg',\\n        'https://tva4.sinaimg.cn/large/9bd9b167gy1fwrh5xoltdj21hc0u0tax.jpg',\\n        'https://tva1.sinaimg.cn/large/005BYqpggy1fwreyu4nl6j31hc0u0ahr.jpg',\\n        'https://s3.bmp.ovh/imgs/2021/10/d7e60b990742093d.jpeg',\\n        'https://s3.bmp.ovh/imgs/2021/10/91ad6d6538bf8689.jpg',\\n        'https://tva1.sinaimg.cn/large/005BYqpggy1fwresl5pmlj31hc0xcwka.jpg',\\n        'https://tva3.sinaimg.cn/large/005BYqpggy1fwrgjdk74oj31hc0u0dqn.jpg',\\n        'https://cdn.seovx.com/img/mom2018%20(320).jpg',\\n        'https://cdn.seovx.com/img/mom2018%20(803).jpg'\\n    ];\\n    d.push({\\n        img: pics[Math.floor(Math.random() * 10)],\\n        title: versionTips + '’’<small><span style=\\\"color:#6EB897\\\"><br>　　点击上方头像进入编辑<br>点此进入论坛帖子列表',\\n        desc: '当前版本: v' + oldV,\\n        url: 'https://haikuoshijie.cn/user/1958',\\n        col_type: 'movie_1'\\n    });\\n  setResult(d);\\n}\\n\\nswitch (getParam(\\\"type\\\")) {\\n    case \\\"设置\\\":\\n        data.setParse();\\n        //setResult(d);\\n        break;\\n    case \\\"编辑\\\":\\n        $.require(\\\"hiker://page/jxItem?rule=MyFieldᴰⁿ\\\").jxList();\\n        setResult(d);\\n        break;\\n\\tcase \\\"主题\\\":\\n\\t     $.require(\\\"hiker://page/theme?rule=MyFieldᴰⁿ\\\").themeInit();\\n        break;\\n\\tcase \\\"解析\\\":\\n\\t     $.require(\\\"hiker://page/jxManage?rule=MyFieldᴰⁿ\\\").jxManage();\\n        break;\\n    default:\\n        $.exports = data;\\n        break;\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析项主界面\",\"path\":\"jxItem\",\"rule\":\"eval(JSON.parse(fetch('hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ')).rule);\\nvar isLogin = function (){return true}\\nfunction bbsYZ() {\\n    var _0x47a9b4 = {\\n        'JxSMn': function(_0x249952, _0x4abc15) {\\n            return _0x249952 + _0x4abc15;\\n        },\\n        'LGwmC': '移动#',\\n        'GvDVY': function(_0x461f2d, _0x540571) {\\n            return _0x461f2d + _0x540571;\\n        },\\n        'WfeHD': '‘‘’’<small><span style=\\\"color:#FE9A2E\\\">',\\n        'EqIls': '移动: ',\\n        'Effbn': 'text_2',\\n        'RxkxA': function(_0x32a7d0, _0x1a932c) {\\n            return _0x32a7d0(_0x1a932c);\\n        },\\n        'VBGJH': 'jdRoute',\\n        'BZgRt': function(_0x26984e, _0x5cc926) {\\n            return _0x26984e === _0x5cc926;\\n        },\\n        'rgGCC': 'wDVEb',\\n        'MczOW': function(_0x2880bf, _0x2d9306, _0x97787a) {\\n            return _0x2880bf(_0x2d9306, _0x97787a);\\n        },\\n        'FUjdm': 'bbsYZ',\\n        'lqFhb': function(_0x43bbe6) {\\n            return _0x43bbe6();\\n        },\\n        'FURpy': function(_0x2265c2, _0xa1d568, _0x29de01) {\\n            return _0x2265c2(_0xa1d568, _0x29de01);\\n        },\\n        'XIObB': 'var xdRoute=\\\\\\\"\\\\\\\";'\\n    };\\n    if (!_0x47a9b4['RxkxA'](getVar, _0x47a9b4['VBGJH'])) {\\n        if (_0x47a9b4['BZgRt'](_0x47a9b4['rgGCC'], 'JVkAZ')) {\\n            d['push']({\\n                'title': _0x47a9b4['JxSMn'](_0x47a9b4['LGwmC'], i) == BJmode ? _0x47a9b4['JxSMn'](_0x47a9b4['GvDVY'](_0x47a9b4['WfeHD'], _0x47a9b4['EqIls']), xsList) : '‘‘’’<span style=\\\"color:#298A08\\\">' + xsList,\\n                'url': bjItem['ydParse'](BJmode, i),\\n                'col_type': _0x47a9b4['Effbn']\\n            });\\n        } else {\\n            _0x47a9b4['MczOW'](putVar, _0x47a9b4['FUjdm'], _0x47a9b4['lqFhb'](isLogin||function (){return true}));\\n            _0x47a9b4['FURpy'](putVar, 'jdRoute', _0x47a9b4['XIObB']);\\n        }\\n    }\\n    return getVar(_0x47a9b4['FUjdm']);\\n}\\nvar jxItem = {\\n    'jxList': function() {\\n        var _0x4c0427 = {\\n            'UVWoF': function(_0x26bb07, _0x221b4d) {\\n                return _0x26bb07 + _0x221b4d;\\n            },\\n            'color':function(text, color) {\\n                text += \\\"\\\";\\n                if (text.indexOf(\\\"““””\\\") === 0) {\\n                    text.replace(\\\"““””\\\", \\\"\\\");\\n                }\\n                return \\\"““””<font color='\\\" + color + \\\"'>\\\" + text + \\\"</font>\\\";\\n            },\\n            'kzWDK': function(_0x4854a9, _0x3e98c5) {\\n                return _0x4854a9 + _0x3e98c5;\\n            },\\n            'XXyQr': '移动#',\\n            'gtUnj': function(_0x59aaf7, _0x22c66b) {\\n                return _0x59aaf7 + _0x22c66b;\\n            },\\n            'UtfWf': '‘‘’’<small><span style=\\\\\\\"color:#FE9A2E\\\\\\\">',\\n            'QOvJV': '移动: ',\\n            'ABEwB': '‘‘’’<span style=\\\\\\\"color:#298A08\\\\\\\">',\\n            'ozzWG': 'text_2',\\n            'nWfVR': function(_0x480f3a, _0x4c84fc) {\\n                return _0x480f3a + _0x4c84fc;\\n            },\\n            'JCcNY': 'parseRoute',\\n            'rgDIp': 'bianji',\\n            'hoIdJ': '‘‘’’<big><span style=\\\\\\\"color:#6EB897\\\\\\\">新 建 解 析',\\n            'FrGOH': function(_0x12d6db, _0x2a068d) {\\n                return _0x12d6db < _0x2a068d;\\n            },\\n            'oCCSj': function(_0x19b178, _0x4ef8f6) {\\n                return _0x19b178 === _0x4ef8f6;\\n            },\\n            'HZhlc': function(_0x5cae03, _0x26e242) {\\n                return _0x5cae03 == _0x26e242;\\n            },\\n            'cgIeA': function(_0x25e368, _0x8bc8e9) {\\n                return _0x25e368 + _0x8bc8e9;\\n            },\\n            'xdrFv': function(_0x4ab5d8, _0x21242f) {\\n                return _0x4ab5d8 + _0x21242f;\\n            },\\n            'ywjux': function(_0x5e3051, _0x4e0230) {\\n                return _0x5e3051(_0x4e0230);\\n            }\\n        };\\n        var _0x1d8bb1 = getVar(_0x4c0427['JCcNY']);\\n        var _0x3b89ab = parseFile['title'];\\n        var _0x49da96 = getVar(_0x4c0427['rgDIp']);\\n        d.push({\\n            title: _0x4c0427['hoIdJ'],\\n            desc:'注意:位置操作功能只在分类筛选为全部时生效\\\\n下方搜索按名称或地址,重置请留空或点解析数量按钮',\\n            url: bjItem['xjParse'](),\\n            col_type: 'text_center_1',\\n            extra: {\\n                lineVisible:false\\n            }\\n        });\\n        d.push({\\n            title:'搜索',\\n            desc:'mengx',\\n            col_type:'input',\\n            extra: {\\n                onChange: \\\"putVar('dp.searchJx',input)\\\",\\n                titleVisible: true,\\n                textSize: 11,\\n                defaultValue:getVar('dp.searchJx',''),\\n            },\\n            url:$.toString(()=>{\\n                refreshPage(true);\\n                return 'hiker://empty'\\n            })\\n        });\\n        let filters = ['全部','链接','json','免嗅'];\\n        for(let o in filters){\\n            d.push({\\n                title:getVar('dn.jx_filter','全部')===filters[o]?'““””<span style=\\\"color:#298A08\\\">'+filters[o]:filters[o],\\n                col_type:'scroll_button',\\n                url:$('#noLoading#').lazyRule((it)=>{\\n                    putVar('dn.jx_filter',it);\\n                    refreshPage(true);\\n                    return 'hiker://empty'\\n                },filters[o]),\\n            });\\n        }\\n        var _0x2ecbe5 = _0x3b89ab['length'];\\n        var json={title:[],codes:{}};\\n        let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\\n        try {\\n            eval('json='+setFile);\\n        }catch (e) {\\n            log('Json解析发生了错误:'+e.message);\\n        }\\n        if(getVar('dn.jx_filter','全部')==='链接'){\\n            _0x3b89ab = _0x3b89ab.filter(it=>(!/©$/.test(it))&&typeof(json.codes[_0x4c0427['nWfVR'](it, '')['replace'](/http.*\\\\/\\\\//g, '')])==='string');\\n        }else if(getVar('dn.jx_filter','全部')==='免嗅'){\\n            _0x3b89ab = _0x3b89ab.filter(it=>typeof(json.codes[_0x4c0427['nWfVR'](it, '')['replace'](/http.*\\\\/\\\\//g, '')])==='function');\\n        }else if(getVar('dn.jx_filter','全部')==='json'){\\n            _0x3b89ab = _0x3b89ab.filter(it=>(/©$/.test(it))&&typeof(json.codes[_0x4c0427['nWfVR'](it, '')['replace'](/http.*\\\\/\\\\//g, '')])==='string');\\n        }\\n        if(getVar('dp.searchJx','')){\\n            _0x3b89ab = _0x3b89ab.filter(it=>(json.codes[_0x4c0427['nWfVR'](it, '')]+'').includes(getVar('dp.searchJx'))||it.includes(getVar('dp.searchJx','')));\\n        }\\n        d.push({\\n            title:\\\"解析数:\\\"+_0x4c0427.color(_0x3b89ab.length,'#ff7000'),\\n            col_type:\\\"scroll_button\\\",\\n            url:$('#noLoading#').lazyRule(()=>{\\n                clearVar('dp.searchJx');\\n                refreshPage(true);\\n                return 'toast://已重置'\\n            })\\n        });\\n        // 下面是解析列表排列\\n        // for (var _0xe2c3d8 = 0x0; _0x4c0427['FrGOH'](_0xe2c3d8, _0x2ecbe5); _0xe2c3d8++) {\\n        for (let _0xe2c3d8 in _0x3b89ab) {\\n            var _0x33788c = _0x3b89ab[_0xe2c3d8];\\n            var _0x37871e = _0x4c0427['nWfVR'](_0x33788c, '')['replace'](/http.*\\\\/\\\\//g, '');\\n            if (/移动/ ['test'](_0x49da96)) {\\n                if (_0x4c0427['oCCSj']('uKLxF', 'uKLxF')) {\\n                    d['push']({\\n                        'title': _0x4c0427['HZhlc'](_0x4c0427['XXyQr'] + _0xe2c3d8, _0x49da96) ? _0x4c0427['nWfVR'](_0x4c0427['cgIeA'](_0x4c0427['UtfWf'], _0x4c0427['QOvJV']), _0x37871e) : _0x4c0427['cgIeA'](_0x4c0427['ABEwB'], _0x37871e),\\n                        'url': bjItem['ydParse'](_0x49da96, _0xe2c3d8),\\n                        'col_type': 'text_2'\\n                    });\\n                } else {\\n                    var _0x2bc618 = _0x3b89ab[_0xe2c3d8];\\n                    var _0x5cf417 = _0x4c0427['UVWoF'](_0x2bc618, '')['replace'](/http.*\\\\/\\\\//g, '');\\n                    if (/移动/ ['test'](_0x49da96)) {\\n                        d['push']({\\n                            'title': _0x4c0427['kzWDK'](_0x4c0427['XXyQr'], _0xe2c3d8) == _0x49da96 ? _0x4c0427['gtUnj'](_0x4c0427['gtUnj'](_0x4c0427['UtfWf'], _0x4c0427['QOvJV']), _0x5cf417) : _0x4c0427['ABEwB'] + _0x5cf417,\\n                            'url': bjItem['ydParse'](_0x49da96, _0xe2c3d8),\\n                            'col_type': _0x4c0427['ozzWG']\\n                        });\\n                    } else {\\n                        var _0x119365 = [_0x2bc618, _0x4c0427['gtUnj'](_0xe2c3d8, '||')]['join']('||');\\n                        d['push']({\\n                            'title': _0x4c0427['nWfVR'](_0x4c0427['ABEwB'], _0x5cf417),\\n                            'col_type': _0x4c0427['ozzWG'],\\n                            'url': bjItem['xlSelect'](_0x119365, _0x2ecbe5['toString']())\\n                        });\\n                    }\\n                }\\n            } else {\\n                var _0xb70192 = [_0x33788c, _0xe2c3d8 + '||']['join']('||');\\n                // 迪迪影院||0||  名称||索引 的数组\\n                // ABEwB 是绿色 _0x37871e 是标题名称  xdrFv是字符串连接函数\\n                // let flag = '‘‘Ⓤ’’';\\n                let flag = _0x4c0427.color('Ⓤ','#0051ff');\\n                if(typeof(json.codes[_0x37871e])==='function'){\\n                    // flag = '““Ⓙ””';\\n                    flag = _0x4c0427.color('Ⓙ','#ff7000');\\n                }else if(typeof(json.codes[_0x37871e])==='undefined'){\\n                    flag = '';\\n                }\\n                // let cls = '<span style=\\\"color:#298A08\\\">';\\n                // let title = _0x4c0427['xdrFv'](_0x4c0427['ABEwB'], flag+_0x37871e);\\n                // let title = flag+cls+_0x37871e;\\n                let title = flag+_0x4c0427.color(_0x37871e,'#298A08');\\n                d['push']({\\n                    'title': title,\\n                    // 'title': _0x37871e,\\n                    'col_type': _0x4c0427['ozzWG'],\\n                    'url': bjItem['xlSelect'](_0xb70192, _0x2ecbe5['toString']())\\n                });\\n            }\\n        }\\n        _0x4c0427['ywjux'](clearVar, _0x4c0427['rgDIp']);\\n    },\\n    'lqFile': function() {\\n        var _0x541d76 = {\\n            'aWiRs': function(_0x48d77b, _0x19161f, _0x21cb85) {\\n                return _0x48d77b(_0x19161f, _0x21cb85);\\n            },\\n            'wSfnz': function(_0x4850ea) {\\n                return _0x4850ea();\\n            },\\n            'qRQdA': 'jdRoute',\\n            'WQiqk': 'var xdRoute=\\\"\\\";',\\n            'psGdt': function(_0x170780, _0x3b512a) {\\n                return _0x170780 == _0x3b512a;\\n            },\\n            'imxri': 'true',\\n            'nSkjx': function(_0x95bf38, _0x313f25) {\\n                return _0x95bf38 !== _0x313f25;\\n            },\\n            'iVNeM': 'eeLJm',\\n            'IwMTl': '0|1|5|9|11|3|6|7|10|4|2|8',\\n            'xfdHk': '拉取主插件和网页脚本',\\n            'rGLuA': '主插件存放路径: /cache/Parse_Dn.js\\\\x0a网页脚本存放路径: /cache/Parse_Dn.html',\\n            'zQSLE': 'text_center_1',\\n            'hviDl': function(_0x26db62, _0x312f1c) {\\n                return _0x26db62(_0x312f1c);\\n            },\\n            'ZxUgt': '操作指引',\\n            'sWFoc': function(_0x2a044b, _0x149a3f) {\\n                return _0x2a044b + _0x149a3f;\\n            },\\n            'OEhat': '拉取代码',\\n            'ZvtSu': '编辑解析',\\n            'gXKMb': 'toast://请先拉取列表',\\n            'WCODC': function(_0x4ad3d5, _0x31fa1e) {\\n                return _0x4ad3d5 < _0x31fa1e;\\n            },\\n            'rAkAh': 'text_3',\\n            'yWaOI': '恢复插件路径为默认',\\n            'yjyjK': '当前设置为: ',\\n            'tHXeE': '拉取解析列表或者解析代码',\\n            'GMUYu': '存放路径: /rules/DuanNian/MyParse.json',\\n            'mpZBZ': 'line_blank',\\n            'xvqgF': '输入有效插件地址',\\n            'heuKx': 'putVar(\\\"pluginLink\\\",input)',\\n            'Iifia': '‘‘’’<strong><big>登录提示',\\n            'PFRHA': '使用相关功能需登录视界论坛账号\\\\n如有问题前往论坛了解详情',\\n            'ULwkT': 'https://haikuoshijie.cn/user/signin'\\n        };\\n        if (_0x541d76['psGdt'](_0x541d76['wSfnz'](bbsYZ), _0x541d76['imxri'])) {\\n            if (_0x541d76['nSkjx'](_0x541d76['iVNeM'], _0x541d76['iVNeM'])) {\\n                _0x541d76['aWiRs'](putVar, 'bbsYZ', _0x541d76['wSfnz'](isLogin)||function (){return true});\\n                _0x541d76['aWiRs'](putVar, _0x541d76['qRQdA'], _0x541d76['WQiqk']);\\n            } else {\\n                var _0x4d25ff = _0x541d76['IwMTl']['split']('|'),\\n                    _0x4a97c9 = 0x0;\\n                while (!![]) {\\n                    switch (_0x4d25ff[_0x4a97c9++]) {\\n                        case '0':\\n                            d['push']({\\n                                'title': _0x541d76['xfdHk'],\\n                                'url': bjItem['pullScript'](_mySet['cjcache'], _mySet['x5cache']),\\n                                'desc': _0x541d76['rGLuA'],\\n                                'col_type': _0x541d76['zQSLE']\\n                            });\\n                            continue;\\n                        case '1':\\n                            _0x541d76['hviDl'](eval, _0x541d76['hviDl'](getVar, _0x541d76['qRQdA']));\\n                            continue;\\n                        case '2':\\n                            d['push']({\\n                                'col_type': 'line_blank'\\n                            });\\n                            continue;\\n                        case '3':\\n                            var _0x2ab399 = 'hiker://empty#noHistory#@rule=js:this.d=[];$.require(\\\"hiker://page/jxItem?rule=MyFieldᴰⁿ\\\").jxList();setResult(d);';\\n                            continue;\\n                        case '4':\\n                            d['push']({\\n                                'title': _0x541d76['ZxUgt'],\\n                                'url': typeof czGuide == 'function' ? czGuide() : '',\\n                                'col_type': _0x541d76['zQSLE']\\n                            });\\n                            continue;\\n                        case '5':\\n                            xdRoute = _0x541d76['sWFoc'](xdRoute, _mySet['parseRoute']);\\n                            continue;\\n                        case '6':\\n                            var _0x3a9afe = [{\\n                                'title': '拉取列表',\\n                                'url': bjItem['pullCode']('列表')\\n                            }, {\\n                                'title': _0x541d76['OEhat'],\\n                                'url': bjItem['pullCode']('代码')\\n                            }, {\\n                                'title': _0x541d76['ZvtSu'],\\n                                'url': _0x541d76['hviDl'](fileExist, _0x541d76['hviDl'](getVar, 'parseRoute')) == !![] ? _0x2ab399 : _0x541d76['gXKMb']\\n                            }];\\n                            continue;\\n                        case '7':\\n                            for (var _0x1a2cdb = 0x0; _0x541d76['WCODC'](_0x1a2cdb, _0x3a9afe['length']); _0x1a2cdb++) {\\n                                d['push']({\\n                                    'title': _0x3a9afe[_0x1a2cdb]['title'],\\n                                    'url': _0x3a9afe[_0x1a2cdb]['url'],\\n                                    'col_type': _0x541d76['rAkAh']\\n                                });\\n                            }\\n                            continue;\\n                        case '8':\\n                            d['push']({\\n                                'title': _0x541d76['yWaOI'],\\n                                'url': bjItem['hfPlugin'](_mySet['parseRoute']),\\n                                'desc': _0x541d76['sWFoc'](_0x541d76['yjyjK'] + mySet['cj'], '\\\\n存放路径: /rules/DuanNian/MyParse.json'),\\n                                'col_type': _0x541d76['zQSLE']\\n                            });\\n                            continue;\\n                        case '9':\\n                            d['push']({\\n                                'title': _0x541d76['tHXeE'],\\n                                'url': 'toast://请在下方选项操作',\\n                                'desc': _0x541d76['GMUYu'],\\n                                'col_type': _0x541d76['zQSLE']\\n                            });\\n                            continue;\\n                        case '10':\\n                            d['push']({\\n                                'col_type': _0x541d76['mpZBZ']\\n                            });\\n                            continue;\\n                        case '11':\\n                            d['push']({\\n                                'desc': _0x541d76['xvqgF'],\\n                                'col_type': 'input',\\n                                'extra': {\\n                                    'titleVisible': ![],\\n                                    'defaultValue': _0x541d76['hviDl'](getVar, 'pluginLink'),\\n                                    'onChange': _0x541d76['heuKx']\\n                                }\\n                            });\\n                            continue;\\n                    }\\n                    break;\\n                }\\n            }\\n        } else {\\n            d['push']({\\n                'title': _0x541d76['Iifia'],\\n                'desc': _0x541d76['PFRHA'],\\n                'url': _0x541d76['ULwkT'],\\n                'col_type': _0x541d76['zQSLE']\\n            });\\n        }\\n    }\\n};\\n$.exports = jxItem;\"},{\"col_type\":\"movie_3\",\"name\":\"解析Url编辑\",\"path\":\"EditUrl\",\"rule\":\"js:\\nsetPageTitle(\\\"插件接口设置\\\");\\nlet d = [];\\nlet parseUrlText = request(\\\"hiker://files/jiexi/jiexi.txt\\\");\\nlet parseUrlArray = parseUrlText.split(/\\\\n/);\\nlet selected = getItem(\\\"selected\\\", \\\"\\\");\\nlet classTab = [\\n    [\\\"选择\\\", \\\"0\\\"],\\n    [\\\"修改\\\", \\\"1\\\"],\\n    [\\\"删除\\\", \\\"2\\\"]\\n];\\nlet classA = getVar(\\\"class\\\", \\\"0\\\");\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"class\\\");\\n}));\\nd.push({\\n    title: \\\"添加新的解析\\\",\\n    url: $(\\\"\\\",\\\"解析名&&解析URL\\\").input(() => {\\n        let parseUrlText = request(\\\"hiker://files/jiexi/jiexi.txt\\\");\\n        let parseUrlArray = parseUrlText.split(/\\\\n/);\\n        if(input.split(\\\"&&\\\").length!==2){\\n            return \\\"toast://格式不正确\\\";\\n        }\\n        parseUrlArray.push(input);\\n        parseUrlText = parseUrlArray.join(\\\"\\\\n\\\");\\n        writeFile(\\\"hiker://files/jiexi/jiexi.txt\\\", parseUrlText);\\n        \\n        refreshPage(false);\\n        return \\\"toast://修改成功\\\";\\n    }),\\n    col_type: \\\"scroll_button\\\"\\n});\\nfor (let item of classTab) {\\n    d.push({\\n        title: item[1] === classA ? \\\"““\\\" + item[0] + \\\"””\\\" : item[0],\\n        url: $(\\\"#noLoading#\\\").lazyRule((key) => {\\n            putVar(\\\"class\\\", key);\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, item[1]),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n}\\nlet func;\\nswitch (classA) {\\n    case \\\"0\\\":\\n        func = function(url, title) {\\n            return $(url + \\\"#noLoading#\\\").lazyRule((title) => {\\n                log(\\\"\\\\n更改接口> \\\" + input);\\n                setItem(\\\"selected\\\", input);\\n                setItem(\\\"selected0\\\", title + \\\"&&\\\" + input);\\n                refreshPage(false);\\n                return \\\"toast://修改成功\\\";\\n            }, title);\\n        };\\n        break;\\n    case \\\"1\\\":\\n        func = function(url, title, index) {\\n            return $(url, \\\"请输入「\\\" + title + \\\"」的新接口\\\").input((title, index) => {\\n                let parseUrlText = request(\\\"hiker://files/jiexi/jiexi.txt\\\");\\n                let parseUrlArray = parseUrlText.split(/\\\\n/);\\n                let selected1 = parseUrlArray[index];\\n                parseUrlArray[index] = title + \\\"&&\\\" + input;\\n                parseUrlText = parseUrlArray.join(\\\"\\\\n\\\");\\n                writeFile(\\\"hiker://files/jiexi/jiexi.txt\\\", parseUrlText);\\n                if (selected1 == getItem(\\\"selected0\\\")) {\\n                    setItem(\\\"selected\\\", input);\\n                    setItem(\\\"selected0\\\", title + \\\"&&\\\" + input);\\n                }\\n                refreshPage(false);\\n                return \\\"toast://修改成功\\\";\\n            }, title, index);\\n        };\\n        break;\\n    case \\\"2\\\":\\n        func = function(url, title, index) {\\n            return $(\\\"确认删除「\\\" + title + \\\"」？\\\").confirm((title, index) => {\\n                let parseUrlText = request(\\\"hiker://files/jiexi/jiexi.txt\\\");\\n                let parseUrlArray = parseUrlText.split(/\\\\n/);\\n                let selected1 = parseUrlArray[index];\\n                parseUrlArray.splice(index, 1);\\n                parseUrlText = parseUrlArray.join(\\\"\\\\n\\\");\\n                writeFile(\\\"hiker://files/jiexi/jiexi.txt\\\", parseUrlText);\\n                if (selected1 == getItem(\\\"selected0\\\")) {\\n                    if (parseUrlArray[0]) {\\n                        setItem(\\\"selected\\\", parseUrlArray[0].split(\\\"&&\\\")[1] || \\\"\\\");\\n                        setItem(\\\"selected0\\\", parseUrlArray[0]);\\n                    } else {\\n                        setItem(\\\"selected\\\", \\\"\\\");\\n                        setItem(\\\"selected0\\\", \\\"\\\");\\n                    }\\n                }\\n                refreshPage(false);\\n                return \\\"toast://修改成功\\\";\\n            }, title, index);\\n        };\\n        break;\\n\\n}\\nfor (let i in parseUrlArray) {\\n    let item = parseUrlArray[i].split(\\\"&&\\\");\\n    d.push({\\n        title: selected == item[1] ? \\\"‘‘\\\" + item[0] + \\\"’’\\\" : item[0],\\n        url: func(item[1], item[0], i),\\n        col_type: \\\"text_3\\\"\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"主题管理\",\"path\":\"theme\",\"rule\":\"js:\\n    function themeInit(){\\n        const {color,small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n        let d = [];\\n        let options = ['选择','修改','删除','导出'];\\n\\n        for(var i in options){\\n            let option = options[i];\\n            let flag = getVar('theme.dn_option','新增')===option?'👉':'';\\n            d.push({\\n                title:flag+option,\\n                col_type:'scroll_button',\\n                url:$(option).lazyRule(()=>{\\n                    putVar('theme.dn_option', input);\\n                    refreshPage(true);\\n                    return 'toast://已设置操作类型为:'+input;\\n                }),\\n            });\\n        }\\n\\n        let themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\n        let myThemes = {};\\n        let themes = {};\\n        try {\\n            myThemes = JSON.parse(fetch(themeRoute));\\n            themes = myThemes.themes[myThemes.now_theme];\\n        }catch (e) {}\\n\\n\\n        d.push({\\n            title:'导入',\\n            col_type:'scroll_button',\\n            url:$('','请输入导入口令').input((myThemes,themeRoute)=>{\\n                if(/^断插主题@.*?@http/.test(input)){\\n                    let name = input.split('@')[1];\\n                    let url = input.split('@')[2];\\n                    return $('确定要导入断插主题-'+name+' 吗?').confirm((name,url,myThemes,themeRoute)=>{\\n                        let content = parsePaste(url);\\n                        let hasTheme = myThemes.themes.filter(it=>it.name===name);\\n                        if(hasTheme&&hasTheme.length>0){\\n                            let id = null;\\n                            for(let j in myThemes.themes){\\n                                if(myThemes.themes[j].name === name){\\n                                    id = j;\\n                                    break;\\n                                }\\n                            }\\n                            if(!id){\\n                                return 'toast://索引错误无法覆盖导入:\\\\n'+id\\n                            }\\n                            // log('覆盖导入主题id:'+id);\\n                            myThemes.themes[id] = Object.assign(JSON.parse(base64Decode(content)),{'name':name});\\n                        }else{\\n                            myThemes.themes.push(Object.assign(JSON.parse(base64Decode(content)),{'name':name}));\\n                        }\\n                        // log(myThemes);\\n                        writeFile(themeRoute,JSON.stringify(myThemes));\\n                        refreshPage(true);\\n                        return 'toast://已成功导入主题:\\\\n'+name\\n                    },name,url,myThemes,themeRoute);\\n                }else{\\n                    return 'toast://无法识别的导入口令:\\\\n'+input;\\n                }\\n            },myThemes,themeRoute),\\n        });\\n        d.push({\\n            title:'新增',\\n            col_type:'scroll_button',\\n            url:$().rule((myThemes,themeRoute)=>{\\n                let d=[];\\n                addListener('onClose', $.toString(()=>{\\n                    refreshPage(true);\\n                }));\\n                d.push({\\n                    title: '主题名称',\\n                    desc: \\\"断插-蓝莓主题\\\",\\n                    extra: {\\n                        onChange: \\\"putVar('theme.new_add_name',input)\\\",\\n                        titleVisible: true,\\n                        defaultValue: getVar('theme.new_add_name', '')\\n                    },\\n                    url:$.toString(() => {\\n                        let new_add_name = getVar('theme.new_add_name', '');\\n                        return 'toast://你输入的是:'+new_add_name;\\n                    }),\\n                    col_type: \\\"input\\\"\\n                });\\n                d.push({\\n                    desc: \\\"代码\\\",\\n                    col_type: 'input',\\n                    extra: {\\n                        titleVisible: false,\\n                        defaultValue: getVar('theme.new_add_code', ''),\\n                        type: \\\"textarea\\\",\\n                        height:-1,\\n                        onChange: 'putVar(\\\"theme.new_add_code\\\",input)'\\n                    }\\n                });\\n                d.push({\\n                    title:'保存',\\n                    col_type:'text_center_1',\\n                    url:$().lazyRule((myThemes,themeRoute)=>{\\n                        let code = getVar('theme.new_add_code', '');\\n                        let name = getVar('theme.new_add_name', '');\\n                        if(!name){\\n                            return 'toast://你还没填写主题名称呢'\\n                        }\\n                        let newTheme = {};\\n                        try {\\n                            newTheme = JSON.parse(code);\\n                        }catch (e) {\\n                            return 'toast://错误的主题json格式:\\\\n'+e.message;\\n                        }\\n                        Object.assign(newTheme,{'name':name});\\n                        myThemes.themes.push(newTheme);\\n                        writeFile(themeRoute,JSON.stringify(myThemes));\\n                        refreshPage(true);\\n                        return 'toast://已新增断插主题:'+name\\n                    },myThemes,themeRoute)\\n                });\\n                setResult(d);\\n            },myThemes,themeRoute),\\n        });\\n        d.push({\\n            title:myThemes.themes?'主题列表:共计:'+color(myThemes.themes.length,'#ff7000')+'个主题':\\\"第一次加载，点此进去初始化主题列表\\\",\\n            col_type:'text_1',\\n            url:'hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory#'\\n        });\\n        d.push({\\n            title:\\\"恢复出厂设置\\\",\\n            col_type:'text_center_1',\\n            url:$(\\\"如果你的主题没法正常用了，此方法可以救砖，确认恢复?\\\").confirm(()=>{\\n                let themes = {name:'默认主题',closeBtn:{color:'#f6f6f6',background:'#aa96da'},saveBtn:{color:'#F9F0DA',background:'#068006'},saveCloseBtn:{color:'#F9F0DA',background:'#05BFC5'},tipsBtn:{color:'#F9F0DA',background:'#05BFC5'},barlabel:{color:'#F9F0DA',background:'#aa96da'},barInput:{color:'#aa96da',background:'#ffffd2'},select:{color:'#F9F0DA',background:'#aa96da'},};\\n                let themeDef = {\\\"name\\\":\\\"断念原皮\\\",\\\"closeBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#c5464a\\\"},\\\"saveBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#068006\\\"},\\\"saveCloseBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"tipsBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"barlabel\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"},\\\"barInput\\\":{\\\"color\\\":\\\"#D06B6C\\\",\\\"background\\\":\\\"#F9F0DA\\\"},\\\"select\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"}};\\n                let themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\n                writeFile(themeRoute,JSON.stringify({now_theme:'默认主题',themes:[themes,themeDef]}));\\n                refreshPage(true);\\n                return 'toast://断插主题已重置为出厂设置'\\n            })\\n        });\\n        for(var i in myThemes.themes){\\n            let nowThem = myThemes.themes[i];\\n            d.push({\\n                title:myThemes.now_theme===nowThem.name?'👉'+nowThem.name:nowThem.name,\\n                col_type:'flex_button',\\n                url:$().lazyRule((mytheme,myThemes,i,themeRoute)=>{\\n                    let option = getVar('theme.dn_option','新增');\\n                    switch (option){\\n                        case '导出':\\n                            let mythemeCode = base64Encode(JSON.stringify(mytheme));\\n                            let url = sharePaste(mythemeCode);\\n                            let code = '断插主题@'+mytheme.name+'@'+url;\\n                            copy(code);\\n                            return 'toast://已导出为云口令并复制到剪切板'\\n                        case '修改':\\n                            return $(JSON.stringify(mytheme)).input((mytheme,myThemes,i,themeRoute)=>{\\n                                if(mytheme.name===myThemes.now_theme){\\n                                    return 'toast://此主题当前正在使用中，不允许修改!'\\n                                }\\n                                myThemes.themes[i]=JSON.parse(input);\\n                                writeFile(themeRoute,JSON.stringify(myThemes));\\n                                refreshPage(true);\\n                                return 'toast://已修改'\\n                            },mytheme,myThemes,i,themeRoute)\\n                        case '删除':\\n                            return $('确认删除主题:'+mytheme.name+'?').confirm((mytheme,myThemes,i,themeRoute)=>{\\n                                if(mytheme.name===myThemes.now_theme){\\n                                    return 'toast://此主题当前正在使用中，不允许删除!'\\n                                }\\n                                myThemes.themes.splice(i,1);\\n                                writeFile(themeRoute,JSON.stringify(myThemes));\\n                                refreshPage(true);\\n                                return 'toast://已删除'\\n                            },mytheme,myThemes,i,themeRoute)\\n                        default:\\n                            myThemes.now_theme=mytheme.name;\\n                            writeFile(themeRoute,JSON.stringify(myThemes));\\n                            refreshPage(true);\\n                            return 'toast://你选择了'+mytheme.name+'作为默认主题';\\n                    }\\n                },nowThem,myThemes,i,themeRoute),\\n            });\\n        }\\n        setResult(d);\\n    }\\n$.exports.themeInit=themeInit;\"},{\"name\":\"操作指引\",\"path\":\"Guide\",\"rule\":\"<html>\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n</head>\\n<body>\\n<strong> <big>拉取篇</big> </strong>\\n<br /> 操作顺序：\\n<br /> 1.更新道长仓库Pro到76版本\\n<br /> 2.拉取主插件和网页脚本\\n<br /> 3.推荐直接拉取代码<s>拉取列表→拉取代码</s>\\n<br />\\n<br />\\n<strong><big>口令篇</big></strong>\\n<br />首页输入框支持：\\n<br />1.分享出来的同系列插件云剪贴板口令\\n<br />2.未加密的同系列插件地址,支持本地文件如以下格式开头的:file://,hiker://,/storage\\n<br />3.Q神\\n<br />4.断插\\n<br />5.#道长精选\\n<br />6.#b站\\n<br />7.#倍陆\\n<br />\\n<br />\\n<strong><big>编辑篇</big></strong>\\n<br />隐藏功能需知：\\n<br />隐藏功能是从列表上删除标题，故无复现功能\\n<br />看准了，不用的才点隐藏\\n<br />要复现的话去修改新的MyParse.json，在title的数组那按格式添加标题\\n<br />\\n<br />\\n<strong><big>完结</big><br /></strong>\\n<p>v3.49,小白最后的倔强,小白关怀模式</p>\\n<p>一键实现配置完毕即可通过支持魔断的小程序看视频，回归白嫖视频这个需求本身</p>\\n<p>推荐使用青豆,app影视.dp</p>\\n<p>魔断(断插道长魔改版)已弃坑跑路，感谢原作者断念的插件解析及本小程序核心代码</p>\\n</body>\\n</html>\"},{\"name\":\"测试数据\",\"path\":\"demoData\",\"rule\":\"js:\\n    let demoData = {\\n        爱奇艺:['https://www.iqiyi.com/v_1zp7qgh23kg.html','https://www.iqiyi.com/v_2bc8tk8r6ug.html'],\\n        优酷:['https://v.youku.com/v_show/id_XNTE4NTgxMTY2MA==.html','https://v.youku.com/v_show/id_XNTE5ODYxMjAzNg==.html'],\\n        腾讯:['https://v.qq.com/x/cover/m441e3rjq9kwpsc/p0040gim4fz.html','https://v.qq.com/x/cover/mzc00200xh9313v/z0039tbho7q.html'],\\n        芒果:['https://www.mgtv.com/b/372061/12193558.html','https://www.mgtv.com/b/363286/14295823.html'],\\n        哔哩哔哩:['https://www.bilibili.com/bangumi/play/ep381217','https://www.bilibili.com/bangumi/play/ep408123','https://www.bilibili.com/bangumi/play/ss33434','https://www.bilibili.com/video/av336348663'],\\n        搜狐:['https://film.sohu.com/album/9457584.html','https://film.sohu.com/album/9182646.html'],\\n        西瓜:['https://www.ixigua.com/6551332125654647310','https://www.ixigua.com/6699356792905794055'],\\n        阿里:[''],\\n        PPTV:['http://v.pptv.com/show/TIndWsIomNY5tx8.html','http://v.pptv.com/show/SCQ5th6E9DKVE3s.html'],\\n        咪咕:['https://www.miguvideo.com/mgs/website/prd/detail.html?cid=633511743','https://www.miguvideo.com/mgs/website/prd/detail.html?cid=716270319'],\\n        乐视:['http://www.le.com/ptv/vplay/75843059.html','http://www.le.com/ptv/vplay/24220901.html#vid=24220901'],\\n        1905:['https://vip.1905.com/play/875740.shtml','https://www.1905.com/vod/play/880641.shtml'],\\n        风行:['http://www.fun.tv/vplay/g-304143','http://www.fun.tv/vplay/g-1008963/'],\\n    }\\n\\nlet defaultSets =  {\\n    qy: '你爹科技',\\n    yk: '领酷',\\n    tx: '荣耀',\\n    mg: '蚂蚁兄弟',\\n    bl: 'OK解析',\\n    sh: '江湖D',\\n    xg: '江湖D',\\n    al: '江湖D',\\n    pp: '人人迷',\\n    mi: '1080',\\n    le: '迪奥嗅探',\\n    oth: '道长仓库通免',\\n    fun: '融兴',\\n    one:'1080',\\n    qju: '默认',\\n    cj: 'hiker://files/cache/Parse_Dn.js'\\n};\\n\\nlet floors = '①②③④⑤⑥⑦⑧⑨⑩１２３４５６７８９０⒈⒉⒊⒋⒌⒍⒎⒏⒐'.split('');\\nlet emojis = '#️⃣|*️⃣|0️⃣|1️⃣|2️⃣|3️⃣|4️⃣|5️⃣|6️⃣|7️⃣|8️⃣|9️⃣|🅰️|🅱️|🍇|🍈|🍉|🍊|🍋|🍌|🍍|🍎|🍏|🍐|🍑|🍒|🍓|🍅|🍆|🌽|🍄|🌰|🍞|🍖|🍗|🍔|🍟|🍕|🍳|🍲|🍱|🍘|🍙|🍚|🍛|🍜|🍝|🍠|🍢|🍣|🍤|🍥|🍡|🍦|🍧|🍨|🍩|🍪|🎂|🍰|🍫|🍬|🍭|🍮|🍯|🍼|☕|🍵|🍶|🍷|🍸|🍹|🍺|🍻|🍴'.split('|');\\nfloors = floors.concat(emojis);\\n$.exports.demoData = demoData;\\n$.exports.defaultSets = defaultSets;\\n$.exports.floors = floors;\"},{\"name\":\"工具类\",\"path\":\"utils\",\"rule\":\"js:\\n//随机从列表抽取一个元素\\nfunction getOne(its) {return  its[Math.floor(Math.random()*its.length)];}\\n//去重（ES6 Set）\\nfunction unique2(array){\\n    return Array.from(new Set(array));\\n}\\n//获取列表中重复都值\\nfunction duplicates(arr) {\\n    let res=arr.filter((x,k)=>{\\n        let a=k*1+1;\\n        let index=arr.indexOf(x,a);\\n        if(index>-1){\\n            return x;\\n        }\\n    })\\n    let re=new Set(res);\\n    return Array.from(re);\\n}\\n$.exports.getOne = getOne;\\n$.exports.unique2 = unique2;\\n$.exports.duplicates = duplicates;\"},{\"name\":\"解析管理\",\"path\":\"jxManage\",\"rule\":\"js:\\n    function jxManage(){\\n        const {color,small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n        let d = [];\\n        let options = ['选择','修改','删除','导出'];\\n\\n        for(let i in options){\\n            let option = options[i];\\n            let flag = getVar('dn.jxm_option','选择')===option?'👉':'';\\n            d.push({\\n                title:flag+option,\\n                col_type:'scroll_button',\\n                url:$('#noLoading#').lazyRule((option)=>{\\n                    putVar('dn.jxm_option', option);\\n                    refreshPage(true);\\n                    return 'hiker://empty';\\n                },option),\\n            });\\n        }\\n        let jxsRoute = \\\"hiker://files/cache/MyJiexi.json\\\";\\n        let MyJiexi = {jiexis:[]};\\n        let jiexis = {};\\n        try {\\n            MyJiexi = JSON.parse(fetch(jxsRoute));\\n            jiexis = MyJiexi.jiexis.filter(it=>it.name===MyJiexi.now)[0];\\n        }catch (e) {}\\n\\n        d.push({\\n            title:'导入',\\n            col_type:'scroll_button',\\n            url:$('','请输入导入口令').input((MyJiexi,jxsRoute)=>{\\n                if(/^魔断解析配置@.*?@http/.test(input)){\\n                    let name = input.split('@')[1];\\n                    let url = input.split('@')[2];\\n                    return $('确定要导入断插解析配置-'+name+' 吗?').confirm((name,url,MyJiexi,jxsRoute)=>{\\n                        let content = parsePaste(url);\\n                        let hasIt = MyJiexi.jiexis.filter(it=>it.name===name);\\n                        if(hasIt&&hasIt.length>0){\\n                            let id = null;\\n                            for(let j in MyJiexi.jiexis){\\n                                if(MyJiexi.jiexis[j].name === name){\\n                                    id = j;\\n                                    break;\\n                                }\\n                            }\\n                            if(!id){\\n                                return 'toast://索引错误无法覆盖导入:\\\\n'+id\\n                            }\\n                            // log('覆盖导入主题id:'+id);\\n                            MyJiexi.jiexis[id] = Object.assign(JSON.parse(base64Decode(content)),{'name':name});\\n                        }else{\\n                            MyJiexi.jiexis.push(Object.assign(JSON.parse(base64Decode(content)),{'name':name}));\\n                        }\\n                        writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                        refreshPage(true);\\n                        return 'toast://已成功导入解析配置:\\\\n'+name\\n                    },name,url,MyJiexi,jxsRoute);\\n                }else{\\n                    return 'toast://无法识别的导入口令:\\\\n'+input;\\n                }\\n            },MyJiexi,jxsRoute),\\n        });\\n\\n        let isAuto = MyJiexi.isAuto;\\n        let autoMode = MyJiexi.autoMode;\\n        let tips = '解析配置列表:共计:'+color(MyJiexi.jiexis.length,'#ff7000')+'个配置,自动档开关:'+color(isAuto?'开':'关','#ff7000');\\n        d.push({\\n            title:MyJiexi.jiexis&&MyJiexi.jiexis.length>0?tips:\\\"第一次加载，点此进去初始化解析列表\\\",\\n            col_type:'text_1',\\n            url:$('#noLoading#').lazyRule((MyJiexi,jxsRoute)=>{\\n                if(MyJiexi.jiexis&&MyJiexi.jiexis.length>0){\\n                    MyJiexi.isAuto = !MyJiexi.isAuto;\\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                    refreshPage(true);\\n                    let tips = MyJiexi.isAuto?'开':'关';\\n                    return 'toast://已设置自动档模式为:'+tips\\n                }else{\\n                    let initSet = {'now':\\\"道长推荐\\\",'jiexis':[{name:'道长推荐',qy:['你爹科技'],yk:['领酷'],tx:['荣耀'],mg:['蚂蚁兄弟'],bl:['OK解析'],sh:['江湖D'],xg:['江湖D'],al:['江湖D'],pp:['人人迷'],mi:['1080'],le:['迪奥嗅探'],fun:['融兴'],one:['1080']}]};\\n                    writeFile(jxsRoute,JSON.stringify(initSet));\\n                    refreshPage(true);\\n                    return 'toast://断插解析配置已初始化'\\n                }\\n            },MyJiexi,jxsRoute)\\n        });\\n        let autoModeTips = autoMode==='速度优先'?'速度优先':'顺序优先';\\n        d.push({\\n            title:small(\\\"备胎宠幸方案:\\\")+color(autoModeTips,'#ff7000'),\\n            col_type:'text_2',\\n            url:$('#noLoading#').lazyRule((MyJiexi,jxsRoute)=>{\\n                MyJiexi.autoMode = MyJiexi.autoMode==='速度优先'?'顺序优先':'速度优先';\\n                writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                refreshPage(true);\\n                return 'toast://已设置备胎宠幸方案为:'+MyJiexi.autoMode\\n            },MyJiexi,jxsRoute)\\n        });\\n\\n        d.push({\\n            title:color(\\\"恢复出厂设置\\\",'#ff7000'),\\n            col_type:'text_2',\\n            url:$(\\\"如果你的解析管理无法正常用了，此方法可以救砖，确认恢复?\\\").confirm((jxsRoute)=>{\\n                let initSet = {'now':\\\"道长推荐\\\",'jiexis':[{name:'道长推荐',qy:['你爹科技'],yk:['领酷'],tx:['荣耀'],mg:['蚂蚁兄弟'],bl:['OK解析'],sh:['江湖D'],xg:['江湖D'],al:['江湖D'],pp:['人人迷'],mi:['1080'],le:['迪奥嗅探'],fun:['融兴'],one:['1080'],}]};\\n                writeFile(jxsRoute,JSON.stringify(initSet));\\n                refreshPage(true);\\n                return 'toast://断插解析配置已重置为出厂设置'\\n            },jxsRoute)\\n        });\\n\\n        let cacheVideoSwitch = getVar('dp.cacheVideo','true')==='true'?'开':'关';\\n        let jxTimeout = getVar('dp.jxTimeout','7000');\\n        d.push({\\n            title:small('多线路缓存:')+color(cacheVideoSwitch,'#ff7000'),\\n            col_type:'text_2',\\n            url:$('#noLoading#').lazyRule((cacheVideoSwitch)=>{\\n                if(cacheVideoSwitch==='开'){\\n                    putVar('dp.cacheVideo','false');\\n                }else{\\n                    putVar('dp.cacheVideo','true');\\n                }\\n                refreshPage(true);\\n                return 'hiker://empty'\\n            },cacheVideoSwitch)\\n        });\\n        d.push({\\n            title:small('全局解析超时:')+color(jxTimeout,'#ff7000'),\\n            col_type:'text_2',\\n            url:$(jxTimeout,'请设置魔断解析超时,必须为整数').input(()=>{\\n                if(!parseInt(input)){\\n                    input = 7000;\\n                }\\n                putVar('dp.jxTimeout',input);\\n                refreshPage(true);\\n                return 'toast://已设置为:'+parseInt(input)\\n            },jxTimeout)\\n        });\\n\\n        d.push({\\n            title: '打开编辑解析文件',\\n            url: $('#noLoading#').lazyRule((jxsRoute) => {\\n                return 'editFile://'+jxsRoute;\\n            },jxsRoute),\\n            col_type: 'text_center_1'\\n        });\\n\\n        for(let i in MyJiexi.jiexis){\\n            let nowJx = MyJiexi.jiexis[i];\\n            d.push({\\n                title:MyJiexi.now===nowJx.name?'👉'+nowJx.name:nowJx.name,\\n                col_type:'flex_button',\\n                extra:{\\n                    nowJx:nowJx,\\n                    MyJiexi:MyJiexi,\\n                    jxsRoute:jxsRoute\\n                },\\n                url:$('#noLoading#').lazyRule((nowJx,MyJiexi,i,jxsRoute)=>{\\n                    let option = getVar('dn.jxm_option','选择');\\n                    switch (option){\\n                        case '导出':\\n                            let nowJxCode = base64Encode(JSON.stringify(nowJx));\\n                            let url = sharePaste(nowJxCode);\\n                            let code = '魔断解析配置@'+nowJx.name+'@'+url;\\n                            copy(code);\\n                            return 'toast://已导出为云口令并复制到剪切板'\\n                        case '修改':\\n                            // if(nowJx.name===MyJiexi.now){\\n                            //     return 'toast://此解析配置当前正在使用中，不允许修改!'\\n                            // }\\n                            // else{\\n                            //     return 'hiker://page/jxEdit?rule=MyFieldᴰⁿ'\\n                            // }\\n                            return 'hiker://page/jxEdit?rule=MyFieldᴰⁿ'\\n                        case '删除':\\n                            return $('确认删除解析配置:'+nowJx.name+'?').confirm((nowJx,MyJiexi,i,jxsRoute)=>{\\n                                if(nowJx.name===MyJiexi.now){\\n                                    return 'toast://此解析配置当前正在使用中，不允许删除!'\\n                                }\\n                                MyJiexi.jiexis.splice(i,1);\\n                                writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                                refreshPage(true);\\n                                return 'toast://已删除'\\n                            },nowJx,MyJiexi,i,jxsRoute)\\n                        default:\\n                            MyJiexi.now=nowJx.name;\\n                            writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                            refreshPage(true);\\n                            return 'toast://你选择了'+nowJx.name+'作为当前解析配置';\\n                    }\\n                },nowJx,MyJiexi,i,jxsRoute),\\n            });\\n        }\\n        setResult(d);\\n    }\\n$.exports.jxManage=jxManage;\"},{\"name\":\"解析编辑\",\"path\":\"jxEdit\",\"rule\":\"js:\\n    let {nowJx,MyJiexi,jxsRoute} = MY_PARAMS;\\nlet nowJxT = JSON.parse(getVar('dn.nowJx')||'{}');\\nnowJx = nowJxT.name?nowJxT:nowJx;\\naddListener('onClose', $.toString(()=>{\\n    clearVar(\\\"dn.jx_titles\\\");\\n    clearVar(\\\"dn.nowJx\\\");\\n    clearVar(\\\"dn.jxm_name\\\");\\n}));\\nlet id = null;\\nfor(let j in MyJiexi.jiexis){\\n    if(MyJiexi.jiexis[j].name === nowJx.name){\\n        id = j;\\n        break;\\n    }\\n}\\nlet d = [];\\nd.push({\\n    title: '配置名称',\\n    desc: \\\"解析配置名称,如道长推荐\\\",\\n    extra: {\\n        onChange: \\\"putVar('dn.jxm_name',input)\\\",\\n        titleVisible: true,\\n        defaultValue:getVar('dn.jxm_name','')||nowJx.name\\n    },\\n    col_type:'input'\\n});\\n// let options = ['选择','新增','删除','批量删除','移动'];\\nlet options = ['新增','删除','移动'];\\n\\nfor(let i in options){\\n    let option = options[i];\\n    let flag = getVar('dn.jxm_writeMode','新增')===option?'👉':'';\\n    d.push({\\n        title:flag+option,\\n        // col_type:'scroll_button',\\n        col_type:'flex_button',\\n        url:$('#noLoading#').lazyRule((option)=>{\\n            putVar('dn.jxm_writeMode', option);\\n            refreshPage(true);\\n            return 'hiker://empty';\\n        },option),\\n    });\\n}\\nd.push({\\n    col_type:'line'\\n});\\n//获取断插列表\\nif(!getVar(\\\"dn.jx_titles\\\")){\\n    let titleArr = [], urlArr = [];\\n    var json={title:[],codes:{}};\\n    let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\\n    try {\\n        eval('json='+setFile);\\n    }catch (e) {\\n        log('Json解析发生了错误:'+e.message);\\n    }\\n    titleArr = json.title;\\n    titleArr.forEach((it) => {\\n        urlArr.push(json.codes[it]);\\n    });\\n    putVar('dn.jx_titles',JSON.stringify(titleArr));\\n}\\n\\nlet titles = JSON.parse(getVar('dn.jx_titles')||'[]');\\nlet titleDic = {\\n    al:'阿里',bl:'哔哩哔哩',fun:'风行',le:'乐视',mg:'芒果',mi:'咪咕',pp:'PPTV',qy:'爱奇艺',sh:'搜狐',\\n    tx:'腾讯',xg:'西瓜',yk:'优酷',one:'1905'\\n}\\n\\nlet titleOrder = {al:8,bl:5,fun:13,le:11,mg:4,mi:10,pp:9,qy:1,sh:6,\\n    tx:3,xg:7,yk:2,one:12};\\n\\nfunction compareOd(titleOrder){\\n    return function (a, b){\\n        let x = titleOrder[a];\\n        let y = titleOrder[b];\\n        return x-y;\\n    }\\n}\\n//-----------------\\nlet jds = Object.keys(nowJx).filter(it=>it!=='name'&&it!=='oth');\\njds = jds.sort(compareOd(titleOrder));\\nfor(let j in jds){\\n    let jxs = nowJx[jds[j]]||[];\\n    let title = jds[j];\\n    d.push({\\n        title:titleDic[title]||title,\\n        col_type:'scroll_button',\\n        url:$('#noLoading#').lazyRule((titles,title,jxs,jxsRoute,MyJiexi,nowJx)=>{\\n            var json={title:[],codes:{}};\\n            let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\\n            try {\\n                eval('json='+setFile);\\n            }catch (e) {\\n                log('Json解析发生了错误:'+e.message);\\n            }\\n            if(getVar('dn.jxm_writeMode','新增')==='新增'){\\n                let sel_title = titles.filter(it=>!jxs.includes(it));\\n                sel_title = sel_title.map((it)=>{\\n                    let flag = '‘‘Ⓤ’’';\\n                    if(typeof(json.codes[it])==='function'){\\n                        flag = '““Ⓙ””';\\n                    }else if(typeof(json.codes[it])==='undefined'){\\n                        flag = '';\\n                    }\\n                    return flag+it\\n                });\\n                return $(sel_title,2).select((MyJiexi,jxs,nowJx,title,jxsRoute)=>{\\n                    input = input.replace(/‘‘Ⓤ’’|““Ⓙ””/g,'');\\n                    let id = null;\\n                    for(let j in MyJiexi.jiexis){\\n                        if(MyJiexi.jiexis[j].name === nowJx.name){\\n                            id = j;\\n                            break;\\n                        }\\n                    }\\n                    if(!id){\\n                        return 'toast://索引错误无法保存:\\\\n'+id\\n                    }\\n                    jxs.push(input);\\n                    log(jxs);\\n                    nowJx[title] = jxs;\\n                    MyJiexi.jiexis[id] = nowJx;\\n                    putVar('dn.nowJx',JSON.stringify(nowJx));\\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                    refreshPage(true);\\n                    return 'hiker://empty'\\n                },MyJiexi,jxs,nowJx,title,jxsRoute);\\n            }else {\\n                return 'hiker://empty'\\n            }\\n        },titles,title,jxs,jxsRoute,MyJiexi,nowJx)\\n    });\\n    for(let k in jxs){\\n        d.push({\\n            title:jxs[k],\\n            col_type:'scroll_button',\\n            url:$('#noLoading#').lazyRule((titles,title,jxs,jxsRoute,MyJiexi,nowJx,njx,id,k,max)=>{\\n                switch (getVar('dn.jxm_writeMode','新增')){\\n                    case '删除':\\n                        Array.prototype.remove = function(val) {\\n                            let index = this.indexOf(val);\\n                            if (index > -1) {\\n                                this.splice(index, 1);\\n                            }\\n                        };\\n                        jxs.remove(njx);\\n                        nowJx[title] = jxs;\\n                        MyJiexi.jiexis[id] = nowJx;\\n                        putVar('dn.nowJx',JSON.stringify(nowJx));\\n                        writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                        refreshPage(true);\\n                        return 'hiker://empty'\\n                    case '移动':\\n                        return $(k,'移动到索引多少?').input((k,max,jxs,nowJx,MyJiexi,id,title,jxsRoute)=>{\\n                            function Move(arr, fromIndex, toIndex) {\\n                                var element = arr[fromIndex];\\n                                arr.splice(fromIndex, 1);\\n                                arr.splice(toIndex, 0, element);\\n                            }\\n                            if(parseInt(input)===k){\\n                                return 'toast://啥也没做'\\n                            }else if(parseInt(input)>max-1||parseInt(input)<-1){\\n                                return 'toast://你最大移动范围0-'+parseInt(max-1);\\n                            }\\n                            // let newAr = jxs.splice(k, 1); // 删掉\\n                            // jxs.unshift(newAr[0]);\\n                            Move(jxs,k,parseInt(input));\\n                            nowJx[title] = jxs;\\n                            MyJiexi.jiexis[id] = nowJx;\\n                            putVar('dn.nowJx',JSON.stringify(nowJx));\\n                            writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                            refreshPage(true);\\n                            return 'hiker://empty'\\n                        },k,max,jxs,nowJx,MyJiexi,id,title,jxsRoute)\\n                    default:\\n                        return 'toast://此元素不支持进行:'+getVar('dn.jxm_writeMode','新增')\\n                }\\n            },titles,title,jxs,jxsRoute,MyJiexi,nowJx,jxs[k],id,k,jxs.length)\\n        });\\n    }\\n    d.push({\\n        col_type:'line'\\n    })\\n}\\n\\nd.push({\\n    title:'保存',\\n    col_type:'text_center_1',\\n    url:$('#noLoading#').lazyRule((MyJiexi,id,jxsRoute)=>{\\n        if(getVar('dn.jxm_name','')!==MyJiexi.jiexis[id].name){\\n            ifHas = MyJiexi.jiexis.filter(it=>it.name===getVar('dn.jxm_name','')).length>0;\\n            if(ifHas){\\n                return 'toast://待修改的名称重复,不允许保存'\\n            }else{\\n                MyJiexi.jiexis[id].name =  getVar('dn.jxm_name','');\\n                writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n            }\\n        }\\n        back(true);\\n        return 'toast://已保存'\\n    },MyJiexi,id,jxsRoute)\\n});\\nsetResult(d);\"},{\"name\":\"小白模式\",\"path\":\"smallWhite\",\"rule\":\"js:\\nsetPageTitle('道长给小白的关爱');\\nconst {color, small,api} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\nlet fileRoot = api.host+'/hikerule/zyw_data/';\\n// log(fileRoot);\\nlet d = [];\\nvar themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\nvar themeOnline = fileRoot+'11';\\nvar oldRoute = \\\"hiker://files/cache/MyParseSet.json\\\";\\nvar oldOnline = fileRoot+'12';\\nvar newRoute = \\\"hiker://files/rules/DuanNian/MyParse.json\\\";\\nvar newOnline = fileRoot+'13';\\nvar jxsRoute = \\\"hiker://files/cache/MyJiexi.json\\\";\\nvar jxOnline = fileRoot+'14';\\nvar cjcache = 'hiker://files/cache/Parse_Dn.js';\\nvar x5cache = 'hiker://files/cache/Parse_Dn.html';\\nd.push({\\n    title:small('你好,小白,即使啥也不会,也可以看明白下面的字吧?'),\\n    desc:'如果还是不会,请删以永治,告辞不谢',\\n    col_type:'text_1',\\n    url:$('#noLoading#').lazyRule(()=>{\\n        return 'toast://据说你不服气,不承认自己是小白?\\\\n点我只是为了宣泄一下你的愤怒?啥也别说了,下去搞!'\\n    })\\n});\\nd.push({\\n   title:small('单项解析选择界面主题是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长的主题配置以及网页插件和静态页面',\\n   col_type:'text_1',\\n   url:$('确认吗?如果你不是小白，总该会提前备份自己主题的吧!\\\\n'+themeRoute).confirm((cjcache,x5cache,themeRoute,themeOnline)=>{\\n       let themeCode = fetch(themeOnline);\\n       if(!/now_theme/.test(themeCode)){\\n           log(themeCode);\\n           return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n       }\\n       let cjFrom = \\\"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\\\";\\n       let x5From = \\\"hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ\\\";\\n       try {\\n           let cjFile = JSON.parse(fetch(cjFrom)).rule;\\n           let x5File = JSON.parse(fetch(x5From)).rule;\\n           writeFile(cjcache, cjFile);\\n           writeFile(x5cache, x5File);\\n           writeFile(themeRoute, themeCode);\\n           clearVar(\\\"jxOldV\\\");\\n           clearVar(\\\"jxNewV\\\");\\n           refreshPage(false);\\n           return 'toast://主题已成功应用'\\n       }\\n       catch(e){\\n           return 'toast://主题应用失败\\\\n未期望的错误:'+e.message;\\n       }\\n   },cjcache,x5cache,themeRoute,themeOnline)\\n});\\nd.push({\\n    title:small('断插解析及默认列表是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长在用的两个MyParse.json文件',\\n    col_type:'text_1',\\n    url:$('确认吗?如果你不是小白，总该会提前备份自己的配置文件吧!\\\\n'+oldRoute+'\\\\n'+newRoute).confirm((oldRoute,oldOnline,newRoute,newOnline)=>{\\n        let oldCode = fetch(oldOnline);\\n        let newCode = fetch(newOnline);\\n        if(!/Parse_Dn\\\\.js/.test(oldCode)||!/Parse_Dn\\\\.js/.test(newCode)){\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        try {\\n            writeFile(oldRoute, oldCode);\\n            writeFile(newRoute, newCode);\\n            return 'toast://断插解析配置及默认列表已经配置成功'\\n        }\\n        catch(e){\\n            return 'toast://配置应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },oldRoute,oldOnline,newRoute,newOnline)\\n});\\nd.push({\\n    title:small('断插解析自动档模式是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长在用的MyJiexi.json文件',\\n    col_type:'text_1',\\n    url:$('确认吗?如果你不是小白，总该会提前备份自己的自动档方案吧!\\\\n'+jxsRoute).confirm((jxsRoute,jxOnline)=>{\\n        let jxCode = fetch(jxOnline);\\n        if(!/jiexis/.test(jxCode)){\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        try {\\n            writeFile(jxsRoute, jxCode);\\n            return 'toast://断插解析配置及默认列表已经配置成功'\\n        }\\n        catch(e){\\n            return 'toast://自动档应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },jxsRoute,jxOnline)\\n});\\nd.push({\\n    title:small('真的啥也不会了,还懒得一个个点?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长在用的上述所有文件\\\\n一键搞完直接去支持断插的小程序看视频就行啦',\\n    col_type:'text_1',\\n    url:$('修仙法力无边','确认吗?如果你不是小白，总该会提前备份自己的上述所有文件吧!\\\\n请输入道长修仙法力无边来确认执行此操作').input((cjcache,x5cache,themeRoute,oldRoute,newRoute,jxsRoute,themeOnline,oldOnline,newOnline,jxOnline)=>{\\n        if(input!=='道长修仙法力无边'){\\n            return 'toast://本次取消执行'\\n        }\\n        let themeCode = fetch(themeOnline);\\n        if(!/now_theme/.test(themeCode)){\\n            log('themeCode:'+themeCode);\\n            return 'toast://拉主题失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        let cjFrom = \\\"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\\\";\\n        let x5From = \\\"hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ\\\";\\n        let cjFile = JSON.parse(fetch(cjFrom)).rule;\\n        let x5File = JSON.parse(fetch(x5From)).rule;\\n        let oldCode = fetch(oldOnline);\\n        let newCode = fetch(newOnline);\\n        if(!/Parse_Dn\\\\.js/.test(oldCode)||!/Parse_Dn\\\\.js/.test(newCode)){\\n            // log('oldCode:'+oldCode);\\n            // log('newCode:'+newCode);\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        let jxCode = fetch(jxOnline);\\n        if(!/jiexis/.test(jxCode)){\\n            // log('jxCode:'+jxCode);\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        try {\\n            writeFile(cjcache, cjFile); // 拉插件\\n            writeFile(x5cache, x5File); //拉网页文件\\n            writeFile(themeRoute, themeCode); //拉主题文件\\n            clearVar(\\\"jxOldV\\\");\\n            clearVar(\\\"jxNewV\\\");\\n            writeFile(oldRoute, oldCode); //拉断插默认选择界面的配置\\n            writeFile(newRoute, newCode); //拉断插内的解析\\n            writeFile(jxsRoute, jxCode); // 拉自动档文件\\n            back(true);\\n            return 'toast://断插解析配置及默认列表已经配置成功'\\n        }\\n        catch(e){\\n            return 'toast://一键模式应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },cjcache,x5cache,themeRoute,oldRoute,newRoute,jxsRoute,themeOnline,oldOnline,newOnline,jxOnline)\\n});\\nlet descInfo = '主题文件:'+themeRoute+'\\\\n主界面配置:'+oldRoute+'\\\\n嫖到的解析:'+newRoute+'\\\\n自动档解析:'+jxsRoute;\\ndescInfo+='\\\\n主插件:'+cjcache+'\\\\n主配置选择界面文件:'+x5cache;\\nd.push({\\n    title:'文件描述:\\\\n'+descInfo,\\n    col_type:'long_text',\\n    extra:{textSize: 13,lineVisible:false}\\n});\\nsetResult(d);\"}]","icon":"https://lanmeiguojiang.com/tubiao/movie/4.svg"},{"last_chapter_rule":"","title":"魔改资源采集ᥬ🌚᭄","author":"","version":11,"url":"hiker://files/rules/dzHouse/zyw/fyAll","col_type":"movie_3","class_name":"道长资源&成人资源&M广大侠&香情资源&爬虫资源","class_url":"道长资源.txt&成人资源.txt&ZYWCJ.txt&香情资源.txt&爬虫鸡资源.txt","area_name":"本地资源&云","area_url":"本地资源.txt&云资源.txt","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nputVar(\"zyw.now_file\",MY_URL.replace(getVar(\"zyw.base_dir\"),\"\"));\neval(fetch(getVar(\"zyw.js_dir\")));\ntry{\n    zywhm();\n}catch(e){\n    writeFile(getVar(\"zyw.js_dir\"),\"\");\n    let d=[];\n    d.push({\n        title:\"规则出错。刷新重试？\",\n        col_type:\"text_center_1\",\n        url:$().lazyRule(() => {\r\n            refreshPage(true);\n            return \"toast://已刷新\"\r\n        })\n    });\n    setResult(d);\n}","searchFind":"js:\neval(fetch(getVar(\"zyw.js_dir\")));\nzywsea();","search_url":"hiker://$$$?wd=**&pg=1&ac=list$$$fypage","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"js:\neval(fetch(getVar(\"zyw.js_dir\")));\nTWEJ();","sdetail_col_type":"movie_1","sdetail_find_rule":"js:\neval(fetch(getVar(\"zyw.js_dir\")));\nzywerj();","ua":"mobile","preRule":"eval(JSON.parse(fetch(\"hiker://page/beforeRule\")).rule)","pages":"[{\"col_type\":\"movie_3\",\"name\":\"预处理\",\"path\":\"beforeRule\",\"rule\":\"js:\\n//检测是否有规则与JS文件\\nconst base_path = 'hiker://files/rules/dzHouse/zyw/';\\nconst house=\\\"http://hiker.nokia.press/hikerule/rulelist.json?id=\\\";\\nconst dz_zyw=\\\"http://hiker.nokia.press/hikerule/zyw_data/\\\";\\ndz_zyw_ver=\\\"http://hiker.nokia.press/hikerule/zyw_data_ver/\\\";\\nconst js_name=\\\"zywcj.js\\\";\\nconst txt_name=\\\"ZYWCJ.txt\\\";\\nputVar(\\\"zyw.base_dir\\\",base_path);\\nputVar(\\\"zyw.dz_zyw\\\",dz_zyw);\\nputVar(\\\"zyw.dz_zyw_ver\\\",dz_zyw_ver);\\nputVar(\\\"zyw.js_dir\\\",base_path+js_name);\\nputVar(\\\"zyw.txt_dir\\\",base_path+txt_name);\\nfiles={\\n    \\\"zywcj.js\\\":house+\\\"1359\\\",\\n    \\\"道长资源.txt\\\":dz_zyw+\\\"1\\\",\\n    \\\"成人资源.txt\\\":dz_zyw+\\\"2\\\", \\\"ZYWCJ.txt\\\":\\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/zywcj/资源网采集.txt\\\",\\n\\\"香情资源.txt\\\":\\\"https://codeberg.org/lzk23559/PublicRule/raw/branch/master/ZYWCJ.txt\\\",\\n\\\"爬虫鸡资源.txt\\\":\\\"https://gitee.com/zonb/hiker/raw/master/zywcj.txt\\\",\\n\\\"云资源.txt\\\":\\\"https://wds.ecsxs.com/213162.txt\\\",\\n    \\\"parse.js\\\":\\\"https://codeberg.org/lzk23559/PublicRule/raw/branch/master/parse.js\\\"\\n};\\nputVar(\\\"zyw.files\\\",files);\\nfor(var key in files){\\n    log(key+\\\">\\\"+files[key]);\\n    if(!fileExist(base_path+key)||!fetch(base_path+key)){\\n             writeFile(base_path+key,fetch(files[key],{}));\\n    }\\n}\\nif(!fileExist(base_path+\\\"本地资源.txt\\\")){\\nwriteFile(base_path+\\\"本地资源.txt\\\")\\n}\\n//执行预处理\\neval(fetch(base_path+js_name));\\nzywpre();\"}]","icon":""},{"last_chapter_rule":"","title":"加解密工具","author":"Rx&Reborn&@LoyDgIk&wzhjgood","version":13,"url":"hiker://empty#fyAll","col_type":"rich_text","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst {\n    header\n} = $.require(\"hiker://page/classicHeader\");\nconst {\n    setEncodePage\n} = $.require(\"hiker://page/encode\");\nconst {\n    setCryptoPage\n} = $.require(\"hiker://page/crypto\");\nconst {\n    setHashPage\n} = $.require(\"hiker://page/hash\");\n// const { Crypto } = $.require(\"hiker://page/aes\");\n/**\n * 1. 引入算法依赖\n */\nconst {\n    buddha\n} = $.require(\"hiker://page/buddha\");\nconst {\n    bear\n} = $.require(\"hiker://page/bear\");\nconst {\n    roar\n} = $.require(\"hiker://page/roar\");\nconst {\n    unicode\n} = $.require(\"hiker://page/unicode\");\nconst {\n    base64\n} = $.require(\"hiker://page/base64\");\nconst {\n    ascii\n} = $.require(\"hiker://page/ascii\");\nconst {\n    hex\n} = $.require(\"hiker://page/hex\");\n\nlet ruleTitle = MY_RULE.title;\naddListener('onClose', $.toString((header, ruleTitle) => {\n    putVar(\"encode-text\", \"\");\n    putVar(\"decode-text\", \"\");\n    header.onClose();\n    let Crypto = $.require(\"hiker://page/aes?rule=\" + ruleTitle);\n    Crypto.onClose();\n    let HashAlgorithm = $.require(\"hiker://page/hashalgorithm?rule=\" + ruleTitle);\n    HashAlgorithm.onClose();\n}, header, ruleTitle))\n\nlet d = [];\nd.push({\n    desc: \"0\",\n    col_type: \"x5_webview_single\"\n})\nlet classic = {\n    \"编码转换\": [\"佛曰\", \"熊曰\", \"兽音\", \"Unicode\", \"Base64\", \"ASCII\", \"Hex\"],\n    \"加密/解密\": [{\n            \"对称加密\": [\"AES\", \"DES\"]\n        },\n        {\n            \"非对称加密\": [\"RSA\"]\n        }\n    ],\n  \"散列/哈希\": [\n\t \"MD5\",\n\t{\"SHA\": [\"SHA-1\", \"\", \"\", \"\", \"\", /*\"SHA3-512\"*/]},\n\t{\"HMAC\": [\"HMAC-MD5\",\"HMAC-SHA1\",\"HMAC-SHA224\", \"HMAC-SHA256\", \"HMAC-SHA384\", \"HMAC-SHA512\"]},\n\t\"PBKDF2\"\n  ]\n}\nd = header.get(classic)\nvar type = header.getCurrentIndex();\n\n/**\n * 2. 在 tools 加入键值对，用于映射算法，格式为 分类中的替换值（即 fyAll 的值）: 引入的算法依赖的对象名\n */\nvar obj = {\n    ruleTitle: ruleTitle,\n    type: type,\n    tools: {\n        \"佛曰\": buddha,\n        \"熊曰\": bear,\n        \"兽音\": roar,\n        \"Unicode\": unicode,\n        \"Base64\": base64,\n        \"ASCII\": ascii,\n        \"Hex\": hex,\n        // \"AES\": Crypto.AES,\n        // \"DES\": Crypto.DES,\n    },\n}\n\n/**\n * 3. 添加子页面写自己的算法，模板请参考“算法模板”这个子页面或已有的子页面\n * \n * 注：此备注后的所有代码各位都不需要动\n */\nif (obj.type.includes(\"编码转换\")) {\n    setEncodePage(d, obj);\n} else if (obj.type.includes(\"加密/解密\")) {\n    setCryptoPage(d, obj);\n} else if (obj.type.includes(\"散列/哈希\")){\n    setHashPage(d, obj);\n}\nsetResult(d)","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"佛曰\",\"path\":\"buddha\",\"rule\":\"js:\\nlet buddha = {};\\nbuddha.encode = function(obj) {\\n    // log(\\\"[buddha]obj.decText: \\\" + obj.decText)\\n    let encode = request('http://hi.pcmoe.net/bear.php', {\\n        headers: {\\n            'X-Token': '07B97AA644E8',\\n            'Origin': 'http://hi.pcmoe.net',\\n            'X-Requested-With': 'XMLHttpRequest',\\n            'User-Agent': 'Mozilla/5.0 (Linux; Android 10; Note9 Build/QKQ1.191222.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045614 Mobile Safari/537.36',\\n            'Content-type': 'application/x-www-form-urlencoded',\\n            'Referer': 'http://hi.pcmoe.net/buddha.html'\\n        },\\n        body: 'mode=Buddha&code=Encode&txt=' + obj.decText,\\n        method: 'POST'\\n    });\\n    // log(\\\"[buddha]encode: \\\" + encode)\\n    return encode;\\n}\\nbuddha.decode = function(obj) {\\n    let decode = request('http://hi.pcmoe.net/bear.php', {\\n        headers: {\\n            'X-Token': '07B97AA644E8',\\n            'Origin': 'http://hi.pcmoe.net',\\n            'X-Requested-With': 'XMLHttpRequest',\\n            'User-Agent': 'Mozilla/5.0 (Linux; Android 10; Note9 Build/QKQ1.191222.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045614 Mobile Safari/537.36',\\n            'Content-type': 'application/x-www-form-urlencoded',\\n            'Referer': 'http://hi.pcmoe.net/buddha.html'\\n        },\\n        body: 'mode=Buddha&code=Decode&txt=' + obj.encText,\\n        method: 'POST'\\n    });\\n    return decode;\\n}\\n$.exports.buddha = buddha\"},{\"col_type\":\"text_1\",\"name\":\"Unicode\",\"path\":\"unicode\",\"rule\":\"js:\\nlet unicode = {};\\nunicode.encode = function(obj) {\\n    let encode = escape(obj.decText.replace(/%u/g, \\\"\\\\\\\\u\\\"));\\n    return encode;\\n}\\nunicode.decode = function(obj) {\\n    let decode = unescape(obj.encText.replace(/\\\\\\\\u/g, \\\"%u\\\"));\\n    return decode;\\n}\\n$.exports.unicode = unicode\"},{\"col_type\":\"text_1\",\"name\":\"Base64\",\"path\":\"base64\",\"rule\":\"js:\\nlet base64 = {};\\nbase64.encode = function(obj) {\\n    // let encode = encodeURIComponent(base64Encode(obj.decText));\\n    let encode = base64Encode(obj.decText);\\n    return encode;\\n}\\nbase64.decode = function(obj) {\\n    let decode = decodeURIComponent(base64Decode(obj.encText));\\n    return decode;\\n}\\n$.exports.base64 = base64\"},{\"col_type\":\"text_1\",\"name\":\"ASCII\",\"path\":\"ascii\",\"rule\":\"js:\\nlet ascii = {};\\nascii.unicode1 = function(str) {\\n    var value = '';\\n    for (var i = 0; i < str.length; i++) {\\n        value = value + '&#' + str.charCodeAt(i) + ';';\\n    }\\n    return value;\\n}\\nascii.reconvert = function(str) {\\n    str = str.replace(/(\\\\\\\\u)(\\\\w{1,4})/gi, function($0) {\\n        return (String.fromCharCode(parseInt((escape($0).replace(/(%5Cu)(\\\\w{1,4})/g, \\\"$2\\\")), 16)));\\n    });\\n    str = str.replace(/(&#x)(\\\\w{1,4});/gi, function($0) {\\n        return String.fromCharCode(parseInt(escape($0).replace(/(%26%23x)(\\\\w{1,4})(%3B)/g, \\\"$2\\\"), 16));\\n    });\\n    str = str.replace(/(&#)(\\\\d{1,6});/gi, function($0) {\\n        return String.fromCharCode(parseInt(escape($0).replace(/(%26%23)(\\\\d{1,6})(%3B)/g, \\\"$2\\\")));\\n    });\\n\\n    return str;\\n}\\n// $.exports.unicode1 = unicode1;\\n// $.exports.reconvert = reconvert;\\nascii.encode = function(obj) {\\n    let encode = this.unicode1(obj.decText);\\n    return encode;\\n}\\nascii.decode = function(obj) {\\n    let decode = this.reconvert(obj.encText);\\n    return decode;\\n}\\n$.exports.ascii = ascii;\"},{\"col_type\":\"text_1\",\"name\":\"获取分类头部\",\"path\":\"classicHeader\",\"rule\":\"js:\\nlet d = [];\\n\\nfunction putKeyIntoMap(key, value) {\\n    const keyMap = JSON.parse(getVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\")+\\\"_all_key_Map\\\"), \\\"{}\\\"));\\n    keyMap[key] = value;\\n    putVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\"), JSON.stringify(keyMap));\\n}\\n\\nfunction getHeaderFromJSONObject(obj) {\\n    for (let key in obj) {\\n        d.push({\\n            title: key == getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\"), Object.keys(obj)[0]) ? \\\"““\\\" + key + \\\"””\\\" : key,\\n            url: $(\\\"#noLoading#\\\").lazyRule((key) => {\\n                putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\"), key);\\n                putVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_cur_index\\\"), key);\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\"\\n            }, key),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    d.push({\\n        col_type: \\\"blank_block\\\"\\n    });\\n    let key = getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\"), Object.keys(obj)[0]);\\n    putVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_cur_index\\\"), key);\\n    getNextHeaderFromJSONArray(key, obj[key]);\\n    return d;\\n}\\n\\nfunction getNextHeaderFromJSONArray(key, array) {\\n    if (array == undefined || array.length == 0) {\\n        return;\\n    }\\n    let nextHeader = {};\\n    let defaultValue = \\\"\\\";\\n    defaultValue = array[0];\\n    if (Object.prototype.toString.call(array[0]) === '[object Object]') {\\n        defaultValue = Object.keys(array[0])[0];\\n    }\\n    putKeyIntoMap((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key), getVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key), defaultValue))\\n    putVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_cur_index\\\"), key + \\\"@@\\\" + getVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key), defaultValue));\\n    for (let value of array) {\\n        if (Object.prototype.toString.call(value) === '[object Object]') {\\n            // log(\\\"valueKeys: \\\"+JSON.stringify(Object.keys(value)[0]))\\n            let valueKey = Object.keys(value)[0];\\n            d.push({\\n                title: valueKey == getVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key), defaultValue) ? \\\"““\\\" + valueKey + \\\"””\\\" : valueKey,\\n                url: $(\\\"#noLoading#\\\").lazyRule((valueKey, key) => {\\n                    function putKeyIntoMap(key, value) {\\n                        const keyMap = JSON.parse(getVar((getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\"), \\\"{}\\\"));\\n                        keyMap[key] = value;\\n                        putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\", JSON.stringify(keyMap));\\n                    }\\n                    putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, valueKey);\\n                    putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_cur_index\\\", key + \\\"@@\\\" + valueKey);\\n                    putKeyIntoMap(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, \\\"defaultValue\\\"))\\n                    refreshPage(false);\\n                    return \\\"hiker://empty\\\"\\n                }, valueKey, key),\\n                col_type: \\\"scroll_button\\\"\\n            });\\n            nextHeader[valueKey] = value[valueKey];\\n        } else {\\n            d.push({\\n                title: value == getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, defaultValue) ? \\\"““\\\" + value + \\\"””\\\" : value,\\n                url: $(\\\"#noLoading#\\\").lazyRule((value, key) => {\\n                    function putKeyIntoMap(key, value) {\\n                        const keyMap = JSON.parse(getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\", \\\"{}\\\"));\\n                        keyMap[key] = value;\\n                        putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\", JSON.stringify(keyMap));\\n                    }\\n                    putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, value);\\n                    putKeyIntoMap(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, \\\"defaultValue\\\"))\\n                    putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_cur_index\\\", key + \\\"@@\\\" + value);\\n                    refreshPage(false);\\n                    return \\\"hiker://empty\\\"\\n                }, value, key),\\n                col_type: \\\"scroll_button\\\"\\n            });\\n        }\\n    }\\n\\n    d.push({\\n        col_type: \\\"blank_block\\\"\\n    });\\n    if (nextHeader !== undefined && nextHeader.length != 0) {\\n        getNextHeaderFromJSONArray(key + \\\"@@\\\" + getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, defaultValue), nextHeader[getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@\\\" + key, defaultValue)]);\\n    }\\n}\\n\\nlet header = {\\n    /**\\n     * 可自定义当前分类头部 id（其实没啥用，就是为了调试不同规则区分一下而已）\\n     */\\n    setId: function(id) {\\n\\t      putVar(\\\"ClassicHeader.id\\\", id)\\n    },\\n    getId: function() {\\n\\t      return getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\");\\n    },\\n    /**\\n     * 获取分类头部，返回视界 setResult 用的数组\\n     */\\n    get: function(obj) {\\n        let result = getHeaderFromJSONObject(obj);\\n        //log(\\\"【子页面】\\\" + JSON.stringify(result))\\n        return result;\\n    },\\n    /**\\n      * 页面关闭时需要注册的生命周期，引入依赖后在 addListener 中调用即可\\n      * 例：\\n         const { header } = $.require(\\\"hiker://page/classicHeader\\\");\\n         addListener(\\\"onClose\\\", $.toString((header) => {\\n          header.onClose();\\n        }, header));\\n      */\\n    onClose: function() {\\n        // putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"\\\", \\\"编码\\\");\\n        // putVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"@@编码\\\", \\\"佛曰\\\");\\n        let allKeyArr = Object.keys(JSON.parse(getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\", \\\"{}\\\")));\\n        for (let i in allKeyArr) {\\n            clearVar(allKeyArr[i]);\\n            // log(\\\"【清理后】\\\"+ allKeyArr[i] + \\\": \\\"+JSON.stringify(getVar(allKeyArr[i], \\\"\\\")))\\n        }\\n        clearVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\"))\\n        clearVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_all_key_Map\\\")\\n        clearVar(\\\"ClassicHeader.id\\\")\\n    },\\n    /**\\n     * 获取当前已选多级分类，返回的数据格式为：一级分类@@二级分类@@...，可自行做映射获取 url\\n     */\\n    getCurrentIndex: function() {\\n        return getVar(getVar(\\\"ClassicHeader.id\\\", \\\"classic\\\") + \\\"_cur_index\\\", \\\"\\\");\\n    }\\n}\\n$.exports.header = header\"},{\"col_type\":\"text_1\",\"name\":\"编码类页面\",\"path\":\"encode\",\"rule\":\"js:\\nfunction setEncodePage(d, obj) {\\n    d.push({\\n    title: \\\"编码\\\",\\n    desc: \\\"请输入原文\\\",\\n    col_type: 'input',\\n    extra: {\\n        // titleVisible: false,\\n        defaultValue: getVar(\\\"decode-text\\\", \\\"\\\"),\\n        type: \\\"textarea\\\",\\n        onChange: 'putVar(\\\"decode-text\\\",input)'\\n    },\\n    url: $.toString((obj) => {\\n        obj.decText = input;\\n        // log(\\\"obj.decText: \\\" + obj.decText)\\n        var encode = \\\"\\\";\\n        var tool = {};\\n        for (let key in obj.tools) {\\n            if (obj.type.includes(key)) {\\n                tool = obj.tools[key];\\n                break;\\n            }\\n        }\\n        encode = tool.encode(obj);\\n        // log(\\\"encode: \\\" + encode)\\n        putVar('encode-text', encode);\\n        refreshPage();\\n        return 'toast://加密成功';\\n    }, obj),\\n});\\n\\nd.push({\\n    title: \\\"解码\\\",\\n    desc: \\\"请输入密文\\\",\\n    col_type: 'input',\\n    extra: {\\n        // titleVisible: false,\\n        defaultValue: getVar(\\\"encode-text\\\", \\\"\\\"),\\n        type: \\\"textarea\\\",\\n        onChange: 'putVar(\\\"encode-text\\\",input)'\\n    },\\n    url: $.toString((obj) => {\\n        obj.encText = input;\\n        // log(\\\"obj.encText: \\\" + obj.encText)\\n        var decode = \\\"\\\";\\n        var tool = {};\\n        for (let key in obj.tools) {\\n            if (obj.type.includes(key)) {\\n                tool = obj.tools[key];\\n                break;\\n            }\\n        }\\n        decode = tool.decode(obj);\\n        putVar('decode-text', decode);\\n        refreshPage();\\n        return 'toast://解密成功';\\n    }, obj),\\n});\\n  \\nd.push({\\n    title: '清空原文',\\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\\n    url: \\\"hiker://empty#noLoading#\\\" + \\\"@lazyRule=.js:putVar('decode-text', '');refreshPage();'toast://清空成功'\\\",\\n    col_type: 'icon_2'\\n});\\n\\nd.push({\\n    title: '清空密文',\\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\\n    url: \\\"hiker://empty#noLoading#\\\" + \\\"@lazyRule=.js:putVar('encode-text', '');refreshPage();'toast://清空成功'\\\",\\n    col_type: 'icon_2'\\n});\\n\\nd.push({\\n    title: '复制原文',\\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule(() => {\\n        var dec = getVar(\\\"decode-text\\\");\\n        if (dec) {\\n            return \\\"copy://\\\" + dec;\\n        } else {\\n            return \\\"toast://内容为空！\\\"\\n        }\\n    }),\\n    col_type: 'icon_2'\\n});\\n\\nd.push({\\n    title: '复制密文',\\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule(() => {\\n        var enc = getVar(\\\"encode-text\\\");\\n        if (enc) {\\n            return \\\"copy://\\\" + enc;\\n        } else {\\n            return \\\"toast://内容为空！\\\"\\n        }\\n    }),\\n    col_type: 'icon_2'\\n});\\n}\\n$.exports.setEncodePage = setEncodePage\"},{\"col_type\":\"text_1\",\"name\":\"加密类页面\",\"path\":\"crypto\",\"rule\":\"js:\\n// const { ConfigMapping } = $.require(\\\"hiker://page/aes\\\");\\n// log(JSON.stringify(Object.keys(Crypto.ConfigMapping)))\\nconst { buildAESUi } = $.require(\\\"hiker://page/aesui\\\");\\nconst { buildRSAUi } = $.require(\\\"hiker://page/rsaui\\\");\\nfunction setCryptoPage(d, obj) {\\n    if (obj.type.includes(\\\"对称加密\\\") && !obj.type.includes(\\\"非对称加密\\\")) {\\n        buildAESUi(d, obj)\\n    } else if (obj.type.includes(\\\"非对称加密\\\")) {\\n        buildRSAUi(d, obj)\\n    }\\n}\\n$.exports.setCryptoPage = setCryptoPage\"},{\"col_type\":\"text_1\",\"name\":\"AES\",\"path\":\"aes\",\"rule\":\"js:\\neval(getCryptoJS());\\nlet Crypto = {\\n    ConfigMapping: {\\n        encType: {\\n            \\\"AES\\\": CryptoJS.AES.encrypt,\\n            \\\"DES\\\": CryptoJS.DES.encrypt,\\n        },\\n        decType: {\\n            \\\"AES\\\": CryptoJS.AES.decrypt,\\n            \\\"DES\\\": CryptoJS.DES.decrypt,\\n        },\\n        mode: {\\n            \\\"CBC\\\": CryptoJS.mode.CBC,\\n            \\\"ECB\\\": CryptoJS.mode.ECB,\\n            \\\"CFB\\\": CryptoJS.mode.CFB,\\n            \\\"CTR\\\": CryptoJS.mode.CTR,\\n            \\\"OFB\\\": CryptoJS.mode.OFB\\n        },\\n        pad: {\\n            \\\"Pkcs7\\\": CryptoJS.pad.Pkcs7,\\n            \\\"ZeroPadding\\\": CryptoJS.pad.ZeroPadding,\\n            \\\"NoPadding\\\": CryptoJS.pad.NoPadding,\\n            \\\"Iso97971\\\": CryptoJS.pad.Iso97971,\\n            \\\"\\\": CryptoJS.pad.,\\n            // \\\"Iso10126\\\": CryptoJS.pad.Iso10126,\\n        },\\n        encode: {\\n            \\\"Base64\\\": \\\"Base64\\\",\\n            \\\"HEX\\\": \\\"HEX\\\"\\n        },\\n        blockSize: {\\n            \\\"AES\\\": {\\n                \\\"AES-128\\\": 128,\\n                \\\"AES-192\\\": 192,\\n                \\\"AES-256\\\": 256,\\n            }\\n        },\\n        keyEncodeType: {\\n            \\\"UTF-8\\\": \\\"UTF-8\\\",\\n            \\\"Hex\\\": \\\"Hex\\\"\\n        },\\n        ivEncodeType: {\\n            \\\"UTF-8\\\": \\\"UTF-8\\\",\\n            \\\"Hex\\\": \\\"Hex\\\"\\n        }\\n    },\\n    config: {\\n        type: {\\n            key: \\\"crypto_type\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"AES\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        mode: {\\n            key: \\\"crypto_select_mode\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"CBC\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        pad: {\\n            key: \\\"crypto_select_pad\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"Pkcs7\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        iv: {\\n            key: \\\"crypto_input_iv\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        encode: {\\n            key: \\\"crypto_output_encode\\\",\\n            get: function () {\\n                return getVar(this.key, Crypto.ConfigMapping.encode[\\\"Base64\\\"])\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        key: {\\n            key: \\\"crypto_key\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        text: {\\n            key: \\\"crypto_text\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        cipherText: {\\n            key: \\\"crypto_cipher_text\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        blockSize: {\\n            key: \\\"crypto_block_size\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"AES-128\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n\\n        },\\n        keyEncodeType: {\\n            key: \\\"crypto_key_encode_type\\\",\\n            get: function () {\\n                // TODO 此处不知为何 Crypto.ConfigMapping.keyEncodeType[\\\"UTF-8\\\"] 会报 Crypto undefined\\n                return getVar(this.key, \\\"UTF-8\\\")\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        ivEncodeType: {\\n            key: \\\"crypto_iv_encode_type\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"UTF-8\\\")\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n    },\\n    onClose: function() {\\n        let configKeys = Object.keys(this.config);\\n        for(let confKey of configKeys) {\\n            let key = this.config[confKey].key;\\n            clearVar(key);\\n        }\\n    },\\n    buildConfig: function() {\\n        let mode = this.config.mode.get();\\n        let pad = this.config.pad.get();\\n        let iv = this.config.iv.get();\\n        let conf = {};\\n        conf.mode = this.ConfigMapping.mode[mode];\\n        conf.padding = this.ConfigMapping.pad[pad]\\n        if (mode != \\\"ECB\\\" && iv.length != 0) {\\n            conf.iv = CryptoJS.enc.Utf8.parse(iv);\\n            if (this.config.ivEncodeType.get() == \\\"Hex\\\") {\\n                iv = iv.replace(\\\"[HEX]:\\\", \\\"\\\")\\n                conf.iv = CryptoJS.enc.Hex.parse(iv);\\n            }\\n        }\\n        return conf\\n    },\\n    encryptor: function(obj) {\\n        // 原文\\n        let text = obj.decText;\\n        if (text) {\\n            let keyString = this.config.key.get()\\n            let key = CryptoJS.enc.Utf8.parse(keyString);\\n            if (this.config.keyEncodeType.get() == \\\"Hex\\\") {\\n                keyString = keyString.replace(\\\"[HEX]:\\\", \\\"\\\")\\n                key = CryptoJS.enc.Hex.parse(keyString);\\n            }\\n            try {\\n                let conf = this.buildConfig()\\n                let encrypted = this.ConfigMapping.encType[this.config.type.get()](text, key, conf);\\n                let encode = this.config.encode.get()\\n                let cipherText = encrypted.toString();\\n                if (encode === 'HEX') {\\n                    cipherText = CryptoJS.enc.Hex.stringify(CryptoJS.enc.Base64.parse(cipherText));\\n                }\\n                // 密文\\n                this.config.cipherText.set(cipherText)\\n                return cipherText;\\n            } catch (e) {\\n                log(e.message)\\n                setError(e.message)\\n            }\\n        } else {\\n            throw new Error(\\\"明文不能为空！\\\")\\n        }\\n    },\\n    decryptor: function(obj) {\\n        let text = obj.encText;\\n        if (text) {\\n            let encode = this.config.encode.get()\\n            let cipherText;\\n            if (encode === 'Base64') {\\n                cipherText = text\\n            } else if (encode === 'HEX') {\\n                cipherText = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Hex.parse(text))\\n            }\\n            let keyString = this.config.key.get()\\n            let key = CryptoJS.enc.Utf8.parse(keyString);\\n            if (this.config.keyEncodeType.get() == \\\"Hex\\\") {\\n                keyString = keyString.replace(\\\"[HEX]:\\\", \\\"\\\")\\n                key = CryptoJS.enc.Hex.parse(keyString);\\n            }\\n            try {\\n                let conf = this.buildConfig()\\n                let decrypted = this.ConfigMapping.decType[this.config.type.get()](cipherText, key, conf);\\n                let decryptedStr = decrypted.toString(CryptoJS.enc.Utf8);\\n                if (!decryptedStr) {\\n                    throw new Error(\\\"请检查密钥 key、偏移量 iv 以及密文是否正确！\\\");\\n                }\\n                this.config.text.set(decryptedStr)\\n                return decryptedStr\\n            } catch (e) {\\n                throw new Error(\\\"解密失败！\\\" + e.message);\\n            }\\n        } else {\\n            throw new Error(\\\"密文不能为空！\\\")\\n        }\\n    },\\n    checkKey: function (obj) {\\n        let key = Crypto.config.key.get();\\n        if (key.length === 0) { \\n            throw new Error(\\\"密钥 key 不能为空！\\\")\\n        }\\n        let type = Crypto.config.type.get();\\n        let blockSize = 128;\\n        try {\\n            blockSize = Crypto.ConfigMapping[\\\"blockSize\\\"][type][Crypto.config.blockSize.get()]\\n            // log(\\\"checkKey#blockSize:\\\" + blockSize)\\n        } catch (e) { }\\n        if (type === \\\"DES\\\") {\\n            blockSize = 64;\\n        }\\n        if (Crypto.config.keyEncodeType.get() == \\\"Hex\\\") {\\n            key = key.replace(\\\"[HEX]:\\\", \\\"\\\")\\n            blockSize = blockSize * 2;\\n        }\\n        // 设置数据块长度\\n        let keySize = key.length * 8;\\n        // log(\\\"checkKey#keySize:\\\" + keySize)\\n        // log(\\\"checkKey#keySize/8:\\\" + keySize/8)\\n        // log(\\\"checkKey#blockSize:\\\" + blockSize)\\n        // log(\\\"checkKey#blockSize/8:\\\" + blockSize / 8)\\n        if (keySize < blockSize) {\\n            obj.from = Crypto.config.keyEncodeType.key\\n            let newKey = Crypto.fillKeys(obj, key, blockSize / 8);\\n            Crypto.config.key.set(newKey)\\n            // log(\\\"checkKey#newKey: \\\" + newKey)\\n            // log(\\\"checkKey#newKey.Size: \\\" + newKey.length * 8)\\n            throw new Error('密钥 key 长度过短，已自动 `\\\\\\\\x00` 空填充，请再次执行加/解密')\\n        } else if (keySize > blockSize) {\\n            // TODO 超出部分将被忽略\\n            throw new Error(\\\"密钥 key 长度 \\\" + key.length + \\\" 过长，长度应为 \\\" + blockSize / 8 +\\\"，请自行检查，然后重新执行加/解密\\\")\\n        } else {\\n            return;\\n        }\\n    },\\n    checkIv: function (obj) {\\n        let iv = Crypto.config.iv.get();\\n        let mode = Crypto.config.mode.get();\\n        if (mode === 'ECB') {\\n            return;\\n        }\\n        if (iv.length === 0) {\\n            throw new Error(\\\"偏移量 iv 不能为空！\\\")\\n        }\\n        let type = Crypto.config.type.get();\\n        let blockSize = 128;\\n        if (type === 'DES') {\\n            blockSize = 64;\\n        }\\n        if (Crypto.config.ivEncodeType.get() == \\\"Hex\\\") {\\n            iv = iv.replace(\\\"[HEX]:\\\", \\\"\\\")\\n            blockSize = blockSize * 2;\\n        }\\n        // 设置数据块长度\\n        let ivSize = iv.length * 8;\\n        if (ivSize < blockSize) {\\n            obj.from = Crypto.config.ivEncodeType.key\\n            let newIv = Crypto.fillKeys(obj, iv, blockSize / 8);\\n            Crypto.config.iv.set(newIv)\\n            throw new Error(\\\"偏移量 iv 长度过短，已自动 `\\\\\\\\x00` 空填充，请再次执行加/解密\\\")\\n        } else if (ivSize > blockSize) {\\n            throw new Error(\\\"偏移量 iv 长度 \\\" + iv.length + \\\" 过长，长度应为 \\\" + blockSize / 8 + \\\"，请自行检查，然后重新执行加/解密\\\")\\n        } else {\\n            return;\\n        }\\n    },\\n    /**\\n     * 密钥 `\\\\x00` 空填充\\n     * @param {string} key 密钥\\n     * @param {Number} keySize 填充长度, 值: 128, 192, 256\\n     */\\n    fillKeys: function (obj, key, keySize) {\\n        let Tool = $.require(\\\"hiker://page/utiliy?rule=\\\" + obj.ruleTitle);\\n        let encodeType = \\\"UTF-8\\\"\\n        if (obj.from == Crypto.config.keyEncodeType.key) {\\n            encodeType = Crypto.config.keyEncodeType.get();\\n        } else if (obj.from == Crypto.config.ivEncodeType.key) {\\n            encodeType = Crypto.config.ivEncodeType.get();\\n        }\\n        if (encodeType == \\\"Hex\\\") {\\n            return \\\"[HEX]:\\\" + Tool.fillZeroPadding(key, keySize);\\n        }\\n        return Tool.fillNullPadding(key, keySize);\\n    },\\n    AES: {\\n        encrypt: function(obj) {\\n            Crypto.config.type.set(\\\"AES\\\")\\n            // log(\\\"AES-Encrypt-obj:\\\" + JSON.stringify(obj))\\n            return Crypto.encryptor(obj);\\n        },\\n        decrypt: function(obj) {\\n            Crypto.config.type.set(\\\"AES\\\")\\n            return Crypto.decryptor(obj);\\n        }\\n\\n    },\\n    DES: {\\n        encrypt: function(obj) {\\n            Crypto.config.type.set(\\\"DES\\\")\\n            return Crypto.encryptor(obj);\\n        },\\n        decrypt: function(obj) {\\n            Crypto.config.type.set(\\\"DES\\\")\\n            return Crypto.decryptor(obj);\\n        }\\n\\n    },\\n}\\n\\n$.exports = Crypto;\"},{\"col_type\":\"text_1\",\"name\":\"编码类算法模板\",\"path\":\"template_encode\",\"rule\":\"js:\\nlet template = {};\\n// 编码\\ntemplate.encode = function(obj) {\\n    log(\\\"我是原文\\\"+ obj.decText)\\n    let encode = \\\"原文通过加密得到的密文字符串\\\";\\n    return encode;\\n}\\n// 解码\\ntemplate.decode = function(obj) {\\n    log(\\\"我是密文\\\"+ obj.encText)\\n    let decode = \\\"密文通过解密得到的原文字符串\\\";\\n    return decode;\\n}\\n// 导出给外部通过 require 方法使用\\n$.exports.template = template\"},{\"col_type\":\"text_1\",\"name\":\"AES-UI\",\"path\":\"aesui\",\"rule\":\"js:\\nfunction buildAESUi(d, obj) {\\n    let config = $.require(\\\"hiker://page/aes?rule=\\\" + obj.ruleTitle).config;\\n    if (obj.type.includes(\\\"AES\\\")) {\\n        config.type.set(\\\"AES\\\")\\n    }\\n    if (obj.type.includes(\\\"DES\\\")) {\\n        config.type.set(\\\"DES\\\")\\n    }\\n    d.push({\\n        title: \\\"加密\\\",\\n        desc: \\\"请输入明文\\\",\\n        col_type: 'input',\\n        extra: {\\n            // titleVisible: false,\\n            defaultValue: getVar(\\\"crypto_text\\\", \\\"\\\"),\\n            type: \\\"textarea\\\",\\n            onChange: 'putVar(\\\"crypto_text\\\",input)'\\n        },\\n        url: $.toString((obj) => {\\n            obj.decText = input;\\n            // log(\\\"obj.decText: \\\" + obj.decText)\\n            let toastText = \\\"加密成功\\\";\\n            var cipherText = \\\"\\\";\\n            let Crypto = $.require(\\\"hiker://page/aes?rule=\\\" + obj.ruleTitle);\\n            let config = Crypto.config;\\n            try {\\n                Crypto.checkKey(obj);\\n                Crypto.checkIv(obj);\\n                obj.tools[\\\"AES\\\"] = Crypto.AES;\\n                obj.tools[\\\"DES\\\"] = Crypto.DES;\\n                var tool = {};\\n                for (let key in obj.tools) {\\n                    if (obj.type.includes(key)) {\\n                        tool = obj.tools[key];\\n                        break;\\n                    }\\n                }\\n                cipherText = tool.encrypt(obj);\\n                // log(\\\"cipherText: \\\" + cipherText)\\n            } catch (e) {\\n                cipherText = e.message;\\n                toastText = \\\"加密失败\\\";\\n            }\\n            config.cipherText.set(cipherText)\\n            refreshPage();\\n            return 'toast://' + toastText;\\n        }, obj),\\n    });\\n    buildConfigsUI(d, obj);\\n    d.push({\\n        title: \\\"解密\\\",\\n        desc: \\\"请输入密文\\\",\\n        col_type: 'input',\\n        extra: {\\n            // titleVisible: false,\\n            defaultValue: getVar(\\\"crypto_cipher_text\\\", \\\"\\\"),\\n            type: \\\"textarea\\\",\\n            onChange: 'putVar(\\\"crypto_cipher_text\\\",input)'\\n        },\\n        url: $.toString((obj) => {\\n            obj.encText = input;\\n            // log(\\\"obj.encText: \\\" + obj.encText)\\n            let toastText = \\\"解密成功\\\";\\n            let Crypto = $.require(\\\"hiker://page/aes?rule=\\\" + obj.ruleTitle);\\n            var text = \\\"\\\";\\n            let config = Crypto.config;\\n            try {\\n                Crypto.checkKey(obj);\\n                Crypto.checkIv(obj);\\n                obj.tools[\\\"AES\\\"] = Crypto.AES;\\n                obj.tools[\\\"DES\\\"] = Crypto.DES\\n                var tool = {};\\n                for (let key in obj.tools) {\\n                    if (obj.type.includes(key)) {\\n                        tool = obj.tools[key];\\n                        break;\\n                    }\\n                }\\n                // log(obj.encText)\\n                text = tool.decrypt(obj);\\n            } catch (e) {\\n                text = e.message;\\n                toastText = \\\"解密失败\\\";\\n            }\\n            config.text.set(text)\\n            refreshPage();\\n            return 'toast://' + toastText;\\n        }, obj),\\n    });\\n}\\n\\nfunction buildConfigsUI(d, obj) {\\n    let Crypto = $.require(\\\"hiker://page/aes?rule=\\\" + obj.ruleTitle);\\n    let ConfigMapping = Crypto.ConfigMapping;\\n    let config = Crypto.config;\\n    let mappingKeys = Object.keys(ConfigMapping);\\n    let modes = Object.keys(ConfigMapping[\\\"mode\\\"]);\\n    // log(JSON.stringify(modes))\\n    let paddings = Object.keys(ConfigMapping[\\\"pad\\\"]);\\n    // log(JSON.stringify(paddings))\\n    let encodes = Object.keys(ConfigMapping[\\\"encode\\\"]);\\n    // log(JSON.stringify(encodes))\\n    d.push({\\n        title: '““””<strong><font color=\\\"black\\\">模式</font></strong>',\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"scroll_button\\\"\\n    })\\n    for (let mode of modes) {\\n        d.push({\\n            title: mode == config.mode.get() ? \\\"‘‘\\\" + mode + \\\"’’\\\" : mode,\\n            url: $(\\\"#noLoading#\\\").lazyRule((mode, config) => {\\n                config.mode.set(mode)\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\"\\n            }, mode, config),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    d.push({\\n        col_type: \\\"blank_block\\\"\\n    })\\n\\n    d.push({\\n        title: '““””<strong><font color=\\\"black\\\">填充</font></strong>',\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"scroll_button\\\"\\n    })\\n    for (let padding of paddings) {\\n        d.push({\\n            title: padding == config.pad.get() ? \\\"‘‘\\\" + padding + \\\"’’\\\" : padding,\\n            url: $(\\\"#noLoading#\\\").lazyRule((padding, config) => {\\n                config.pad.set(padding)\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\"\\n            }, padding, config),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    d.push({\\n        col_type: \\\"blank_block\\\"\\n    })\\n\\n    if (config.type.get() == 'AES') {\\n        let blockSizes = Object.keys(ConfigMapping[\\\"blockSize\\\"][config.type.get()]);\\n        d.push({\\n            title: '““””<strong><font color=\\\"black\\\">数据块</font></strong>',\\n            url: \\\"hiker://empty\\\",\\n            col_type: \\\"scroll_button\\\"\\n        })\\n        for (let blockSize of blockSizes) {\\n            d.push({\\n                title: blockSize == config.blockSize.get() ? \\\"‘‘\\\" + blockSize + \\\"’’\\\" : blockSize,\\n                url: $(\\\"#noLoading#\\\").lazyRule((blockSize, config) => {\\n                    config.blockSize.set(blockSize)\\n                    refreshPage(false);\\n                    return \\\"hiker://empty\\\"\\n                }, blockSize, config),\\n                col_type: \\\"scroll_button\\\"\\n            });\\n        }\\n        d.push({\\n            col_type: \\\"blank_block\\\"\\n        })\\n    }\\n\\n    d.push({\\n        title: '““””<strong><font color=\\\"black\\\">密文编码</font></strong>',\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"scroll_button\\\"\\n    })\\n    for (let encode of encodes) {\\n        d.push({\\n            title: encode == config.encode.get() ? \\\"‘‘\\\" + encode + \\\"’’\\\" : encode,\\n            url: $(\\\"#noLoading#\\\").lazyRule((encode, config) => {\\n                config.encode.set(encode);\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\"\\n            }, encode, config),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    // AES 密钥 key 16/24/32 字符 => 128/192/256 bit\\n    let blockSize = 128;\\n    try {\\n        blockSize = ConfigMapping[\\\"blockSize\\\"][config.type.get()][config.blockSize.get()]\\n    } catch (e) {}\\n    if (config.type.get() === \\\"DES\\\") {\\n        blockSize = 64;\\n    }\\n    obj.blockSize = blockSize;\\n    let keyLen = blockSize / 8;\\n    let keyLenStr = keyLen + \\\" 个字符\\\"\\n    if (config.keyEncodeType.get() == 'Hex') {\\n        keyLenStr = (keyLen * 2) + \\\" 个十六进制字符\\\";\\n    }\\n    d.push({\\n        title: \\\"随机 key\\\",\\n        desc: \\\"密钥 key, 必须 \\\" + keyLenStr,\\n        col_type: 'input',\\n        extra: {\\n            // titleVisible: false,\\n            /*height: -1,\\n            type: \\\"textarea\\\",*/\\n            defaultValue: config.key.get(),\\n            onChange: $.toString((config) => {\\n                config.key.set(input)\\n            }, config)\\n        },\\n        url: $.toString((obj, config) => {\\n            let Tool = $.require(\\\"hiker://page/utiliy?rule=\\\" + obj.ruleTitle);\\n            let keyLen = obj.blockSize / 8;\\n            if (config.type.get() === 'DES') {\\n                keyLen = 8;\\n            }\\n            let randomKey = Tool.randomString(keyLen);\\n            if (config.keyEncodeType.get() == 'Hex') {\\n                let hex = $.require(\\\"hiker://page/hex?rule=\\\" + obj.ruleTitle).hex;\\n                obj.decText = randomKey\\n                randomKey = hex.encode(obj)\\n            }\\n            config.key.set(randomKey);\\n            refreshPage(false)\\n        }, obj, config)\\n    });\\n\\n    d.push({\\n        title: '““””<strong><font color=\\\"black\\\">密钥编码</font></strong>',\\n        url: $(\\\"#noLoading#\\\").lazyRule((config) => {\\n            config.keyEncodeType.set(\\\"UTF-8\\\");\\n            refreshPage(false);\\n            return \\\"toast://重置成功！\\\";\\n        }, config),\\n        col_type: \\\"scroll_button\\\"\\n    })\\n    let keyEncodeTypes = Object.keys(ConfigMapping[\\\"keyEncodeType\\\"]);\\n    // log(JSON.stringify(keyEncodeTypes))\\n    for (let keyEncodeType of keyEncodeTypes) {\\n        d.push({\\n            title: keyEncodeType == config.keyEncodeType.get() ? \\\"‘‘\\\" + keyEncodeType + \\\"’’\\\" : keyEncodeType,\\n            url: $(\\\"#noLoading#\\\").lazyRule((keyEncodeType, config, obj) => {\\n                let toastText = \\\"hiker://empty\\\";\\n                let hex = $.require(\\\"hiker://page/hex?rule=\\\" + obj.ruleTitle).hex;\\n                let key = config.key.get();\\n                let oldKeyEncodeType = config.keyEncodeType.get();\\n                switch (oldKeyEncodeType) {\\n                    case \\\"UTF-8\\\":\\n                        if (keyEncodeType == \\\"Hex\\\") {\\n                            obj.decText = key\\n                            if (key.length !== 0) {\\n                                config.key.set(hex.encode(obj))\\n                            }\\n                        }\\n                        config.keyEncodeType.set(keyEncodeType);\\n                        refreshPage(false);\\n                        break;\\n                    case \\\"Hex\\\":\\n                        if (key.length == 0) {\\n                            config.keyEncodeType.set(keyEncodeType);\\n                            refreshPage(false);\\n                        } else {\\n                            toastText = 'toast://当前不支持 Hex 转其他编码，若需要重置选项请点击[密钥编码]'\\n                        }\\n                        break;\\n                }\\n                return toastText;\\n            }, keyEncodeType, config, obj),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n\\n    if (config.mode.get() !== \\\"ECB\\\") {\\n        let ivSize = config.type.get() === \\\"DES\\\" ? 64 : 128;\\n        obj.ivSize = ivSize;\\n        let ivLen = ivSize / 8;\\n        let ivLenStr = ivLen + \\\" 个字符\\\"\\n        if (config.ivEncodeType.get() == 'Hex') {\\n            ivLenStr = (ivLen * 2) + \\\" 个十六进制字符\\\";\\n        }\\n        d.push({\\n            title: \\\"随机 iv\\\",\\n            desc: \\\"偏移量 iv, 必须 \\\" + ivLenStr,\\n            col_type: 'input',\\n            extra: {\\n                // titleVisible: false,\\n                /*height: -1,\\n                type: \\\"textarea\\\",*/\\n                defaultValue: config.iv.get(),\\n                onChange: $.toString((config) => {\\n                    config.iv.set(input)\\n                }, config)\\n            },\\n            url: $.toString((obj, config) => {\\n                let Tool = $.require(\\\"hiker://page/utiliy?rule=\\\" + obj.ruleTitle);\\n                let ivLen = obj.ivSize / 8;\\n                let randomIv = Tool.randomString(ivLen);\\n                if (config.ivEncodeType.get() == 'Hex') {\\n                    let hex = $.require(\\\"hiker://page/hex?rule=\\\" + obj.ruleTitle).hex;\\n                    obj.decText = randomIv\\n                    randomIv = hex.encode(obj)\\n                }\\n                config.iv.set(randomIv);\\n                refreshPage(false)\\n            }, obj, config)\\n        });\\n        d.push({\\n            title: '““””<strong><font color=\\\"black\\\">偏移量编码</font></strong>',\\n            url: $(\\\"#noLoading#\\\").lazyRule((config) => {\\n                config.ivEncodeType.set(\\\"UTF-8\\\");\\n                refreshPage(false);\\n                return \\\"toast://重置成功！\\\";\\n            }, config),\\n            col_type: \\\"scroll_button\\\"\\n        })\\n        let ivEncodeTypes = Object.keys(ConfigMapping[\\\"ivEncodeType\\\"]);\\n        // log(JSON.stringify(keyEncodeTypes))\\n        for (let ivEncodeType of ivEncodeTypes) {\\n            d.push({\\n                title: ivEncodeType == config.ivEncodeType.get() ? \\\"‘‘\\\" + ivEncodeType + \\\"’’\\\" : ivEncodeType,\\n                url: $(\\\"#noLoading#\\\").lazyRule((ivEncodeType, config, obj) => {\\n                    let toastText = \\\"hiker://empty\\\";\\n                    let hex = $.require(\\\"hiker://page/hex?rule=\\\" + obj.ruleTitle).hex;\\n                    let iv = config.iv.get();\\n                    let oldIvEncodeType = config.ivEncodeType.get();\\n                    switch (oldIvEncodeType) {\\n                        case \\\"UTF-8\\\":\\n                            if (ivEncodeType == \\\"Hex\\\") {\\n                                obj.decText = iv\\n                                if (iv.length !== 0) {\\n                                    config.iv.set(hex.encode(obj))\\n                                }\\n                            }\\n                            config.ivEncodeType.set(ivEncodeType);\\n                            refreshPage(false);\\n                            break;\\n                        case \\\"Hex\\\":\\n                            if (iv.length == 0) {\\n                                config.ivEncodeType.set(ivEncodeType);\\n                                refreshPage(false);\\n                            } else {\\n                                toastText = 'toast://当前不支持 Hex 转其他编码，若需要重置选项请点击[偏移量编码]'\\n                            }\\n                            break;\\n                    }\\n                    return toastText;\\n                }, ivEncodeType, config, obj),\\n                col_type: \\\"scroll_button\\\"\\n            });\\n        }\\n    } else {\\n        config.iv.set(\\\"\\\");\\n    }\\n}\\n$.exports.buildAESUi = buildAESUi\"},{\"col_type\":\"rich_text\",\"name\":\"RSA-UI\",\"path\":\"rsaui\",\"rule\":\"js:\\nlet navigator = {};\\nlet window = { \\n\\tnavigator: navigator \\n};\\nfunction buildRSAUi(d, obj) {\\n  d.push({\\n\\ttitle: '<p style=\\\"text-align: center;\\\">目前无法实现，敬请期待（咕咕咕）~</p>',\\n\\tcol_type: 'rich_text'\\n  })\\n  // https://cdn.jsdelivr.net/npm/keypair@1.0.3/index.min.js\\n  // https://cdn.jsdelivr.net/gh/wwwtyro/cryptico@master/cryptico.min.js\\n  // let cryptico = request(\\\"https://cdn.jsdelivr.net/gh/wwwtyro/cryptico@master/cryptico.min.js\\\")\\n  // eval(cryptico)\\n\\n\\n}\\n$.exports.buildRSAUi = buildRSAUi\"},{\"col_type\":\"text_1\",\"name\":\"工具\",\"path\":\"utiliy\",\"rule\":\"js:\\nlet Tool = {\\n  randomString: function(len){\\n      let chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz123456789' \\n      let maxLen = chars.length\\n      let str = ''\\n      for (let i = 0; i < len; i++) {\\n        str += chars.charAt(Math.floor(Math.random() * maxLen))\\n      }\\n      return str\\n  },\\n  fillNullPadding: function (str, len) {\\n    // str.padStart(targetLength [, padString])\\n    // str.padEnd(targetLength [, padString])\\n    if(str.length >= len) {\\n      return str;\\n    }\\n    return str + Array( len - str.length + 1 ).join(\\\"\\\\x00\\\");\\n  },\\n  fillZeroPadding: function (str, len) {\\n    // str.padStart(targetLength [, padString])\\n    // str.padEnd(targetLength [, padString])\\n    if(str.length >= len) {\\n      return str;\\n    }\\n    return str + Array( len - str.length + 1 ).join(\\\"0\\\");\\n  },\\n}\\n$.exports = Tool;\"},{\"col_type\":\"text_1\",\"name\":\"散列哈希类页面\",\"path\":\"hash\",\"rule\":\"js:\\nconst { buildHashUi } = $.require(\\\"hiker://page/hashui\\\");\\nfunction setHashPage(d, obj) {\\n    buildHashUi(d, obj);\\n}\\n$.exports.setHashPage = setHashPage\"},{\"col_type\":\"text_1\",\"name\":\"Hex\",\"path\":\"hex\",\"rule\":\"js:\\nlet hex = {};\\n// 编码\\nhex.encode = function(obj) {\\n    eval(getCryptoJS());\\n    // log(\\\"我是原文\\\"+ obj.decText)\\n    let wordArray = CryptoJS.enc.Utf8.parse(obj.decText);\\n    let encode = \\\"[HEX]:\\\" + CryptoJS.enc.Hex.stringify(wordArray);\\n    return encode;\\n}\\n// 解码\\nhex.decode = function(obj) {\\n    eval(getCryptoJS());\\n    // log(\\\"我是密文\\\"+ obj.encText)\\n    obj.encText = obj.encText.replace(\\\"[HEX]:\\\", \\\"\\\")\\n    let wordArray = CryptoJS.enc.Hex.parse(obj.encText);\\n    let decode = CryptoJS.enc.Utf8.stringify(wordArray);\\n    return decode;\\n}\\n// 导出给外部通过 require 方法使用\\n$.exports.hex = hex\"},{\"col_type\":\"text_1\",\"name\":\"Hash-UI\",\"path\":\"hashui\",\"rule\":\"js:\\nfunction buildEmtpyHashUi(d, obj) {\\n    d.push({\\n        title: '<p style=\\\"text-align: center;\\\">正在路上，敬请期待（咕咕咕）~</p>',\\n        col_type: 'rich_text'\\n    })\\n}\\nfunction buildHashUi(d, obj) {\\n    if (obj.type.includes(\\\"SHA3\\\") && !obj.type.includes(\\\"HMAC\\\")) {\\n        buildEmtpyHashUi(d, obj);\\n        return;\\n    }\\n     d.push({\\n        title: \\\"哈希/散列\\\",\\n        desc: \\\"请输入原文\\\",\\n        col_type: 'input',\\n        extra: {\\n            // titleVisible: false,\\n            defaultValue: getVar(\\\"hash_text\\\", \\\"\\\"),\\n            type: \\\"textarea\\\",\\n            onChange: 'putVar(\\\"hash_text\\\",input)'\\n        },\\n        url: $.toString((obj) => {\\n            // obj.decText = input;\\n            // log(\\\"obj.decText: \\\" + obj.decText)\\n            let toastText = \\\"加密成功\\\";\\n            let hash_result = \\\"\\\";\\n            let tool = {};\\n            let toolSelects = obj.type.split(\\\"@@\\\");\\n            let toolSelect = toolSelects[toolSelects.length - 1];\\n            let HashAlgorithm = $.require(\\\"hiker://page/hashalgorithm?rule=\\\" + obj.ruleTitle);\\n            HashAlgorithm.config.type.set(toolSelect)\\n            tool = HashAlgorithm;\\n            try {\\n                hash_result = tool.hash();\\n                // log(\\\"hash_result: \\\" + hash_result)\\n            } catch (e) {\\n                hash_result = e.message;\\n                toastText = \\\"加密失败\\\";\\n            }\\n            HashAlgorithm.config.resultText.set(hash_result)\\n            refreshPage();\\n            return 'toast://' + toastText;\\n        }, obj),\\n    });\\n    if (obj.type.includes(\\\"HMAC\\\") || obj.type.includes(\\\"PBKDF2\\\")) {\\n        buildConfigsUI(d, obj);\\n    }\\n    d.push({\\n        title: \\\"复制\\\",\\n        desc: \\\"哈希值\\\",\\n        col_type: 'input',\\n        extra: {\\n            // titleVisible: false,\\n            defaultValue: getVar(\\\"hash_result_text\\\", \\\"\\\"),\\n            type: \\\"textarea\\\",\\n            onChange: 'putVar(\\\"hash_result_text\\\",input)'\\n        },\\n        url: $.toString(() => {\\n            // obj.encText = input;\\n            // log(\\\"obj.encText: \\\" + obj.encText)\\n            if (input) {\\n                return \\\"copy://\\\" + input;\\n            } else {\\n                return \\\"toast://内容为空！\\\"\\n            }\\n        }),\\n    });\\n    \\n}\\nfunction buildConfigsUI(d, obj) {\\n    // HMAC || PBKDF2\\n    let HashAlgorithm = $.require(\\\"hiker://page/hashalgorithm?rule=\\\" + obj.ruleTitle);\\n    if (obj.type.includes(\\\"HMAC\\\")) {\\n        // HMAC-xxx\\n        buildHmacConfigsUI(d, obj, HashAlgorithm.config)\\n    } else if (obj.type.includes(\\\"PBKDF2\\\")) {\\n        // PBKDF2\\n        buildPBKDF2ConfigsUI(d, obj, HashAlgorithm.Mapping, HashAlgorithm.config)\\n    }\\n}\\nfunction buildHmacConfigsUI (d, obj, config) {\\n    // obj.type.includes(\\\"HMAC\\\")\\n    d.push({\\n        title: \\\"随机 key\\\",\\n        desc: \\\"密钥 key\\\",\\n        col_type: 'input',\\n        extra: {\\n            titleVisible: false,\\n            height: -1,\\n            type: \\\"textarea\\\",\\n            defaultValue: config.key.get(),\\n            onChange: $.toString((config) => {\\n                config.key.set(input)\\n            }, config)\\n        }\\n    });\\n}\\nfunction buildPBKDF2ConfigsUI(d, obj, mapping, config) {\\n    // obj.type.includes(\\\"PBKDF2\\\")\\n    let keySizes = Object.keys(mapping[\\\"keySize\\\"]);\\n    d.push({\\n        title: '““””<strong><font color=\\\"black\\\">KEY长度</font></strong>',\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"scroll_button\\\"\\n    })\\n    for (let keySize of keySizes) {\\n        d.push({\\n            title: keySize == config.keySize.get() ? \\\"‘‘\\\" + keySize + \\\"’’\\\" : keySize,\\n            url: $(\\\"#noLoading#\\\").lazyRule((keySize, config) => {\\n                    config.keySize.set(keySize)\\n                    refreshPage(false);\\n                    return \\\"hiker://empty\\\"\\n            }, keySize, config),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    d.push({\\n        col_type: \\\"blank_block\\\"\\n    })\\n    d.push({\\n        title: \\\"随机 salt\\\",\\n        desc: \\\"盐 salt，建议至少为 8 字节，且要为随机数。\\\",\\n        col_type: 'input',\\n        extra: {\\n            titleVisible: false,\\n            height: -1,\\n            type: \\\"textarea\\\",\\n            defaultValue: config.salt.get(),\\n            onChange: $.toString((config) => {\\n                config.salt.set(input)\\n            }, config)\\n        }\\n    });\\n    d.push({\\n        title: \\\"迭代次数\\\",\\n        desc: \\\"迭代次数(选填)，建议至少为 50000 次，除非有严格的性能要求。\\\",\\n        col_type: 'input',\\n        extra: {\\n            titleVisible: false,\\n            height: -1,\\n            type: \\\"textarea\\\",\\n            defaultValue: config.iterations.get(),\\n            onChange: $.toString((config) => {\\n                config.iterations.set(input)\\n            }, config)\\n        }\\n    });\\n}\\n$.exports.buildHashUi = buildHashUi\"},{\"col_type\":\"text_1\",\"name\":\"Hash算法\",\"path\":\"hashalgorithm\",\"rule\":\"js:\\neval(getCryptoJS());\\nlet HashAlgorithm = {\\n\\tMapping: {\\n\\t\\thashType: {\\n\\t\\t\\t\\\"MD5\\\": CryptoJS.MD5,\\n\\t\\t\\t\\\"SHA-1\\\": CryptoJS.SHA1,\\n\\t\\t\\t\\\"\\\": CryptoJS.,\\n\\t\\t\\t\\\"\\\": CryptoJS.,\\n\\t\\t\\t\\\"\\\": CryptoJS.,\\n\\t\\t\\t\\\"\\\": CryptoJS.,\\n\\t\\t\\t\\\"HMAC-MD5\\\": CryptoJS.HmacMD5,\\n\\t\\t\\t\\\"HMAC-SHA1\\\": CryptoJS.HmacSHA1,\\n\\t\\t\\t\\\"HMAC-SHA224\\\": CryptoJS.HmacSHA224, \\n\\t\\t\\t\\\"HMAC-SHA256\\\": CryptoJS.HmacSHA256, \\n\\t\\t\\t\\\"HMAC-SHA384\\\": CryptoJS.HmacSHA384, \\n\\t\\t\\t\\\"HMAC-SHA512\\\": CryptoJS.HmacSHA512,\\n\\t\\t\\t\\\"PBKDF2\\\": CryptoJS.PBKDF2,\\n\\t\\t},\\n        keySize: {\\n            \\\"128位\\\": 128,\\n            \\\"256位\\\": 256,\\n            \\\"512位\\\": 512,\\n        },\\n\\t},\\n\\tconfig: {\\n        type: {\\n            key: \\\"hash_type\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"MD5\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n        key: {\\n            key: \\\"hash_hmac_key\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n        },\\n\\t\\ttext: {\\n\\t\\t\\tkey: \\\"hash_text\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n\\t\\t},\\n\\t\\tresultText: {\\n\\t\\t\\tkey: \\\"hash_result_text\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n\\t\\t},\\n        keySize: {\\n            key: \\\"hash_key_size\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"128位\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n\\n        },\\n        salt: {\\n            key: \\\"hash_salt\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n\\n        },\\n        iterations: {\\n            key: \\\"hash_iterations\\\",\\n            get: function () {\\n                return getVar(this.key, \\\"\\\");\\n            },\\n            set: function (newValue) {\\n                putVar(this.key, newValue);\\n            }\\n\\n        },\\n\\t},\\n    onClose: function() {\\n        let configKeys = Object.keys(this.config);\\n        for(let confKey of configKeys) {\\n            let key = this.config[confKey].key;\\n            clearVar(key);\\n        }\\n    },\\n\\thash: function () {\\n\\t\\tlet text = this.config.text.get();\\n\\t\\tlet type = this.config.type.get();\\n\\t\\tlet hash = {};\\n\\t\\tif (text) {\\n            if (type.includes(\\\"HMAC\\\")) {\\n                // HMAC-xxx\\n                let key = this.config.key.get();\\n                hash = this.Mapping.hashType[type](text, key)\\n            } else if (type.includes(\\\"PBKDF2\\\")) {\\n                // PBKDF2\\n                let keySize = this.Mapping.keySize[this.config.keySize.get()];\\n                let salt = this.config.salt.get();\\n                let iterations = this.config.iterations.get();\\n                if (!salt) {\\n                \\tthrow new Error(\\\"盐 salt 不能为空！\\\")\\n                }\\n                salt = CryptoJS.enc.Utf8.parse(salt)\\n                let options =  {\\n                \\t\\tkeySize: keySize / 32\\n                }\\n                if (iterations) {\\n                \\toptions.iterations = iterations;\\n                }\\n                hash = this.Mapping.hashType[type](text, salt, options)\\n            } else {\\n\\t\\t\\t\\thash = this.Mapping.hashType[type](text);\\n            }\\n\\t\\t\\t// 密文\\n\\t\\t\\tlet hashResult = hash.toString();\\n            // log(\\\"hash#hash_result: \\\" + hashResult)\\n            this.config.resultText.set(hashResult);\\n\\t\\t\\treturn hashResult;\\n\\t\\t} else {\\n            throw new Error(\\\"原文不能为空！\\\")\\n        }\\n\\t}\\n};\\n$.exports = HashAlgorithm\"},{\"col_type\":\"movie_3\",\"name\":\"兽音\",\"path\":\"roar\",\"rule\":\"js:\\nlet roar = {};\\nroar.encode = function(obj) {\\n    // log(\\\"[roar]obj.decText: \\\" + obj.decText)\\n    let encode = request('http://hi.pcmoe.net/bear.php', {\\n        headers: {\\n            'X-Token': '07B97AA644E8',\\n            'Origin': 'http://hi.pcmoe.net',\\n            'X-Requested-With': 'XMLHttpRequest',\\n            'User-Agent': 'Mozilla/5.0 (Linux; Android 10; Note9 Build/QKQ1.191222.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045614 Mobile Safari/537.36',\\n            'Content-type': 'application/x-www-form-urlencoded',\\n            'Referer': 'http://hi.pcmoe.net/roar.html'\\n        },\\n        body: 'mode=Roar&code=Encode&txt=' + obj.decText,\\n        method: 'POST'\\n    });\\n    // log(\\\"[roar]encode: \\\" + encode)\\n    return encode;\\n}\\nroar.decode = function(obj) {\\n    let decode = request('http://hi.pcmoe.net/bear.php', {\\n        headers: {\\n            'X-Token': '07B97AA644E8',\\n            'Origin': 'http://hi.pcmoe.net',\\n            'X-Requested-With': 'XMLHttpRequest',\\n            'User-Agent': 'Mozilla/5.0 (Linux; Android 10; Note9 Build/QKQ1.191222.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045614 Mobile Safari/537.36',\\n            'Content-type': 'application/x-www-form-urlencoded',\\n            'Referer': 'http://hi.pcmoe.net/roar.html'\\n        },\\n        body: 'mode=Roar&code=Decode&txt=' + obj.encText,\\n        method: 'POST'\\n    });\\n    return decode;\\n}\\n$.exports.roar = roar\"},{\"col_type\":\"movie_3\",\"name\":\"熊曰\",\"path\":\"bear\",\"rule\":\"js:\\nlet bear = {};\\nbear.encode = function(obj) {\\n    // log(\\\"[bear]obj.decText: \\\" + obj.decText)\\n    let encode = request('http://hi.pcmoe.net/bear.php', {\\n        headers: {\\n            'X-Token': '07B97AA644E8',\\n            'Origin': 'http://hi.pcmoe.net',\\n            'X-Requested-With': 'XMLHttpRequest',\\n            'User-Agent': 'Mozilla/5.0 (Linux; Android 10; Note9 Build/QKQ1.191222.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045614 Mobile Safari/537.36',\\n            'Content-type': 'application/x-www-form-urlencoded',\\n            'Referer': 'http://hi.pcmoe.net/bear.html'\\n        },\\n        body: 'mode=Bear&code=Encode&txt=' + obj.decText,\\n        method: 'POST'\\n    });\\n    // log(\\\"[bear]encode: \\\" + encode)\\n    return encode;\\n}\\nbear.decode = function(obj) {\\n    let decode = request('http://hi.pcmoe.net/bear.php', {\\n        headers: {\\n            'X-Token': '07B97AA644E8',\\n            'Origin': 'http://hi.pcmoe.net',\\n            'X-Requested-With': 'XMLHttpRequest',\\n            'User-Agent': 'Mozilla/5.0 (Linux; Android 10; Note9 Build/QKQ1.191222.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045614 Mobile Safari/537.36',\\n            'Content-type': 'application/x-www-form-urlencoded',\\n            'Referer': 'http://hi.pcmoe.net/bear.html'\\n        },\\n        body: 'mode=Bear&code=Decode&txt=' + obj.encText,\\n        method: 'POST'\\n    });\\n    return decode;\\n}\\n$.exports.bear = bear\"}]","icon":""},{"last_chapter_rule":"","title":"测试Url","author":"","version":3,"url":"hiker://empty","col_type":"text_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\n\neval(fetch(\"hiker://files/rules/js/hikerurl.js\"));\n\nd.push({\n    title: \"lazyRule+for\",\n    url: $().lazyRule(() => {\n        for (let i of []) {}\n        return \"toast://p000\"\n    }),\n    col_type: \"text_1\"\n})\nd.push({\n    title: \"lazyRule+普通规则\",\n    url: $(\"https://haikuoshijie.cn/\", \"Html\").lazyRule(() => {\n        input.join(\"\")\n        return $().rule(() => {});\n    }),\n    col_type: \"text_1\"\n})\nd.push({\n    desc: \"100\",\n    col_type: \"x5_webview_single\"\n})\nd.push({\n    title: \"x5Rule\",\n    url: $(\"hiker://empty#noLoading#\").x5Rule((x, y) => {\n\n    }),\n    col_type: \"text_1\"\n})\nd.push({\n    title: \"x5Rule1\",\n    url: $().x5Rule((x, y) => {\n        try {\n            eval(fy_bridge_app.fetch(\"hiker://files/rules/js/hikerurl.js\"))\n            $().x5LazyRule((x) => {\n                setError(x);\n                return \"toast://测试下\"\n            }, \"x\")\n        } catch (e) {\n            alert(e)\n        }\n    }),\n    col_type: \"text_1\"\n})\nd.push({\n    title: \"x5Rule复制进网页\",\n    url: $(\"\").x5Rule((Text, url) => {\n        let text = document.createElement('textarea')\n        document.body.appendChild(text)\n        text.value = Text\n        text.select()\n        document.execCommand('Copy')\n        document.body.removeChild(text)\n        window.location = url\n    }, \"dk6l\", \"https://m.baidu.com\"),\n    col_type: \"text_1\"\n})\n\nfunction a() {\n    setError(\"x\")\n}\nd.push({\n    title: \"lazyRule+编辑页\",\n    url: $(\"#noLoading#\").lazyRule((x, y) => {\n        return \"editFile://hiker://files/rules/js/NewPlanConfigFile.js\"\n    }),\n    col_type: \"text_1\"\n})\nd.push({\n    title: \"rule\",\n    url: $().rule(d => setResult(d), [{\n        title: \"1\",\n        desc: \"2\",\n        img: \"\",\n        col_type: \"text_1\"\n    }]),\n    col_type: \"text_1\"\n})\n\nd.push({\n    title: \"input+confirm\",\n    url: $(\"///000///\", \"输入密码\").input(_ => {\n        /*return $(\"确认密码\").confirm(_=>{\n           return \"toast://\"+_;\n        },input);*/\n\n        return $().lazyRule(() => {\n            setError(0)\n        })\n    }),\n    col_type: \"text_1\"\n})\nd.push({\n    title: \"toString\",\n    url: $(\"#noLoading#\").lazyRule(_ => {\n        setError($.toString(function(index) {\n            setError(index);\n        }, 1));\n    }),\n    col_type: \"text_1\"\n})\nd.push({\n    title: \"stringify\",\n    url: $(\"#noLoading#\").lazyRule(_ => {\n        setError($.stringify({\n            a: 1,\n            b: 2,\n            c: function(key) {\n                setError(key)\n            }\n        }));\n    }),\n    col_type: \"text_1\"\n})\nd.push({\n    title: \"x5Lazy\",\n    url: $().x5Lazy(_ => {\n        return \"toast://\"+(typeof window);\n    }),\n    col_type: \"text_1\"\n})\nd.push({\n    title: \"select\",\n    url: $([0,1,2,3,4],1).select(_ => {\n        return \"toast://你选择了\"+input\n    }),\n    col_type: \"text_1\"\n})\nd.push({\n    title: \"lazy+select\",\n    url: $().lazyRule(()=>$([0,1,2,3,4],1).select(_ => \"toast://\"+input)),\n    col_type: \"text_1\"\n})\nsetResult(d)","searchFind":"","search_url":"","titleColor":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"测试一\",\"path\":\"1\",\"rule\":\"js:\\n$.exports=function(){\\n    setError(k);\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"测试二\",\"path\":\"2\",\"rule\":\"js:\\n$.exports={\\n    mySetError(my){setError(k)}\\n}\"}]","icon":""},{"last_chapter_rule":"","title":"哔哩UP主Ⓡ","author":"1606142&Rx","version":19,"url":"https://api.bilibili.com/x/space/arc/search?mid=fyAll&ps=30&tid=0&keyword=&jsonp=jsonp&pn=fypage&order=pubdate","col_type":"movie_1_left_pic","class_name":"北城&张大仙&水一&禽兽狙&流影言志&千雅折一湖&凉风&木鱼水心&电影最TOP&胥渡吧&何止电影&虫哥说电影&刘老师说电影&人人短视频精选&动画学术趴&动画少数派&哔哩哔哩记录片&猛犸君侯&央视记录&纪录片之家字幕组","class_url":"103256880&1935882&1950209&65534411&31399640&488009671&14110780&927587&17819768&8112659&270355850&29296192&79061224&311117856&97471052&177622092&7584632&13374324&72209046&22121599","area_name":"毕导THU&收号哥&韩涵&罗翔说刑法&蜡笔和小勋&一条正弦&李永乐老师官方&坤哥物理&大宽物理&猴博士爱讲课&3BLUE1BROWN&美丽科学-BOS&真·凤舞九天&人类行为图鉴V&兔叭咯&小圆脸PAPRIKA&吃花椒的喵酱","area_url":"254463269&389650893&298645914&517327498&250111460&11733609&9458053&11265345&13407784&67907025&88461692&43646124&865267&535019206&7788379&239854589&2026561407","sort_name":"李子柒&秋叶-PPT&秋叶-EXCEL&Oeasy-Office&星月兮-HTML5&doyoudo-PR&卡敏与阿超-PR&左手PLUS-摄影&折纸的白叔&芳斯塔芙&表象的本质&混乱博物馆&飞碟说&老撕来撕思维研究室&回形针PAPERCLIP&妈咪说MOMMYTALK","year_name":"五条人&福禄寿&老番茄&某幻君&花少北&老师好我叫何同学&科技美学&手工耿&华农兄弟&美食台&美食作家王刚R&小高姐的魔法调料&徐大SAO&就是气气&老东北美食&欣小萌&咬人猫&吃素的狮子&A路人&谭乔","sort_url":"19577966&335567719&480423911&2884629&17638509&20503549&596859&20166755&2929582&72270557&363584502&97177641&5581898&38696383&258150656&223146252","year_url":"29686555&479695665&546195&1577804&2206456&163637592&3766866&280793434&250858633&19750237&290526283&216156027&390461123&13807284&514273130&8366990&116683&808171&391679&330415548","find_rule":"js: \nvar json = {};\neval('json=' + getResCode());\nvar res = {};\nvar d = [];\nfor (var i = 0; i < json.data.list.vlist.length; i++)\n{\n var r = {};\n var j = json.data.list.vlist[i];\n var t = Number(j.created)*1000;\n \n //时间戳转换方法 date:时间戳数字\nvar date = new Date(t);\nvar YY = date.getFullYear() + '-'; \nvar MM = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-'; \nvar DD = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()); \nvar hh = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':'; \nvar mm = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':'; var ss = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()); \n/*——————————\nvar time = YY + MM + DD +' '+hh + mm + ss;\n——————————*/\nvar time = MM + DD;\n\nif (j.play>10000)\n    var play = (j.play/10000).toFixed(1)+'万';\nelse\n    var play = j.play;\n\n\n r.pic_url ='https:' + j.pic;\n r.url ='https://api.bilibili.com/x/web-interface/view/detail?aid=&bvid=' + j.bvid;\n r.title = j.title;\n r.desc = '时长：' + j.length + '  播放量：' + play + '  日期：' + time;\n if (j.length!=\"00:00\"){d.push(r)};\n}\nres.data = d;\nsetHomeResult(res)","searchFind":"js:\ntry{\nvar res = {};var d = [];var xs=JSON.parse(getResCode().split('video\",\"data\":')[1].split('}]')[0]+'}]');\nif(MY_URL.split('page=')[1]=='1&pagesize=20'){\n  try{\n  var w=\nJSON.parse(fetch('https://api.bilibili.com/x/web-interface/search/type?keyword='+MY_URL.split('keyword=')[1].split('&')[0]+'&page=1&search_type=bili_user&order=totalrank&pagesize=20',{})).data.result;\n    for(ii=0;ii<w.length&&ii<2;ii++){\n      d.push({\n      title:'up：'+w[ii].uname,\n      img:'https:'+w[ii].upic,\n      desc:'关注：'+w[ii].fans,\n      content:'视频数：'+w[ii].videos,\n      url:\n'https://api.bilibili.com/x/space/arc/search?mid='+w[ii].mid+'&ps=30&tid=0&keyword=&jsonp=jsonp&pn=fypage&order=pubdate'+getVar('ua'),\n         });\n    }\n  }catch(e){\n      d.push({\n      title:'‘‘找不到你想要的啊，要不换个关键词？’’',\n      col_type:'text_center_1'\n      });\n  }\n}\nres.data = d;\nsetSearchResult(res);}catch(e){}","search_url":"https://api.bilibili.com/x/web-interface/search/all/v2?keyword=**&page=fypage&pagesize=20;get;utf-8;{User-Agent@Mozilla/5.0 (Linux；； Android 7.0；； wv lite baiduboxapp) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.96 Mobile Safari/537.36 T7/10.3 SearchCraft/2.6.2 (Baidu；； P1 7.0)}","group":"#⃣️工具","detail_col_type":"movie_3","detail_find_rule":"js:\nvar res={}; var d=[];\nvar bangumi = getResCode();\nvar json=JSON.parse(bangumi);\nvar v=json.data.View; var p=v.pages;\nvar tags = fetch(\"hiker://files/cache/bili.txt\",{});\nif (Number(tags)>6){\n    var tags = 1;\n}\nif (Number(tags)==5){\nvar setting = `@lazyRule=.js:writeFile('hiker://files/cache/bili.txt',input);refreshPage();'toast://恭喜你开启隐藏页面'`;\n}else{\nvar setting = `@lazyRule=.js:writeFile('hiker://files/cache/bili.txt',input);refreshPage();'toast://什么也没有呀(>﹏<)再试试吧😜'`;}\n\n/*画质 116 80 64 31 16*/\n\n\n//获取原网页链接\nvar purl = 'https://www.bilibili.com/video/'+v.bvid;\n\n//萤火虫解析方法\nvar lazy5 = `@lazyRule=.js:var cookies =fetch('https://bilibili.syyhc.com/',{method:'GET',withHeaders:true});\\\neval('json=' + cookies);\\\nvar csrf_token = parseDom(json.body,'body&&.form-wrap&&Html').split('hidden\" value=\"')[1].split('\">')[0];\\\nvar cookie = 'session=' + JSON.stringify(json.headers).split('session=')[1].split(';')[0];\\\nvar html = fetch('https://bilibili.syyhc.com/parser',{headers:{'Cookie':cookie},body:'url='+input+'&csrf_token='+csrf_token,method:'POST'});\\\nvar url = parseDom(html,'body&&.video-result&&source&&src');\\\nurl!=''?url:input`;\n\n//简介\nd.push({\n    title: v.title,\n    desc: '描述: '+v.desc+'　类型: '+v.tname,\n    url: Number(tags)+1+setting,\n    img: v.pic,\n    col_type: 'movie_1_vertical_pic'\n    });\n\n\n\n\n//播放设置\ntry{\n    for (var i = 0; i <p.length; i++) {\n    var k = i+1;\n    var title = p[i].part;\n    //1080p直链\n    var lazy1 =\n'https://api.bilibili.com/x/player/playurl?avid='+v.aid+'&cid='+p[i].cid+'&qn=80&type=&otype=json&appkey=84956560bc028eb7'+getVar(\"key\")+'&mid='+v.mid+`@lazyRule=body&&Html.js:var json ={};eval('json='+input);var durll=json.data.durl;durll[0].url+';{User-Agent@Mozilla/5.0 (Windows NT 10.0\\\\；\\\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36＆＆＆＆Referer@https://www.bilibili.com/video}'`;\n\n     //720p直链\n     var lazy2 =\n'https://api.bilibili.com/x/player/playurl?avid='+v.aid+'&cid='+p[i].cid+'&qn=64&type=&otype=json&appkey=84956560bc028eb7'+getVar(\"key\")+'&mid='+v.mid+`@lazyRule=body&&Html.js:var json ={};eval('json='+input);var durll=json.data.durl;durll[0].url+';{User-Agent@Mozilla/5.0 (Windows NT 10.0\\\\；\\\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36＆＆＆＆Referer@https://www.bilibili.com/video}'`;\n\n     //480p直链\n     var lazy3 =\n'https://api.bilibili.com/x/player/playurl?avid='+v.aid+'&cid='+p[i].cid+'&qn=32&type=&otype=json&appkey=84956560bc028eb7'+getVar(\"key\")+'&mid='+v.mid+`@lazyRule=body&&Html.js:var json ={};eval('json='+input);var durll=json.data.durl;durll[0].url+';{User-Agent@Mozilla/5.0 (Windows NT 10.0\\\\；\\\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36＆＆＆＆Referer@https://www.bilibili.com/video}'`;\n\n     //360p直链\n     var lazy4 =\n'https://api.bilibili.com/x/player/playurl?avid='+v.aid+'&cid='+p[i].cid+'&qn=16&type=&otype=json&appkey=84956560bc028eb7'+getVar(\"key\")+'&mid='+v.mid+`@lazyRule=body&&Html.js:var json ={};eval('json='+input);var durll=json.data.durl;durll[0].url+';{User-Agent@Mozilla/5.0 (Windows NT 10.0\\\\；\\\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36＆＆＆＆Referer@https://www.bilibili.com/video}'`;\n      var tourl = v.videos!=1?purl+'?p='+p[i].page+lazy5:purl+lazy5;\n     //直链播放\n     d.push({\n          title:tags==6?'YHC»'+title:title,\n          url: tags==6?tourl:'toast://下方选择清晰度播放',\n          col_type:'text_center_1'\n          });\n     d.push({\n          title:'1080P',\n          url: lazy1,\n          col_type:'text_4'\n          });\n     d.push({\n          title:'720P',\n          url: lazy2,\n          col_type:'text_4'\n          });\n     d.push({\n          title:'480P',\n          url: lazy3,\n          col_type:'text_4'\n          });\n     d.push({\n          title:'360P',\n          url: lazy4,\n          col_type:'text_4'\n          });\n}\n}catch(e){ }\n\nres.data=d; setHomeResult(res);","sdetail_col_type":"movie_1_left_pic","sdetail_find_rule":"js: \nvar json = {};\neval('json=' + getResCode());\nvar res = {};\nvar d = [];\nfor (var i = 0; i < json.data.list.vlist.length; i++)\n{\n var r = {};\n var j = json.data.list.vlist[i];\n var t = Number(j.created)*1000;\n \n //时间戳转换方法 date:时间戳数字\nvar date = new Date(t);\nvar YY = date.getFullYear() + '-'; \nvar MM = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-'; \nvar DD = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()); \nvar hh = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':'; \nvar mm = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':'; var ss = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()); \n/*——————————\nvar time = YY + MM + DD +' '+hh + mm + ss;\n——————————*/\nvar time = MM + DD;\n\nif (j.play>10000)\n    var play = (j.play/10000).toFixed(1)+'万';\nelse\n    var play = j.play;\n\n\n r.pic_url ='https:' + j.pic;\n r.url =$('https://api.bilibili.com/x/web-interface/view/detail?aid=&bvid=' + j.bvid).rule(()=>{var res={}; var d=[];\nvar bangumi = getResCode();\nvar json=JSON.parse(bangumi);\nvar v=json.data.View; var p=v.pages;\nvar tags = fetch(\"hiker://files/cache/bili.txt\",{});\nif (Number(tags)>6){\n    var tags = 1;\n}\nif (Number(tags)==5){\nvar setting = `@lazyRule=.js:writeFile('hiker://files/cache/bili.txt',input);refreshPage();'toast://恭喜你开启隐藏页面'`;\n}else{\nvar setting = `@lazyRule=.js:writeFile('hiker://files/cache/bili.txt',input);refreshPage();'toast://什么也没有呀(>﹏<)再试试吧😜'`;}\n\n\n\n//获取原网页链接\nvar purl = 'https://www.bilibili.com/video/'+v.bvid;\n\n\n\n//简介\nd.push({\n    title: v.title,\n    desc: '描述: '+v.desc+'　类型: '+v.tname,\n    url: Number(tags)+1+setting,\n    img: v.pic,\n    col_type: 'movie_1_vertical_pic'\n    });\n\n\n\n\n//播放设置\ntry{\n    for (var i = 0; i <p.length; i++) {\n    var k = i+1;\n    var title = p[i].part;\n\n    //1080p直链\n    var lazy1 =\n'https://api.bilibili.com/x/player/playurl?avid='+v.aid+'&cid='+p[i].cid+'&qn=80&type=&otype=json&appkey=84956560bc028eb7'+getVar(\"key\")+'&mid='+v.mid+`@lazyRule=body&&Html.js:var json ={};eval('json='+input);var durll=json.data.durl;durll[0].url+';{User-Agent@Mozilla/5.0 (Windows NT 10.0\\\\；\\\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36＆＆＆＆Referer@https://www.bilibili.com/video}'`;\n\n     //720p直链\n     var lazy2 =\n'https://api.bilibili.com/x/player/playurl?avid='+v.aid+'&cid='+p[i].cid+'&qn=64&type=&otype=json&appkey=84956560bc028eb7'+getVar(\"key\")+'&mid='+v.mid+`@lazyRule=body&&Html.js:var json ={};eval('json='+input);var durll=json.data.durl;durll[0].url+';{User-Agent@Mozilla/5.0 (Windows NT 10.0\\\\；\\\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36＆＆＆＆Referer@https://www.bilibili.com/video}'`;\n\n     //480p直链\n     var lazy3 =\n'https://api.bilibili.com/x/player/playurl?avid='+v.aid+'&cid='+p[i].cid+'&qn=32&type=&otype=json&appkey=84956560bc028eb7'+getVar(\"key\")+'&mid='+v.mid+`@lazyRule=body&&Html.js:var json ={};eval('json='+input);var durll=json.data.durl;durll[0].url+';{User-Agent@Mozilla/5.0 (Windows NT 10.0\\\\；\\\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36＆＆＆＆Referer@https://www.bilibili.com/video}'`;\n\n     //360p直链\n     var lazy4 =\n'https://api.bilibili.com/x/player/playurl?avid='+v.aid+'&cid='+p[i].cid+'&qn=16&type=&otype=json&appkey=84956560bc028eb7'+getVar(\"key\")+'&mid='+v.mid+`@lazyRule=body&&Html.js:var json ={};eval('json='+input);var durll=json.data.durl;durll[0].url+';{User-Agent@Mozilla/5.0 (Windows NT 10.0\\\\；\\\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36＆＆＆＆Referer@https://www.bilibili.com/video}'`;\n\n//萤火虫解析方法\nvar lazy5 = `@lazyRule=.js:var cookies =fetch('https://bilibili.syyhc.com/',{method:'GET',withHeaders:true});\\\neval('json=' + cookies);\\\nvar csrf_token = parseDom(json.body,'body&&.form-wrap&&Html').split('hidden\" value=\"')[1].split('\">')[0];\\\nvar cookie = 'session=' + JSON.stringify(json.headers).split('session=')[1].split(';')[0];\\\nvar html = fetch('https://bilibili.syyhc.com/parser',{headers:{'Cookie':cookie},body:'url='+input+'&csrf_token='+csrf_token,method:'POST'});\\\nvar url = parseDom(html,'body&&.video-result&&source&&src');\\\nurl!=''?url:input`;\n     var tourl = v.videos!=1?purl+'?p='+p[i].page+lazy5:purl+lazy5;\n     //直链播放\n     d.push({\n          title:tags==6?'YHC»'+title:title,\n          url: tags==6?tourl:'toast://下方选择清晰度播放',\n          col_type:'text_center_1'\n          });\n     d.push({\n          title:'1080P',\n          url: lazy1,\n          col_type:'text_4'\n          });\n     d.push({\n          title:'720P',\n          url: lazy2,\n          col_type:'text_4'\n          });\n     d.push({\n          title:'480P',\n          url: lazy3,\n          col_type:'text_4'\n          });\n     d.push({\n          title:'360P',\n          url: lazy4,\n          col_type:'text_4'\n          });\n}\n}catch(e){ }\n\nres.data=d; setHomeResult(res);});\n r.title = j.title;\n r.desc = '时长：' + j.length + '  播放量：' + play + '  日期：' + time;\n if (j.length!=\"00:00\"){d.push(r)};\n}\nres.data = d;\nsetSearchResult(res)","ua":"mobile","preRule":"putVar2('ua',';get;utf-8;{User-Agent@Mozilla/5.0 (Linux；； Android 7.0；； wv lite baiduboxapp) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.96 Mobile Safari/537.36 T7/10.3 SearchCraft/2.6.2 (Baidu；； P1 7.0)}');\n\nputVar('key','&access_key=3204752264b2c01ef12f6c451b621331');","pages":"[]","icon":""},{"last_chapter_rule":"","title":"测试JAVA","author":"","version":4,"url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nrequireDownload('https://nick88.coding.net/p/moveres/d/res/git/raw/master/classes.dex', 'hiker://files/cache/classes.dex');\nvar test = loadJavaClass('hiker://files/cache/classes.dex', 'com.example.hikerview.service.Bde4');\nlog(test.getSearch('我的'));\nd.push({\n    title: \"来自java：\" + test.getSearch('我的'),\n    url: \"1\",\n    col_type: \"text_1\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\nsetResult(d);","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","icon":""},{"last_chapter_rule":"","title":"本地漫画管理","author":"@LoyDgIk","version":0,"type":"tool","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n(function() {\n    var layout = [];\n    let {\n        getDirectoryPath\n    } = $.require(\"hiker://page/文件工具\");\n    let tag = getDirectoryPath(\"/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/漫画\")||[];\n    if (tag.length === 0) {\n        setResult([{\n            title:\"““””\"+\"一本漫画也没有\".big(),\n            url:\"hiker://empty\",\n            col_type:\"text_center_1\"\n        }]);\n        return;\n    }\n    let tgnum = getMyVar(\".tgnum\", \"0\");\n    for (let i in tag) {\n        let it = tag[i];\n        layout.push({\n            title: tgnum === i ? \"““\" + it.name + \"””\" : it.name,\n            col_type: \"scroll_button\",\n            url: $(\"#noLoading#\").lazyRule(i => {\n                putMyVar(\".tgnum\", i);\n                refreshPage();\n                return \"hiker://empty\";\n            }, i)\n        });\n    }\n    let path = tag[tgnum].path;\n    let mhlist = getDirectoryPath(path);\n    for (let item of mhlist) {\n        let pic = fileExist(\"file://\" + item.path + \"/home.jpg\") ? item.path + \"/home.jpg\" : \"\";\n        layout.push({\n            title: item.name,\n            pic_url: pic,\n            url: $(\"#noLoading#\").lazyRule((path) => {\n                if (fileExist(\"file://\" + path + \"/single.json\")) {\n                    let getFilePath = $.require(\"hiker://page/文件工具\").getFilePath;\n                    let filelist = getFilePath(path);\n                    let piclist = []\n                    for (let i = 0; i < filelist.length-2; i++) {\n                        piclist.push(\"file://\" + path+\"/\"+i+\".jpg\");\n                    }\n                    return \"pics://\" + piclist.join(\"&&\");\n                } else {\n                    return \"hiker://page/漫画查看\";\n                }\n            }, String(item.path)),\n            extra: {\n                path: item.path\n            }\n        });\n    }\n    setResult(layout);\n})()","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"文件工具\",\"path\":\"文件工具\",\"rule\":\"evalPrivateJS(\\\"kw7rMsAxiyVpIfJLNZjti9b+DmuGHsh2rD4b1RFFBnqasJJbqURIbtdl0/Hj/nV1Uy456wTyJ+/ldyWo0ZF58I5cxAc0Hem95uhDXTkaphXvSWSjH+IWv1bMq/rjd4zQsARBdQ37LgFUg4JapLlQWgdoC5x5k2Vy0OAaOUoKXOtZ9nhWhYVVbB8OZ8Cql+4dk3HSiBcqfdv0FityS1xeN62+bOG7LSUvjKzGsSgd6Dv0xlAIgiiYk/HEIFqBE2SJMF5wtORhxhNKlZgVXEdoRSSxNDsrs1eRP0c+3rRW+qo5i/CcVFyvzjtdeDYCzhxP53LaQvoGWf7VTqDyvEG7jv1VoxB03WHoSMmQG2DzHulsLNC+qvaX+5wk4XOc/hfz/lNzBCWGaTzHgTVpsQQrgp+0/pAHFXpA5Uq2F4xLcAGQKwlqqvVMN0xq6JvszwMtiaDN8A0rmklbUG0mTK1zN1uPjszpxPSGWX3h2xMceQpNllXRBh46nFI/LbgsU9AiRFOgTb18GwuOO8PUtHxA+RNO+ce+IkZ2Y3vBp8Trk1lIJMhRtFyqTCAoKRgxB/q96NjwV9ii13CwqH29La0iOB4K/xGPRcnv4Am86nOWnyJ/Av3jKOlc1NcCd0pGN3L1W95d4Wk5BRYxAorm7DGCT3HvG0NBOjK8LNOLTUfegS4r66I9pSyhOsW3fHAoC1gq1WXYBcnCRTmw6tJGM2QmIFqCI4KFnl6ekURtq1pIJdbnBZ5QPV2/B+4oafn5QZnPle80sf6UQAjvM2nd6g8K5mmm6XIJHlq/yQmnerYthe0/leepBPf8OKalHPxXIl7kAxPAGWseR1GiHdxFTvQvJO0NoOUl0hwTKOwwtySEw+PhNS9Tkh8PHW44vl888hGv6pq4zD8IWF0uK3RPZ9l522kurBqVhq8ukgsFRfi4ZUnynF0Jv48bPWPplbUFhBFhIMXIwycRC+Lmvzo+VVgk8GRaeJmbs6RY/BRY0IaYNMbAdcAUDLifdpw8fZcFz+azeha3YmsBeMqdri4/XaImcYyLXXdYLqYrcMwD9DXw26hbVXbqiKUVjJcVn6/sQcTwnML0+v4MxP5OpGKdbAoePDDpwAKM/xjh2frPA1g+e31OqYtLPvGE3/vGEgg2CmkzOtFdh92bqV1nH5bZWZrvUm/l8ZXCLy9SYzbvAxmpePscjZl80TNT8kK0MpqqPHt+c5G1TSe+mB1A146Lzq2Wf9VEYx0IH+tNIJfgJfCnECBUVqr0d6ZG29Z6VVoL3OEB9Pm3xcfIe2AYNNADLOnIijBF4AxOVU0j9w9Gw3sJxIGgJEvbQBD2jEe80/HJmGc08ihYkF9JNQPNS6R1u40ljX714jKNMcdMwq+9dZfS8tMQwm4O41/Z1oqAxXh21IBDVyw7qLubB/Qi+NKHg+gLhwC4QT+ubVfZPyT4MDumI2QenGtSB91KdyS80tDpSwTdmAEb8c+d4jKky3hbJZ3c/Hp09Mws0VIQp6X5ASEPOTvGlNITOO76kkJuzQk48FyAxDYxc7H/d/96bzXzPcY5zMpz007MdpjGwK3I/fhRUOa6WMiNxPjCOQBwYKJ1IbFCS1uBa7OlmGIBgMRcGxy+NmfF9TC3nsDHl+ZR6bhNaQV/Ax99W7/WloIUuShn0My35OWWbROlDwnz5RQFLPLs7RRzhqQltxdbhWxfk8QKvIhwREwayBFMQmDytM03xIVYfLVYqot6q8qv2/jwxKqoX3euRYvU3OUbbLjXSCLzzKw5lJVQOnnqecrw6PRuuub09cxpzHsw8OuufKhBZ0EJADvxz0qCliDIiUTZ/g3jvSFrluoKsOJNMwXHQ7Hcvt9Lr2hAlk08eX9/hszgPgoG8dP92sKA9SK+/NHsqf13COumN7Ls81UFJffQNA8jMSc9T4FqpZV75XuIR8x73/mtHo8CcF4JxPzX4EL1Obh7y74N+zXqjfc6Wby8OHltypzHkxhIsITO9yye7r6RcQ4KreK2Os7oKYVByf7bHCi6KHzNDp8FC9gxqw1WnIOBHtqhVPUdrydWD8qLU+8hPLW6m5hRLBmBBTE4v/ICSg0vTTBYjAkHleayscqyz0pBunUoxHkJTl0Pu3Lq4Vtr2VlmhiZAwbWWj6fNM46EIa5JqQEETBFTDCYY172rU2qTmT/7\\\");\"},{\"col_type\":\"text_1\",\"name\":\"漫画查看\",\"path\":\"漫画查看\",\"rule\":\"js:\\nlet path = MY_PARAMS.path;\\nlet {\\n    getDirectoryPath\\n} = $.require(\\\"hiker://page/文件工具\\\");\\nvar layout = [];\\nlet mhlist = getDirectoryPath(path);\\n\\nfor (let item of mhlist) {\\n    log(item)\\n    layout.push({\\n        title: item.name,\\n        url: $().lazyRule((path) => {\\n            let getFilePath = $.require(\\\"hiker://page/文件工具\\\").getFilePath;\\n            let filelist = getFilePath(path);\\n            let piclist = filelist.map((item,i)=>\\\"file://\\\"+path+\\\"/\\\"+(i+1)+\\\".jpg\\\");\\n            return \\\"pics://\\\"+piclist.join(\\\"&&\\\");\\n        }, String(item.path))\\n    });\\n}\\nsetResult(layout);\"}]","icon":"https://lanmeiguojiang.com/tubiao/q/13.png"},{"last_chapter_rule":"","title":"海阔放映厅预告","author":"allstar&匿名","version":0,"type":"other","url":"hiker://empty","col_type":"text_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst d = [];\nconst programUrl = 'hiker://files/rules/Allstar/programlist.json'\nconst weekStr = ['日', '一', '二', '三', '四', '五', '六'];\n\nlet programListjson = JSON.parse(fetch(programUrl));\nlet programList = programListjson.data;\nlet toastMsg = programListjson.toastMsg;\nlet toastUrl = programListjson.toastUrl;\n\nconst zeroPadding = (num) => ('00' + num).slice(-2);\n\n// 取yyyy-mm-dd\nconst getYMD = (dtval) => {\n  let dt = new Date(dtval);\n  let y = dt.getFullYear();\n  let m = zeroPadding(dt.getMonth() + 1);\n  let d = zeroPadding(dt.getDate());\n  return (y + '-' + m + '-' + d);\n}\n\n// 取yyyy-mm-dd + 1\nconst getTomorrowYMD = (dt) => getYMD(dt.setDate(dt.getDate() + 1));\n\n// 生成放映时间信息(今日/今晚/明日/明晚/m.d(w)) hh:mm\nconst formatStreamingText = (programDateStr) => {\n  let todayYMD = getYMD(new Date());\n  let tomorrowYMD = getTomorrowYMD(new Date());\n  let dataYMD = getYMD(programDateStr);\n  let dataDate = new Date(programDateStr);\n\n  let dateStr;\n  let dataHours = dataDate.getHours();\n  let dataMinutes = dataDate.getMinutes();\n\n  if (todayYMD === dataYMD) {\n    if (dataHours > 17)\n      dateStr = '今晚';\n    else\n      dateStr = '今日';\n  } else if (tomorrowYMD === dataYMD) {\n    if (dataHours > 17)\n      dateStr = '明晚';\n    else\n      dateStr = '明日';\n  } else {\n    dateStr = zeroPadding(dataDate.getMonth() + 1) + '.' + zeroPadding(dataDate.getDate()) + '(' + weekStr[dataDate.getDay()] + ')';\n  }\n\n  return dateStr + '<font color=\"#ff8000\"> ' + zeroPadding(dataHours) + ':' + zeroPadding(dataMinutes) + ' </font>开播';\n};\n\n// 按时间排序\nprogramList.sort((a, b) => new Date(a.start).getTime() - new Date(b.start).getTime());\n\nprogramList.forEach((programObj, idx) => {\n  let todayYMD = getYMD(new Date());\n  let dataYMD = getYMD(programObj.start);\n\n  // 跳过历史记录\n  if (new Date(dataYMD).getTime() - new Date(todayYMD).getTime() < 0)\n    return;\n\n  d.push({\n    title: '‘‘’’<strong>' + programObj.title + '</strong>\\n' + formatStreamingText(programObj.start) + '\\n主播: ' + programObj.streamer,\n    desc: '‘‘’’' + programObj.desc,\n    pic_url: programObj.pic,\n    url: toastUrl,\n    col_type: d.length === 0 ? 'movie_1_vertical_pic_blur' : 'movie_1_vertical_pic'\n  });\n\n});\n\nif (d.length === 0) {\n  d.push({\n    title: '‘‘’’<strong>暂无内容</strong>',\n    col_type: 'text_center_1'\n  });\n}\n\n// 首条记录下方添加直播观看提示信息\nd.splice(1, 0, {\n  title: toastMsg,\n  url: 'toast://' + toastMsg,\n  col_type: 'text_center_1'\n});\n\nsetResult(d);","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"js:\nconst cacheInterval = 12; // 缓存更新间隔(h)\nconst remoteProgramPath = 'https://allstar.bj.bcebos.com/Live/programlist.json'; // 直播数据列表\nconst localProgramPath = 'hiker://files/rules/Allstar/programlist.json';\nconst programCacheTimePath = 'hiker://files/rules/Allstar/programlist.json.cache';\n\n// 读取远程文件并缓存\nconst reloadProgram = () => {\n  let programListjson = fetch(remoteProgramPath);\n  if (programListjson) {\n    writeFile(localProgramPath, programListjson);\n    writeFile(programCacheTimePath, new Date() + '')\n  }\n}\n\nif (!fetch(programCacheTimePath) || !fetch(localProgramPath)) {\n  reloadProgram();\n}\n\nlet cacheDate = new Date(fetch(programCacheTimePath));\nlet nowDate = new Date();\nlet timeDiff = nowDate.getTime() - cacheDate.getTime();\nif (timeDiff > cacheInterval * 60 * 60 * 1000) {\n  reloadProgram();\n}","pages":"[]","icon":"https://lanmeiguojiang.com/tubiao/movie/137.svg"},{"last_chapter_rule":"","title":"插件调用示例ᴰⁿ","author":"断念","version":3,"type":"tool","url":"hiker://empty##fyAll","col_type":"text_center_1","class_name":"站内片源&解析片源&其他","class_url":"https://www..com/index.php/vod/play/id/160057/sid/4/nid/1.html&https://www.6949.cc/vodplay/53214-1-1.html&https://www.gg6029.com/play/19213-3-0.html","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\n\nd.push({col_type: 'line_blank'});\n\n//双斜杠后文字为调用说明\n\n//复制下面代码，然后复制需要调用的项目url后面的代码\nrequire('https://gitea.com//Hiker/raw/m/v/Route.js');\n\n//调用解析选择代码===>\nd.push({\n    title: \"解析选择(无历史记录)\",\n    url: setupPages(\"设置\")\n})\nd.push({\n    title: \"解析选择(有历史记录)\",\n    url: setupPages(\"设置\", 1)\n})\n//<===\n\nd.push({col_type: 'line_blank'});\n\n//调用解析管理代码===>\nd.push({\n    title: \"解析管理(无历史记录)\",\n    url: setupPages(\"编辑\")\n})\nd.push({\n    title: \"解析管理(有历史记录)\",\n    url: setupPages(\"编辑\", 1)\n})\n//<===\n\nd.push({col_type: 'line_blank'});\n\n//输入框代码===>\nvar dfValue = getVar('免嗅调用测试');\nd.push({\n    title: \"‘‘’’<small>输入选集链接确认或刷新, 为空则使用分类中的地址\"\n})\nd.push({\n    url: \"refreshPage()\",\n    col_type: \"input\",\n    extra: {\n        onChange: \"putVar('免嗅调用测试', input)\",\n        defaultValue: dfValue\n    }\n});\n//<===\n\n//选集链接为二级页面对应集数链接，要自己取，这里不示范\nvar 选集链接 = MY_URL.split('##')[1];\n\nif(dfValue != ''){\n选集链接 = dfValue;\n}\n\n//调用免嗅代码===>\nd.push({\n    title: \"常规免嗅\",\n    url: playerParse(选集链接),\n    col_type: \"text_2\"\n});\nd.push({\n    title: \"网页免嗅\",\n    url: x5Parse(选集链接),\n    col_type: \"text_2\"\n})\n//<===\n\n//拦截后台嗅探无用链接，用addLanJie()代替\nsetResult(d);\n//addLanJie(d);","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","icon":""},{"last_chapter_rule":"","title":"本地资源管理","author":"@LoyDgIk","version":55,"type":"tool","url":"hiker://empty#增强版","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:$.require(\"hiker://page/Main.view\");","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"#f.File工具\",\"path\":\"File.js\",\"rule\":\"const File = java.io.File;\\nconst {\\n    Files,\\n    Paths,\\n    StandardCopyOption,\\n    StandardOpenOption\\n} = java.nio.file;\\nconst javaString = java.lang.String;\\nlet javaScope = new JavaImporter(java.io, java.lang, java.lang.reflect, java.util.Vector);\\n\\nfunction deleteFlies(fileName) {\\n    let file = new File(fileName);\\n    if (!file.exists()) {\\n        //log(\\\"删除文件失败：\\\" + fileName + \\\"文件不存在\\\");\\n        return false;\\n    } else {\\n        if (file.isFile()) {\\n            return deleteFile(fileName);\\n        } else {\\n            return deleteDirectory(fileName);\\n        }\\n\\n    }\\n\\n}\\n/**\\n * 删除单个文件\\n * \\n * @param fileName\\n *            被删除文件的文件名\\n * @return 单个文件删除成功返回true,否则返回false\\n */\\nfunction deleteFile(fileName) {\\n    let file = new File(fileName);\\n    if (file.isFile() && file.exists()) {\\n        file.delete();\\n        //log(\\\"删除单个文件\\\" + fileName + \\\"成功！\\\");\\n        return true;\\n    } else {\\n        //log(\\\"删除单个文件\\\" + fileName + \\\"失败！\\\");\\n        return false;\\n    }\\n\\n}\\n/**\\n * 删除目录（文件夹）以及目录下的文件\\n * \\n * @param dir\\n *            被删除目录的文件路径\\n * @return 目录删除成功返回true,否则返回false\\n */\\nfunction deleteDirectory(dir) {\\n    // 如果dir不以文件分隔符结尾，自动添加文件分隔符\\n    if (!dir.endsWith(File.separator)) {\\n        dir = dir + File.separator;\\n    }\\n    let dirFile = new File(dir);\\n    // 如果dir对应的文件不存在，或者不是一个目录，则退出\\n    if (!dirFile.exists() || !dirFile.isDirectory()) {\\n        //log(\\\"删除目录失败\\\" + dir + \\\"目录不存在！\\\");\\n        return false;\\n    }\\n    let flag = true;\\n    // 删除文件夹下的所有文件(包括子目录)\\n    let files = dirFile.listFiles();\\n    for (let i = 0; i < files.length; i++) {\\n        // 删除子文件\\n        if (files[i].isFile()) {\\n            flag = deleteFile(files[i].getAbsolutePath());\\n            if (!flag) {\\n                break;\\n            }\\n        } else { // 删除子目录\\n            flag = deleteDirectory(files[i].getAbsolutePath());\\n            if (!flag) {\\n                break;\\n            }\\n        }\\n    }\\n    if (!flag) {\\n        //log(\\\"删除目录失败\\\");\\n        return false;\\n    }\\n    // 删除当前目录\\n    if (dirFile.delete()) {\\n        //log(\\\"删除目录\\\" + dir + \\\"成功！\\\");\\n        return true;\\n    } else {\\n        //log(\\\"删除目录\\\" + dir + \\\"失败！\\\");\\n        return false;\\n    }\\n}\\n\\nfunction getFileTime(path) {\\n    let file = new File(path);\\n    let lastModified = file.lastModified();\\n    let date = new Date(lastModified);\\n    return date.getTime();\\n}\\n\\nfunction getName(path) {\\n    return new File(path).getName() + \\\"\\\";\\n}\\n\\nfunction getFilePath(path, type, expand) {\\n    type = type || \\\"file\\\";\\n    if (![\\\"file\\\", \\\"dir\\\"].includes(type)) throw new Error(\\\"类型错误\\\");\\n    let fileType = type === \\\"file\\\" ? \\\"isFile\\\" : \\\"isDirectory\\\";\\n    let file = new File(path);\\n    let array = file.listFiles() || [];\\n    let pathList = [];\\n    for (let i = 0; i < array.length; i++) {\\n        if (array[i][fileType]()) {\\n            pathList.push({\\n                name: array[i].getName() + \\\"\\\",\\n                path: array[i].getPath() + \\\"\\\"\\n            });\\n        }\\n    }\\n    if (expand) {\\n        pathList = pathList.filter(it => it.name.endsWith(expand));\\n    }\\n    return pathList;\\n}\\n\\nfunction renameFile(fromPath, name) {\\n    let fromFile = new File(fromPath);\\n    let toFile = new File(fromFile.getParent() + \\\"/\\\" + name);\\n    try {\\n        if (!fromFile.exists()) {\\n            return false;\\n        }\\n        if (toFile.exists()) {\\n            if (!deleteFlies(toPath)) {\\n                return false;\\n            }\\n        }\\n        Files.move(fromFile.toPath(), toFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\\n        return true;\\n    } catch (e) {\\n        log(e.toString());\\n        return false;\\n    }\\n}\\n\\nfunction moveFiles(fromPath, toPath) {\\n    let fromFile = new File(fromPath);\\n    let toFile = new File(toPath);\\n    try {\\n        if (!fromFile.exists()) {\\n            return false;\\n        }\\n        if (toFile.exists()) {\\n            if (!deleteFlies(toPath)) {\\n                return false;\\n            }\\n        }\\n        Files.move(fromFile.toPath(), toFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\\n        return true;\\n    } catch (e) {\\n        log(e.toString());\\n        return false;\\n    }\\n}\\n\\nfunction fileWrite(path, content) {\\n    writeFile(\\\"file://\\\" + path, content)\\n}\\n\\nfunction fileWriteAppend(path, content) {\\n    let file = new File(path);\\n    let paths = file.toPath();\\n    if (file.exists()) {\\n        Files.write(paths, new javaString(content).getBytes(), StandardOpenOption.APPEND);\\n    } else {\\n        writeFile(\\\"file://\\\" + path, content);\\n    }\\n}\\n\\nfunction getTotalSizeOfFilesInDir(file) {\\n    if (file.isFile()) {\\n        return file.length();\\n    }\\n    let children = file.listFiles();\\n    let total = 0;\\n    if (children != null) {\\n        for (let child of children) {\\n            total += getTotalSizeOfFilesInDir(child);\\n        }\\n    }\\n    return total;\\n}\\n\\nfunction getFileSize(filePath) {\\n    //Byte\\n    let size = getTotalSizeOfFilesInDir(new File(filePath));\\n    if (size < 0) {\\n        return null;\\n    }\\n    let unitForm = [\\\"Byte\\\", \\\"KB\\\", \\\"MB\\\", \\\"GB\\\", \\\"TB\\\"];\\n    for (let i = 0, len = unitForm.length; i < len; i++) {\\n        if (size > 1024) {\\n            size /= 1024;\\n            continue;\\n        } else {\\n            return Math.ceil(size) + unitForm[i];\\n        }\\n    }\\n    return \\\"ERROR:数值过大\\\";\\n}\\n//完整合并\\n/*\\nfunction fileCombine(filesInput, fileOut, extension, intercept) {\\n    with(javaScope) {\\n        const TMP_BUFFER_SIZE = 0x30000;\\n        const BUFFER_SIZE = 0x300000;\\n        //合并临时文件\\n        let inputFile = new File(filesInput);\\n        let tmpFile = new File(fileOut + \\\".tmp\\\");\\n        let tos = new BufferedOutputStream(new FileOutputStream(tmpFile));\\n        let inputFiles = inputFile.listFiles();\\n        let tbys = Array.newInstance(Byte.TYPE, TMP_BUFFER_SIZE);\\n        for (let file of inputFiles) {\\n            if (file.getName().endsWith(extension)) {\\n                let is = new FileInputStream(file);\\n                let len = 0;\\n                while ((len = is.read(tbys)) != -1) {\\n                    tos.write(tbys, 0, len);\\n                }\\n                is.close();\\n            }\\n        }\\n        tos.close();\\n        //规则替换规则;\\n        let outFile = new File(fileOut);\\n        if (typeof intercept === \\\"function\\\") {\\n            let tis = new FileInputStream(tmpFile);\\n            let os = new BufferedOutputStream(new FileOutputStream(outFile));\\n            let len = 0;\\n            let bys = Array.newInstance(Byte.TYPE, BUFFER_SIZE);\\n            while ((len = tis.read(bys)) != -1) {\\n                let nbys = intercept(new String(bys,0,len));\\n                os.write(nbys, 0, nbys.length);\\n            }\\n            tmpFile.delete();\\n            tis.close();\\n            os.close();\\n        } else {\\n            if (outFile.exists()) {\\n                outFile.delete();\\n            }\\n            tmpFile.renameTo(outFile);\\n        }\\n    }\\n}*/\\n//残\\nfunction fileRule(filesInput, fileOut, intercept) {\\n    with(javaScope) {\\n        const BUFFER_SIZE = 0x300000;\\n        let tmpFile = new File(filesInput);\\n        if(!(tmpFile.exists()&&tmpFile.isFile())){\\n            return false;\\n        }\\n        let outFile = new File(fileOut);\\n\\n        let tis = new FileInputStream(tmpFile);\\n        let os = new BufferedOutputStream(new FileOutputStream(outFile));\\n        let len = 0;\\n        let bys = Array.newInstance(Byte.TYPE, BUFFER_SIZE);\\n        while ((len = tis.read(bys)) != -1) {\\n            let nbys = intercept(new String(bys,0,len));\\n            os.write(nbys, 0, nbys.length);\\n        }\\n        tmpFile.delete();\\n        tis.close();\\n        os.close();\\n        return true;\\n    }\\n}\\n\\n$.exports = {\\n    getFileTime: (path) => getFileTime(path),\\n    getFilePath: (path, type, expand) => getFilePath(path, type, expand),\\n    deleteFlies: (path) => deleteFlies(path),\\n    renameFile: (path, name) => renameFile(path, name),\\n    moveFiles: (fromPath, toPath) => moveFiles(fromPath, toPath),\\n    fileWrite: (path, content) => fileWrite(path, content),\\n    fileWriteAppend: (path, content) => fileWriteAppend(path, content),\\n    getName: (path) => getName(path),\\n    getFileSize: (filePath) => getFileSize(filePath),\\n    fileRule: (filesInput, fileOut, intercept) => fileRule(filesInput, fileOut, intercept)\\n}\"},{\"col_type\":\"text_2\",\"name\":\"#v.下载列表-普通下载\",\"path\":\"download.view\",\"rule\":\"js:\\nconst viewConfig = Object.assign({\\n    chapterList: [],\\n    info: {},\\n    defaultView: \\\"0\\\"\\n}, MY_PARAMS);\\nviewConfig.info = Object.assign({\\n    ruleName: \\\"\\\",\\n    bookName: \\\"\\\",\\n    bookTopPic: \\\"\\\",\\n    parseCode: \\\"\\\",\\n    type: \\\"comic\\\",\\n}, viewConfig.info);\\nlet {\\n    chapterList,\\n    info,\\n    defaultView\\n} = viewConfig;\\nsetPageTitle(\\\"选择器|\\\" + info.bookName)\\n\\nconst File = $.require(\\\"hiker://page/File.js\\\");\\nconst Tool = $.require(\\\"hiker://page/Tool.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\nconst def_DoVi_Style = Config.def_DoVi_Style;\\nconst MY_ID = info.ruleName + \\\"//\\\" + info.bookName;\\n\\n\\nlet isStart = getMyVar(MY_ID + \\\":isStart\\\");\\nlet viewMode = getMyVar(MY_ID + \\\":viewMode\\\", defaultView);\\nlet isReverse = getMyVar(MY_ID + \\\":isReverse\\\", \\\"0\\\");\\nlet tagFilter = getMyVar(MY_ID + \\\":tagFilter\\\", Config.def_DoVi_Type);\\n\\naddListener(\\\"onClose\\\", $.toString((MY_ID) => {\\n    clearMyVar(MY_ID + \\\":loadingTeam\\\");\\n    clearMyVar(MY_ID + \\\":viewMode\\\");\\n    clearMyVar(MY_ID + \\\":completed\\\");\\n    clearMyVar(MY_ID + \\\":batchTeam\\\");\\n    clearMyVar(MY_ID + \\\":tagFilter\\\");\\n    clearMyVar(MY_ID + \\\":pageNum\\\");\\n}, MY_ID));\\n\\nlet layout = [];\\n\\nif (isStart === \\\"1\\\") {\\n    putMyVar(MY_ID + \\\":viewMode\\\", defaultView);\\n    viewMode = \\\"1\\\";\\n}\\n\\nlet backupChapterList = chapterList;\\nif (typeof chapterList === \\\"string\\\") {\\n    chapterList = JSON.parse(request(\\\"file://\\\" + chapterList) || \\\"[]\\\");\\n}\\nlet chapterAll = chapterList;\\nchapterList = chapterList.map((item, CID) => {\\n    item.CID = CID;\\n    return item;\\n});\\nlet pageNum = Number(getMyVar(MY_ID + \\\":pageNum\\\", \\\"1\\\"));\\nlet chapterChunk = [chapterList].concat(Tool.chunk(chapterList, Config.viewPageSize));\\nchapterList = chapterChunk[pageNum] || [];\\n\\nfunction setType() {\\n    let set = (tag, put) => {\\n        putMyVar(put, tag);\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    };\\n    layout.push({\\n        title: 0 == pageNum ? \\\"““””\\\" + (\\\"全部(\\\" + chapterAll.length + \\\")\\\").fontcolor(\\\"#23AD6F\\\") : \\\"全部(\\\" + chapterAll.length + \\\")\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule(set, 0, MY_ID + \\\":pageNum\\\"),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n    for (let i = 1; i < chapterChunk.length; i++) {\\n        let tagText = (i - 1) * Config.viewPageSize + \\\"-\\\" + ((i - 1) * Config.viewPageSize + chapterChunk[i].length);\\n        layout.push({\\n            title: i == pageNum ? \\\"““””\\\" + tagText.fontcolor(\\\"#23AD6F\\\") : tagText,\\n            url: $(\\\"#noLoading#\\\").lazyRule(set, i, MY_ID + \\\":pageNum\\\"),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    layout.push({\\n        col_type: \\\"blank_block\\\"\\n    });\\n    layout.push({\\n        title: tagFilter === \\\"0\\\" ? \\\"““””\\\" + \\\"全部\\\".fontcolor(\\\"#23AD6F\\\") : \\\"全部\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule(set, \\\"0\\\", MY_ID + \\\":tagFilter\\\"),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n    layout.push({\\n        title: tagFilter === \\\"1\\\" ? \\\"““””\\\" + \\\"未下载\\\".fontcolor(\\\"#23AD6F\\\") : \\\"未下载\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule(set, \\\"1\\\", MY_ID + \\\":tagFilter\\\"),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n    layout.push({\\n        title: tagFilter === \\\"2\\\" ? \\\"““””\\\" + \\\"已下载\\\".fontcolor(\\\"#23AD6F\\\") : \\\"已下载\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule(set, \\\"2\\\", MY_ID + \\\":tagFilter\\\"),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n}\\nlet chapterTeam = [];\\nlet record = [];\\nif (info.type === \\\"comic\\\") {\\n    let lazy = $(\\\"#noLoading#\\\").lazyRule(() => {\\n        const File = $.require(\\\"hiker://page/File.js\\\");\\n        let filelist = File.getFilePath(input);\\n        let piclist = filelist.map((item, i) => \\\"file://\\\" + input + \\\"/\\\" + (i + 1) + \\\".jpg\\\");\\n        return \\\"pics://\\\" + piclist.join(\\\"&&\\\");\\n    });\\n\\n    function comFun(i, item) {\\n        let rootPath = Config.comicPath + \\\"/\\\" + info.ruleName + \\\"/\\\" + info.bookName + \\\"/\\\" + i + \\\"$A$\\\" + item.title;\\n        return {\\n            title: \\\"““\\\" + item.title + \\\"””\\\",\\n            url: rootPath + lazy,\\n            extra: {\\n                id: MY_ID + \\\"#\\\" + i,\\n            },\\n            col_type: def_DoVi_Style\\n        }\\n    }\\n    File.getFilePath(Config[info.type + \\\"Path\\\"] + \\\"/\\\" + info.ruleName + \\\"/\\\" + info.bookName, \\\"dir\\\").forEach((file) => {\\n        let att = Tool.split(file.name, \\\"$\\\", 2);\\n        if (att.length === 3 && att[1] === (\\\"A\\\")) {\\n            record.push(att[2]);\\n        }\\n    });\\n} else {\\n    function comFun(i, item) {\\n        return {\\n            title: \\\"““\\\" + item.title + \\\"””\\\",\\n            url: \\\"hiker://page/NovelMainBody#autoPage##readTheme#\\\",\\n            extra: {\\n                id: MY_ID + \\\"#\\\" + i,\\n                path: Config.novelPath + \\\"/\\\" + info.ruleName + \\\"/\\\" + info.bookName + \\\"/\\\" + i + \\\"$A$\\\" + item.title + \\\".txt\\\",\\n                title: item.title\\n            },\\n            col_type: def_DoVi_Style\\n        }\\n    }\\n    File.getFilePath(Config[info.type + \\\"Path\\\"] + \\\"/\\\" + info.ruleName + \\\"/\\\" + info.bookName, \\\"file\\\", \\\".txt\\\").forEach((file) => {\\n        let att = Tool.split(file.name, \\\"$\\\", 2);\\n        if (att.length === 3 && att[1] === (\\\"A\\\")) {\\n            record.push(att[2].slice(0, att[2].lastIndexOf(\\\".\\\")));\\n        }\\n    });\\n}\\n\\nfunction clickDownload(item, info, MY_ID, i) {\\n    let loadingTeam = JSON.parse(getMyVar(MY_ID + \\\":loadingTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n    let ElementIndex = loadingTeam.indexOf(i);\\n    if (ElementIndex > -1) return \\\"toast://正在下载\\\";\\n\\n    loadingTeam.push(i);\\n    putMyVar(MY_ID + \\\":loadingTeam\\\", JSON.stringify(loadingTeam));\\n    updateItem({\\n        title: \\\"‘‘\\\" + item.title + \\\"’’\\\",\\n        extra: {\\n            id: MY_ID + \\\"#\\\" + i\\n        }\\n    });\\n    let result = \\\"toast://下载失败\\\";\\n    try {\\n        toast(\\\"开始下载:\\\" + item.title);\\n        let download = $.require(\\\"hiker://page/Download.exe.js\\\");\\n        result = download(item, info, MY_ID, i);\\n        updateItem({\\n            title: \\\"““\\\" + item.title + \\\"””\\\",\\n            url: \\\"toast://已下载\\\",\\n            extra: {\\n                id: MY_ID + \\\"#\\\" + i\\n            }\\n        });\\n    } catch (e) {\\n        updateItem({\\n            title: item.title,\\n            extra: {\\n                id: MY_ID + \\\"#\\\" + i\\n            }\\n        });\\n        log(e.toString());\\n    } finally {\\n        loadingTeam.splice(ElementIndex, 1);\\n        putMyVar(MY_ID + \\\":loadingTeam\\\", JSON.stringify(loadingTeam));\\n    }\\n    return result;\\n}\\n\\nfunction singleView() {\\n    layout.push({\\n        title: \\\"反转列表\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((isReverse, MY_ID) => {\\n            putMyVar(MY_ID + \\\":isReverse\\\", isReverse === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, isReverse, MY_ID),\\n        pic_url: \\\"https://img.icons8.com/?id=33nvDqbHH7HW&size=48&format=gif&token=\\\",\\n        col_type: \\\"icon_2\\\"\\n    });\\n    layout.push({\\n        title: \\\"批量下载\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((MY_ID) => {\\n            let loadingTeam = JSON.parse(getMyVar(MY_ID + \\\":loadingTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n            if (loadingTeam.length > 0) return \\\"toast://还有任务没有完成\\\";\\n            if (getAppVersion() < 2594) return \\\"toast://未开放\\\";\\n            putMyVar(MY_ID + \\\":viewMode\\\", \\\"1\\\");\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n\\n        }, MY_ID),\\n        pic_url: \\\"https://img.icons8.com/?format=gif&id=0uafaMNzxj88&token=\\\",\\n        col_type: \\\"icon_2\\\"\\n    });\\n    setType();\\n    layout.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    let loadingTeam = JSON.parse(getMyVar(MY_ID + \\\":loadingTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n    for (let i = 0, item = chapterList[0]; i < chapterList.length; item = chapterList[++i]) {\\n        let is_download = record.includes(item.title);\\n        if (is_download && tagFilter !== \\\"1\\\") {\\n            chapterTeam.push(comFun(item.CID, item));\\n        } else if (!is_download && tagFilter !== \\\"2\\\") {\\n            chapterTeam.push({\\n                title: loadingTeam.includes(item.CID) ? \\\"‘‘\\\" + item.title + \\\"’’\\\" : item.title,\\n                url: $(\\\"#noLoading#\\\").lazyRule(clickDownload, item, info, MY_ID, item.CID),\\n                extra: {\\n                    id: MY_ID + \\\"#\\\" + item.CID\\n                },\\n                col_type: def_DoVi_Style\\n            });\\n        }\\n    }\\n}\\n\\nfunction clickChoose(title, MY_ID, i) {\\n    let isStart = getMyVar(MY_ID + \\\":isStart\\\");\\n    if (isStart === \\\"1\\\") return \\\"toast://正在下载...\\\";\\n    let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n    let ElementIndex = batchTeam.indexOf(i);\\n    if (ElementIndex > -1) {\\n        updateItem({\\n            title: title,\\n            extra: {\\n                id: MY_ID + \\\"#\\\" + i\\n            }\\n        });\\n        batchTeam.splice(ElementIndex, 1);\\n    } else {\\n        updateItem({\\n            title: \\\"‘‘\\\" + title + \\\"’’\\\",\\n            extra: {\\n                id: MY_ID + \\\"#\\\" + i\\n            }\\n        });\\n        batchTeam.push(i);\\n    }\\n    putMyVar(MY_ID + \\\":batchTeam\\\", JSON.stringify(batchTeam));\\n    return \\\"hiker://empty\\\";\\n}\\n\\nfunction batchView() {\\n    layout.push({\\n        title: \\\"单选下载\\\",\\n        pic_url: \\\"https://img.icons8.com/?id=PIicvF6ebzMn&size=48&format=gif&token=\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((MY_ID) => {\\n            if (getMyVar(MY_ID + \\\":isStart\\\") === \\\"1\\\") return \\\"toast://正在批量下载\\\";\\n            putMyVar(MY_ID + \\\":viewMode\\\", \\\"0\\\");\\n            clearMyVar(MY_ID + \\\":batchTeam\\\");\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, MY_ID),\\n        col_type: \\\"icon_small_4\\\"\\n    });\\n    let start = Config.viewPageSize * Math.max(pageNum - 1, 0);\\n    let end = start + chapterList.length;\\n    layout.push({\\n        title: \\\"选择全部\\\",\\n        pic_url: \\\"https://img.icons8.com/?format=gif&id=1HVcHLoNzrit&token=\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((start, end, MY_ID) => {\\n            const Tool = $.require(\\\"hiker://page/Tool.js\\\");\\n            let chooseTeam = Tool.range(start, end);\\n            let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n            batchTeam = Array.from(new Set(batchTeam.concat(chooseTeam)));\\n            let completed = JSON.parse(getMyVar(MY_ID + \\\":completed\\\", \\\"[]\\\") || \\\"[]\\\");\\n            batchTeam = batchTeam.filter((i) => !completed.includes(i));\\n            putMyVar(MY_ID + \\\":batchTeam\\\", JSON.stringify(batchTeam));\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, start, end, MY_ID),\\n        col_type: \\\"icon_small_4\\\"\\n    });\\n    layout.push({\\n        title: \\\"取消全部\\\",\\n        pic_url: \\\"https://img.icons8.com/?format=gif&id=HzEjPpI3NL8D&token=\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((start, end, MY_ID) => {\\n            const Tool = $.require(\\\"hiker://page/Tool.js\\\");\\n            let chooseTeam = new Set(Tool.range(start, end));\\n            let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n            batchTeam = batchTeam.filter(x => !chooseTeam.has(x));\\n            putMyVar(MY_ID + \\\":batchTeam\\\", JSON.stringify(batchTeam));\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, start, end, MY_ID),\\n        col_type: \\\"icon_small_4\\\"\\n    });\\n    layout.push({\\n        title: \\\"确认选中\\\",\\n        pic_url: \\\"https://img.icons8.com/?format=gif&id=tMrvtc6T9hVb&token=\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((MY_ID) => {\\n            if (getMyVar(MY_ID + \\\":isStart\\\", \\\"-1\\\") !== \\\"-1\\\") {\\n                return \\\"toast://正在下载...\\\";\\n            }\\n            let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n            return batchTeam.length === 0 ? \\\"toast://你还什么都没有选\\\" : \\\"hiker://page/Batch.view#noRefresh##noHistory##noRecordHistory#\\\";\\n        }, MY_ID),\\n        extra: {\\n            newWindow: true,\\n            windowId: MY_ID + \\\"//批量下载\\\",\\n            MY_ID: MY_ID,\\n            chapterList: backupChapterList,\\n            info: info\\n        },\\n        col_type: \\\"icon_small_4\\\"\\n    });\\n    setType();\\n    layout.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n    let completed = [];\\n    for (let i = 0, item = chapterList[0]; i < chapterList.length; item = chapterList[++i]) {\\n        let is_download = record.includes(item.title);\\n        if (is_download && tagFilter !== \\\"1\\\") {\\n            completed.push(item.CID);\\n            chapterTeam.push(comFun(item.CID, item));\\n        } else if (!is_download && tagFilter !== \\\"2\\\") {\\n            chapterTeam.push({\\n                title: batchTeam.includes(item.CID) ? \\\"‘‘\\\" + item.title + \\\"’’\\\" : item.title,\\n                url: $(\\\"#noLoading#\\\").lazyRule(clickChoose, item.title, MY_ID, item.CID),\\n                extra: {\\n                    id: MY_ID + \\\"#\\\" + item.CID\\n                },\\n                col_type: def_DoVi_Style\\n            });\\n        }\\n    }\\n    putMyVar(MY_ID + \\\":completed\\\", JSON.stringify(completed));\\n}\\nswitch (viewMode) {\\n    case \\\"0\\\":\\n        singleView();\\n        break;\\n    case \\\"1\\\":\\n        batchView();\\n        break;\\n}\\nif (isReverse === \\\"1\\\") {\\n    chapterTeam.reverse();\\n}\\nlayout.push.apply(layout, chapterTeam);\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.批量下载器\",\"path\":\"Batch.view\",\"rule\":\"js:\\nlet {\\n    chapterList,\\n    info,\\n    MY_ID\\n} = MY_PARAMS;\\nsetPageTitle(\\\"下载器|\\\"+info.bookName);\\naddListener(\\\"onClose\\\", $.toString((MY_ID) => {\\n    clearMyVar(MY_ID + \\\":isStart\\\");\\n    clearMyVar(MY_ID + \\\":status\\\");\\n    clearMyVar(MY_ID + \\\":batchTeam\\\");\\n    refreshPage();\\n}, MY_ID));\\n\\nlet isStart = getMyVar(MY_ID + \\\":isStart\\\", \\\"0\\\");\\nlet status = getMyVar(MY_ID + \\\":status\\\", \\\"0\\\");\\nlet layout = [];\\n\\nlet batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\nif(typeof chapterList === \\\"string\\\"){\\n    chapterList = JSON.parse(request(\\\"file://\\\"+chapterList)||\\\"[]\\\");\\n}\\nlet chapterTeam = batchTeam.map(v => {\\n    let chapterItem = chapterList[v];\\n    chapterItem.CID = v;\\n    return chapterItem;\\n});\\nif (isStart === \\\"0\\\") {\\n    layout.push({\\n        title: \\\"开始下载[\\\" + chapterTeam.length + \\\"]\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((chapterTeam, info, MY_ID) => {\\n            putMyVar(MY_ID + \\\":isStart\\\", \\\"1\\\");\\n            refreshPage(false);\\n            let download = $.require(\\\"hiker://page/BatchStatistics.js\\\");\\n            return download(chapterTeam, info, MY_ID) || \\\"toast://下载错误\\\";\\n        }, chapterTeam, info, MY_ID),\\n        col_type: \\\"text_center_1\\\",\\n        extra: {\\n            id: MY_ID + \\\"||开始下载\\\"\\n        }\\n    });\\n    layout.push({\\n        title: \\\"任务列表：\\\",\\n        col_type: \\\"rich_text\\\",\\n    });\\n    for (let item of chapterTeam) {\\n        layout.push({\\n            title: item.title,\\n            url: \\\"hiker://empty\\\",\\n            col_type: \\\"text_2\\\"\\n        });\\n    }\\n\\n} else {\\n    layout.push({\\n        title: \\\"下载进度:0/\\\"+chapterTeam.length,\\n        desc: \\\"““””▇▇▇▇▇▇▇▇▇▇\\\".fontcolor(\\\"#e5e1e4\\\")+\\\" 0%\\\",\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"text_center_1\\\",\\n        extra: {\\n            id: MY_ID + \\\"||下载进度\\\",\\n            lineVisible: false\\n        }\\n    });\\n    layout.push({\\n        title: \\\"后台下载\\\",\\n        url: \\\"func://background\\\",\\n        col_type: \\\"text_2\\\"\\n    });\\n\\n    layout.push({\\n        title: [\\\"[取消下载]\\\", \\\"[正在停止...]\\\", \\\"[返回]\\\", \\\"[处理失败]\\\", \\\"[重新开始]\\\"][status],\\n        url: $(\\\"#noLoading#\\\").lazyRule((MY_ID) => {\\n            let status = getMyVar(MY_ID + \\\":status\\\", \\\"0\\\");\\n            if (status === \\\"0\\\") {\\n                putMyVar(MY_ID + \\\":status\\\", \\\"1\\\");\\n                updateItem({\\n                    title: \\\"[正在停止...]\\\",\\n                    extra: {\\n                        id: MY_ID + \\\"||下载控制\\\"\\n                    }\\n                });\\n                return \\\"toast://正在取消下载任务\\\";\\n            } else if (status === \\\"1\\\") {\\n                return \\\"toast://正在暂停...\\\";\\n            } else if (status === \\\"2\\\") {\\n                back();\\n                return \\\"toast://已退出下载器\\\";\\n            } else if ([\\\"3\\\", \\\"4\\\"].includes(status)) {\\n                clearMyVar(MY_ID + \\\":isStart\\\");\\n                clearMyVar(MY_ID + \\\":status\\\");\\n                clearMyVar(MY_ID + \\\":log\\\");\\n                refreshPage();\\n                return \\\"toast://重新点击下载\\\"\\n            }\\n        }, MY_ID),\\n        col_type: \\\"text_2\\\",\\n        extra: {\\n            id: MY_ID + \\\"||下载控制\\\"\\n        }\\n    });\\n    layout.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    layout.push({\\n        title: \\\"<strong>下载日志</strong>\\\".big(),\\n        col_type: \\\"rich_text\\\",\\n        \\n    });\\n    layout.push({\\n        col_type: \\\"line\\\",\\n        extra: {\\n            id: MY_ID + \\\"||日志\\\"\\n        }\\n    });\\n    layout.push({\\n        title:\\\"““””$>\\\"+\\\"开始下载......\\\".fontcolor(\\\"#00ff00\\\"),\\n        url:\\\"hiker://empty\\\",\\n        col_type: \\\"text_1\\\",\\n        extra: {\\n            id: MY_ID + \\\"#log#0\\\",\\n            lineVisible:false\\n        }\\n    });\\n}\\n\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#fg.批量下载统计\",\"path\":\"BatchStatistics.js\",\"rule\":\"const Tool = $.require(\\\"hiker://page/Tool.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\nfunction task(taskParam) {\\n    let result = $.require(\\\"hiker://page/Batch.exe.js\\\")(taskParam);\\n    return result;\\n}\\n\\n$.exports = function(chapterTeam, info, MY_ID) {\\n    if (chapterTeam.length === 0) {\\n        return \\\"toast://空的下载队列\\\";\\n    }\\n    var count = 0;\\n    var taskCount = chapterTeam.length;\\n    var successCID = [];\\n    var failName = [];\\n    var logCount = 1;\\n    var taskTeam = chapterTeam.map(chapterItem => ({\\n        func: task,\\n        id: chapterItem.title,\\n        param: {\\n            chapterItem: chapterItem,\\n            info: info,\\n            MY_ID: MY_ID\\n        }\\n    }));\\n    let logNum = Config.logNum;\\n\\n    function putLog(text) {\\n        log(text);\\n        if (logCount >= logNum) {\\n            deleteItem(MY_ID + \\\"#log#\\\" + (logCount - 10));\\n        }\\n        addItemAfter(MY_ID + \\\"||日志\\\", {\\n            url: \\\"hiker://empty\\\",\\n            title: \\\"$>\\\" + text,\\n            col_type: \\\"text_1\\\",\\n            extra: {\\n                lineVisible: false,\\n                id: MY_ID + \\\"#log#\\\" + logCount\\n            }\\n        });\\n        logCount++;\\n    }\\n\\n    function listener(perch, id, error, CID) {\\n        count++;\\n        let isSuccess = false;\\n        if (error !== null) {\\n            failName.push(id);\\n            putLog(\\\"[listener]下载失败：\\\" + id + \\\"<ERROR@ \\\" + error + \\\">\\\");\\n        } else if (CID >= 0) {\\n            successCID.push(CID);\\n            let ratio = (count / taskCount).toFixed(4);\\n            let stripCount = Math.ceil(ratio * 10);\\n            isSuccess = true;\\n            updateItem({\\n                title: \\\"下载进度：\\\" + successCID.length + \\\"/\\\" + taskCount,\\n                desc: \\\"““””\\\" + \\\"▇\\\".repeat(stripCount).fontcolor(\\\"#ffac2d\\\") + \\\"▇\\\".repeat(10 - stripCount).fontcolor(\\\"#e5e1e4\\\") + \\\" \\\" + (ratio * 100) + \\\"%\\\",\\n                extra: {\\n                    id: MY_ID + \\\"||下载进度\\\"\\n                }\\n            });\\n            putLog(\\\"[listener]已完成下载：\\\" + id);\\n        } else if (CID === -1) {\\n            failName.push(id);\\n            putLog(\\\"[listener]已停止：\\\" + id);\\n        }\\n        if (taskCount !== count) return;\\n        if (successCID.length === taskCount) {\\n            updateItem({\\n                desc: \\\"““””\\\" + \\\"▇\\\".repeat(10).fontcolor(\\\"#00ff00\\\") + \\\" 100%\\\",\\n                extra: {\\n                    id: MY_ID + \\\"||下载进度\\\"\\n                }\\n            });\\n        }\\n        let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n        let status = getMyVar(MY_ID + \\\":status\\\", \\\"0\\\");\\n        let failTeam = batchTeam.filter(v => !successCID.includes(v));\\n        putMyVar(MY_ID + \\\":batchTeam\\\", JSON.stringify(failTeam));\\n        if (failTeam.length > 0 && status !== \\\"1\\\") {\\n            putMyVar(MY_ID + \\\":status\\\", \\\"3\\\");\\n            putLog(\\\"下载失败:[\\\" + failName.join(\\\"]，[\\\") + \\\"]。\\\");\\n            updateItem({\\n                title: \\\"[处理失败]\\\",\\n                extra: {\\n                    id: MY_ID + \\\"||下载控制\\\"\\n                }\\n            });\\n        } else if (failTeam.length > 0 && status === \\\"1\\\") {\\n            putMyVar(MY_ID + \\\":status\\\", \\\"4\\\");\\n            putLog(\\\"[listener]#已停止所有任务，但已有进度不会消失#\\\");\\n            updateItem({\\n                title: \\\"[重新开始]\\\",\\n                extra: {\\n                    id: MY_ID + \\\"||下载控制\\\"\\n                }\\n            });\\n        } else {\\n            putMyVar(MY_ID + \\\":status\\\", \\\"2\\\");\\n            putLog(\\\"下载任务[\\\" + info.bookName + \\\"]已全部成功完成\\\");\\n            updateItem({\\n                title: \\\"[返回]\\\",\\n                extra: {\\n                    id: MY_ID + \\\"||下载控制\\\"\\n                }\\n            });\\n        }\\n        toast(\\\"下载任务[\\\" + info.bookName + \\\"]已完成\\\");\\n    }\\n    let taskTeamChunk = [];\\n    if (Config.threadNum > 0) {\\n        taskTeamChunk = Tool.chunk(taskTeam, Config.threadNum);\\n    } else {\\n        taskTeamChunk = [taskTeam];\\n    }\\n    for (let taskList of taskTeamChunk) {\\n        be(taskList, {\\n            func: listener\\n        });\\n        let status = getMyVar(MY_ID + \\\":status\\\", \\\"0\\\");\\n        if (status === \\\"1\\\") {\\n            let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n            let status = getMyVar(MY_ID + \\\":status\\\", \\\"0\\\");\\n            let failTeam = batchTeam.filter(v => !successCID.includes(v));\\n            putMyVar(MY_ID + \\\":batchTeam\\\", JSON.stringify(failTeam));\\n            putMyVar(MY_ID + \\\":status\\\", \\\"4\\\");\\n            putLog(\\\"[listener]#已停止所有任务，但已有进度不会消失#\\\");\\n            updateItem({\\n                title: \\\"[重新开始]\\\",\\n                extra: {\\n                    id: MY_ID + \\\"||下载控制\\\"\\n                }\\n            });\\n            return \\\"hiker://empty\\\";\\n        }\\n\\n    }\\n\\n    return \\\"hiker://empty\\\";\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"#fg.批量主程序\",\"path\":\"Batch.exe.js\",\"rule\":\"const File = $.require(\\\"hiker://page/File.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\nconst Tool = $.require(\\\"hiker://page/Tool.js\\\");\\n\\nfunction comic(taskParam) {\\n    let {\\n        chapterItem,\\n        info,\\n        MY_ID,\\n    } = taskParam;\\n    if (getMyVar(MY_ID + \\\":status\\\", \\\"\\\") === \\\"1\\\") {\\n        return -1;\\n    }\\n    let mainPath = Config.comicPath + \\\"/\\\" + info.ruleName + \\\"/\\\" + info.bookName + \\\"/\\\";\\n    let chapterPath = mainPath + chapterItem.CID + \\\"$B$\\\" + chapterItem.title + \\\"/\\\";\\n    let picList;\\n    try {\\n        let getPicList = new Function(\\\"input\\\", \\\"url\\\", \\\"return \\\" + info.parseCode);\\n        picList = getPicList(chapterItem.url, chapterItem.url);\\n        if (typeof picList === \\\"string\\\") {\\n            picList = picList.replace(\\\"pics://\\\", \\\"\\\").split(\\\"&&\\\");\\n        }\\n    } catch (e) {\\n        e.message = \\\"<漫画图片解析错误：\\\" + e.message + \\\">\\\";\\n        throw e;\\n    }\\n    const L = picList.length;\\n    if(L===0){\\n        throw new Error(\\\"<漫画图片解析错误：图片链接返回为空>\\\");\\n    }\\n    if (info.bookTopPic) {\\n        try {\\n            let bookTopPic = Tool.hikerPic(info.bookTopPic);\\n            requireDownload(bookTopPic[0], mainPath + info.bookName + \\\".jpg\\\", bookTopPic[1]);\\n        } catch (e) {\\n            log(\\\"<封面下载错误：\\\" + e.message + \\\">\\\");\\n        }\\n    }\\n    var schedule = new Map([\\n        [L, () => log(chapterItem.title + \\\"已下载100%\\\")],\\n        [~~(0.90 * L), () => log(chapterItem.title + \\\"已下载90%+\\\")],\\n        [~~(0.75 * L), () => log(chapterItem.title + \\\"已下载75%+\\\")],\\n        [~~(0.50 * L), () => log(chapterItem.title + \\\"已下载50%+\\\")],\\n        [~~(0.25 * L), () => log(chapterItem.title + \\\"已下载25%+\\\")]\\n    ]);\\n    for (var i = 0; i < L; i++) {\\n        let pic = Tool.hikerPic(picList[i]);\\n        requireDownload(pic[0], chapterPath + (i + 1) + \\\".jpg\\\", pic[1]);\\n        schedule.has(i + 1) && schedule.get(i + 1)();\\n        if (getMyVar(MY_ID + \\\":status\\\", \\\"\\\") === \\\"1\\\") {\\n            return -1;\\n        }\\n    }\\n    File.renameFile(chapterPath, chapterItem.CID + \\\"$A$\\\" + chapterItem.title);\\n    return chapterItem.CID;\\n}\\n\\nfunction novel(taskParam) {\\n    let {\\n        chapterItem,\\n        info,\\n        MY_ID,\\n    } = taskParam;\\n    if (getMyVar(MY_ID + \\\":status\\\", \\\"\\\") === \\\"1\\\") {\\n        return -1;\\n    }\\n    let mainPath = Config.novelPath + \\\"/\\\" + info.ruleName + \\\"/\\\" + info.bookName + \\\"/\\\";\\n    let chapterPath = mainPath + chapterItem.CID + \\\"$A$\\\" + chapterItem.title + \\\".txt\\\";\\n    let content = \\\"\\\";\\n    try {\\n        let getContent = new Function(\\\"input\\\", \\\"url\\\", \\\"return \\\" + info.parseCode);\\n        content = getContent(chapterItem.url, chapterItem.url);\\n    } catch (e) {\\n        e.message = \\\"<小说正文解析错误：\\\" + e.message + \\\">\\\";\\n        throw e;\\n    }\\n    if (!content) {\\n        throw new Error(\\\"<小说正文解析错误：正文返回为空>\\\");\\n    }\\n    if (info.bookTopPic) {\\n        try {\\n            let bookTopPic = Tool.hikerPic(info.bookTopPic);\\n            requireDownload(bookTopPic[0], mainPath + info.bookName + \\\".jpg\\\", bookTopPic[1]);\\n        } catch (e) {\\n            log(\\\"<封面下载错误：\\\" + e.message + \\\">\\\");\\n        }\\n    }\\n    File.fileWrite(chapterPath, content.replace(/<script>.*?<\\\\/script>/gmi, \\\"\\\").trimRight());\\n    //File.renameFile(chapterPath, chapterItem.CID + \\\"$A$\\\" + chapterItem.title);\\n    return chapterItem.CID;\\n}\\nvar $exe = {\\n    comic: comic,\\n    novel: novel\\n};\\n$.exports = function(taskParam) {\\n    return $exe[taskParam.info.type](taskParam);\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"#fg.普通主程序\",\"path\":\"Download.exe.js\",\"rule\":\"const File = $.require(\\\"hiker://page/File.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\nconst Tool = $.require(\\\"hiker://page/Tool.js\\\");\\n\\nfunction novel(item, info, MY_ID, order) {\\n    let mainPath = Config.novelPath + \\\"/\\\" + info.ruleName + \\\"/\\\" + info.bookName + \\\"/\\\";\\n    let chapterPath = mainPath + order + \\\"$A$\\\" + item.title + \\\".txt\\\";\\n    let content = \\\"\\\";\\n    try {\\n        let getContent = new Function(\\\"input\\\", \\\"url\\\", \\\"return \\\" + info.parseCode);\\n        content = getContent(item.url, item.url) || \\\"\\\";\\n    } catch (e) {\\n        e.message = \\\"<小说正文解析错误> \\\" + e.message;\\n        throw e;\\n    }\\n    if (!content) {\\n        toast(\\\"小说为空\\\");\\n        throw new Error(\\\"<小说正文解析错误：正文返回为空>\\\");\\n    }\\n    if (info.bookTopPic) {\\n        try {\\n            let bookTopPic = Tool.hikerPic(info.bookTopPic);\\n            requireDownload(bookTopPic[0], mainPath + info.bookName + \\\".jpg\\\", bookTopPic[1]);\\n        } catch (e) {\\n            log(\\\"<封面下载错误> \\\" + e.message);\\n        }\\n    }\\n    File.fileWrite(chapterPath, content.replace(/<script>.*?<\\\\/script>/gmi, \\\"\\\").trimRight());\\n    //File.renameFile(chapterPath, order + \\\"$A$\\\" + item.title + \\\".txt\\\");\\n    return \\\"toast://\\\" + info.bookName + \\\"@\\\" + item.title + \\\" 下载完成\\\";\\n}\\n\\nfunction comic(item, info, MY_ID, order) {\\n    let mainPath = Config.comicPath + \\\"/\\\" + info.ruleName + \\\"/\\\" + info.bookName + \\\"/\\\";\\n    let chapterPath = mainPath + order + \\\"$B$\\\" + item.title + \\\"/\\\";\\n    let picList = [];\\n    try {\\n        let getPicList = new Function(\\\"input\\\", \\\"return\\\" + info.parseCode);\\n        picList = getPicList(item.url);\\n        if (typeof picList === \\\"string\\\") {\\n            picList = picList.replace(\\\"pics://\\\", \\\"\\\").split(\\\"&&\\\");\\n        }\\n    } catch (e) {\\n        e.message = \\\"<漫画图片解析错误> \\\" + e.message;\\n        throw e;\\n    }\\n\\n    const L = picList.length;\\n    if(L===0){\\n        toast(\\\"图片链接为空\\\");\\n        throw new Error(\\\"<漫画图片解析错误：图片链接返回为空>\\\");\\n    }\\n    if (info.bookTopPic) {\\n        try {\\n            let bookTopPic = Tool.hikerPic(info.bookTopPic);\\n            requireDownload(bookTopPic[0], mainPath + info.bookName + \\\".jpg\\\", bookTopPic[1]);\\n        } catch (e) {\\n            log(\\\"<封面下载错误> \\\" + e.message);\\n        }\\n    }\\n    var schedule = new Map([\\n        [L, () => log(item.title + \\\"已下载100%\\\")],\\n        [~~(0.90 * L), () => log(item.title + \\\"已下载90%+\\\")],\\n        [~~(0.75 * L), () => log(item.title + \\\"已下载75%+\\\")],\\n        [~~(0.50 * L), () => log(item.title + \\\"已下载50%+\\\")],\\n        [~~(0.25 * L), () => log(item.title + \\\"已下载25%+\\\")]\\n    ]);\\n\\n    for (var i = 0; i < L; i++) {\\n        let pic = Tool.hikerPic(picList[i]);\\n        requireDownload(pic[0], chapterPath + (i + 1) + \\\".jpg\\\", pic[1]);\\n        schedule.has(i + 1) && schedule.get(i + 1)();\\n    }\\n\\n    File.renameFile(chapterPath, order + \\\"$A$\\\" + item.title);\\n    return \\\"toast://\\\" + info.bookName + \\\"@\\\" + item.title + \\\" 下载完成\\\";\\n}\\nvar $exe = {\\n    comic: comic,\\n    novel: novel\\n};\\n$.exports = function(item, info, MY_ID, order) {\\n    return $exe[info.type](item, info, MY_ID, order);\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"#f.通用工具\",\"path\":\"Tool.js\",\"rule\":\"$.exports = {\\n    split(text, target, count) {\\n        count = count === undefined ? 1 : count;\\n        let array = [text];\\n        for (let i = 0; i < count; i++) {\\n            text = array[i];\\n            let index = text.indexOf(target);\\n            if (index === -1) {\\n                break;\\n            }\\n            array[i] = text.slice(0, index);\\n            array[i + 1] = text.slice(index + target.length);\\n        }\\n        return array;\\n    },\\n    chunk(arr, size) {\\n        var result = [];\\n        for (var i = 0, len = arr.length; i < len; i += size) {\\n            result.push(arr.slice(i, i + size));\\n        }\\n        return result;\\n    },\\n    hikerPic(url) {\\n        var headers = {};\\n        let urls = url.split(\\\"@\\\");\\n        let picUrl = urls.shift();\\n        let length = urls.length;\\n        for (let i = 0; i < length; i++) {\\n            let [key, value] = urls[i].split(\\\"=\\\");\\n            headers[key] = value;\\n        }\\n        return [picUrl, headers];\\n    },\\n    range(start, end) {\\n        return Array(end - start).fill(0).map((el, i) => start + i);\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"#j.Config\",\"path\":\"Config.json\",\"rule\":\"const Config = Object.assign({\\n    homePath: \\\"/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/localManager\\\",\\n    logNum: 10,\\n    threadNum: 16,\\n    def_isPaginate: \\\"1\\\", //1默认开启分页，0默认关闭\\n    viewPageSize: 200,\\n    def_Pic: \\\"hiker://images/home_pic4\\\",\\n    def_Lord_Type: \\\"comic\\\",\\n    def_View_Style: \\\"text_1\\\",\\n    def_DoVi_Style: \\\"text_2\\\",\\n    def_DoVi_Type: \\\"1\\\", //0全部, 1未完成，2已完成\\n}, JSON.parse(readFile(\\\"config.json\\\") || \\\"{}\\\"));\\nconst PATHS = {\\n    novelPath: \\\"/小说/\\\",\\n    comicPath: \\\"/漫画/\\\",\\n    novelFullPath: \\\"/小说合并/\\\"\\n}\\n\\n\\nObject.keys(PATHS).forEach(key => Config[key] = Config.homePath + PATHS[key]);\\n$.exports = Config;\"},{\"col_type\":\"movie_3\",\"name\":\"#v.主页面\",\"path\":\"Main.view\",\"rule\":\"js:\\nfunction main() {\\n    var layout = [];\\n    const File = $.require(\\\"hiker://page/File.js\\\");\\n    const Config = $.require(\\\"hiker://page/Config.json\\\");\\n    let type = getMyVar(\\\".type\\\", Config.def_Lord_Type);\\n    let tag = File.getFilePath(Config[type + \\\"Path\\\"], \\\"dir\\\");\\n    let tgnum = getMyVar(\\\".tgnum\\\", \\\"0\\\");\\n    addListener(\\\"onClose\\\", $.toString((MY_ID) => {\\n        clearMyVar(\\\"searchKey\\\");\\n        clearMyVar(\\\".tgnum\\\");\\n    }));\\n    layout.push({\\n        title: type === \\\"comic\\\" ? \\\"◉漫画\\\" : \\\"○漫画\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((type) => {\\n            if (type === \\\"comic\\\") return \\\"hiker://empty\\\";\\n            putMyVar(\\\".type\\\", \\\"comic\\\");\\n            clearMyVar(\\\".tgnum\\\");\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, type),\\n        col_type: \\\"text_2\\\",\\n    });\\n    layout.push({\\n        title: type === \\\"novel\\\" ? \\\"◉小说\\\" : \\\"○小说\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((type) => {\\n            if (type === \\\"novel\\\") return \\\"hiker://page/NovelCollected.view#noRecordHistory##noHistory#\\\";\\n            putMyVar(\\\".type\\\", \\\"novel\\\");\\n            clearMyVar(\\\".tgnum\\\");\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, type),\\n        col_type: \\\"text_2\\\",\\n    });\\n    if (tag.length === 0) {\\n        layout.push({\\n            title: \\\"““””\\\" + \\\"一本也没有\\\".big(),\\n            url: \\\"hiker://page/Setting.view#noRefresh##noRecordHistory##noHistory#\\\",\\n            col_type: \\\"text_center_1\\\",\\n            extra: {\\n                version: MY_RULE.version,\\n                lineVisible: false\\n            }\\n        })\\n        return setResult(layout);\\n    }\\n    layout.push({\\n        url: '\\\"hiker://search?s=\\\"+input',\\n        desc: \\\"搜你想要的#\\\" + type + \\\"#......\\\",\\n        title: '搜索',\\n        col_type: 'input',\\n        extra: {\\n            rules: $.toString((tag, type) => {\\n                let arr1 = [];\\n                for (let i = 0; i < tag.length; i++) {\\n                    arr1.push({\\n                        \\\"title\\\": tag[i].name,\\n                        \\\"search_url\\\": \\\"hiker://empty?isAll=1&searchTerms=**&type=\\\" + type,\\n                        \\\"searchFind\\\": \\\"js:$.require('hiker://page/Search.view?rule='+MY_RULE._title);\\\"\\n                    });\\n                }\\n\\n                return JSON.stringify(arr1);\\n            }, tag, type),\\n            defaultValue: getMyVar('searchKey', ''),\\n            onChange: \\\"putMyVar('searchKey',input)\\\"\\n        }\\n    });\\n    \\n    layout.push({\\n        title: \\\"‘‘⚙设置’’\\\",\\n        col_type: \\\"scroll_button\\\",\\n        url: \\\"hiker://page/Setting.view#noRefresh##noRecordHistory##noHistory#\\\",\\n        extra:{\\n            version: MY_RULE.version\\n        }\\n    });\\n    \\n\\n    for (let i in tag) {\\n        let it = tag[i];\\n        if (tgnum === i) {\\n            layout.push({\\n                title: \\\"““\\\" + it.name + \\\"””\\\",\\n                col_type: \\\"scroll_button\\\",\\n                url: $U.build($U([\\\"删除该目录\\\", \\\"跳转小程序\\\"], 1, \\\"选择操作\\\").select((name) => {\\n                    if (\\\"跳转小程序\\\" === input) {\\n                        return \\\"hiker://home@\\\" + name;\\n                    } else {\\n                        return then([\\\"该操作不会删除小程序，但该小程序下载的所有漫画将被删除\\\"]);\\n                    }\\n                }, it.name).confirm((path) => {\\n                    const File = $.require(\\\"hiker://page/File.js\\\");\\n                    if (File.deleteFlies(path)) {\\n                        clearMyVar(\\\".tgnum\\\");\\n                        refreshPage();\\n                        return \\\"toast://删除成功\\\";\\n                    } else {\\n                        return \\\"toast://删除失败\\\";\\n                    }\\n                }, it.path))\\n            });\\n        } else {\\n            layout.push({\\n                title: it.name,\\n                col_type: \\\"scroll_button\\\",\\n                url: $(\\\"#noLoading#\\\").lazyRule(i => {\\n                    putMyVar(\\\".tgnum\\\", i);\\n                    refreshPage();\\n                    return \\\"hiker://empty\\\";\\n                }, i),\\n            });\\n        }\\n    }\\n    let path = tag[tgnum].path;\\n    let mhlist = File.getFilePath(path, \\\"dir\\\");\\n\\n    if (mhlist.length === 0) {\\n        layout.push({\\n            title: \\\"““””\\\" + \\\"一本也没有\\\".big(),\\n            url: \\\"hiker://empty\\\",\\n            col_type: \\\"text_center_1\\\",\\n            extra: {\\n                lineVisible: false\\n            }\\n        })\\n        return setResult(layout);\\n    }\\n    let pageUrl = type === \\\"novel\\\" ? \\\"hiker://page/NovelBrowser.view\\\" : \\\"hiker://page/ComicBrowser.view\\\";\\n    for (let item of mhlist) {\\n        let pic = fileExist(\\\"file://\\\" + item.path + \\\"/\\\" + item.name + \\\".jpg\\\") ? item.path + \\\"/\\\" + item.name + \\\".jpg\\\" : Config.def_Pic;\\n        layout.push({\\n            title: item.name,\\n            pic_url: pic,\\n            url: pageUrl + \\\"?rule=\\\" + MY_RULE.title,\\n            extra: item\\n        });\\n    }\\n    setResult(layout);\\n}\\nmain();\"},{\"col_type\":\"text_1\",\"name\":\"#v.漫画查看\",\"path\":\"ComicBrowser.view\",\"rule\":\"js:\\nif (getParam(\\\"hasParams\\\") === \\\"true\\\") {\\n    MY_PARAMS = {\\n        path: decodeURIComponent(getParam(\\\"path\\\")),\\n        name: decodeURIComponent(getParam(\\\"name\\\"))\\n    }\\n}\\nlet path = MY_PARAMS.path;\\nsetPageTitle(\\\"CV|\\\" + MY_PARAMS.name)\\nconst File = $.require(\\\"hiker://page/File.js\\\");\\nconst Tool = $.require(\\\"hiker://page/Tool.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\nvar layout = [];\\nlet mode = getMyVar(\\\".mode\\\", \\\"0\\\");\\nlet isReverse = getMyVar(\\\".isReverse\\\", \\\"0\\\");\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    clearMyVar(\\\".mode\\\");\\n    clearMyVar(\\\".isReverse\\\");\\n}));\\nconst comicStatus=new Map([[\\\"A\\\",\\\"\\\"],[\\\"B\\\",\\\"‘‘[未完成]’’\\\"]]);\\nfunction getTitle(title) {\\n    let titles = Tool.split(title, \\\"$\\\", 2);\\n    return comicStatus.get(titles[1])+titles[2] || title;\\n}\\nlayout.push({\\n    title: \\\"删除整本\\\",\\n    url: $(\\\"确认删除整本漫画？\\\").confirm((path) => {\\n        const File = $.require(\\\"hiker://page/File.js\\\");\\n        if (File.deleteFlies(path)) {\\n            back();\\n            return \\\"toast://删除成功\\\";\\n        } else {\\n            return \\\"toast://删除失败\\\";\\n        }\\n    }, path),\\n    col_type: \\\"text_2\\\"\\n});\\nlayout.push({\\n    title: [\\\"看漫画\\\", \\\"删除章节\\\"][mode],\\n    url: $(\\\"#noLoading#\\\").lazyRule((mode) => {\\n        putMyVar(\\\".mode\\\", mode === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n        refreshPage(true);\\n        return \\\"hiker://empty\\\"\\n    }, mode),\\n    col_type: \\\"text_2\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line_blank\\\"\\n})\\nlet mhlist = File.getFilePath(path, \\\"dir\\\");\\nmhlist.sort((a, b) => {\\n    a = (a.name.match(/\\\\d+/) || [])[0] || 0;\\n    b = (b.name.match(/\\\\d+/) || [])[0] || 0;\\n    return a - b;\\n});\\n\\nlayout.push({\\n    title: \\\"““””\\\" + \\\"章节 \\\".big() + (\\\"共有:\\\" + mhlist.length + \\\"章\\\").small(),\\n    url: $(\\\"#noLoading#\\\").lazyRule((isReverse) => {\\n        putMyVar(\\\".isReverse\\\", isReverse === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n        refreshPage(true);\\n        return \\\"hiker://empty\\\"\\n    }, isReverse),\\n    col_type: \\\"text_1\\\"\\n});\\nlet array = [];\\nlet lazy = $(\\\"#noLoading#\\\").lazyRule(() => {\\n    const File = $.require(\\\"hiker://page/File.js\\\");\\n    let filelist = File.getFilePath(input);\\n    let piclist = filelist.map((item, i) => \\\"file://\\\" + input + \\\"/\\\" + (i + 1) + \\\".jpg\\\");\\n    return \\\"pics://\\\" + piclist.join(\\\"&&\\\");\\n})\\nif (mode === \\\"0\\\") {\\n    for (let item of mhlist) {\\n        array.push({\\n            title: getTitle(item.name),\\n            url: item.path+lazy,\\n            col_type: Config.def_View_Style\\n        });\\n    }\\n} else {\\n    for (let item of mhlist) {\\n        let name = getTitle(item.name);\\n        array.push({\\n            title: name,\\n            url: $(\\\"确认删除[\\\" + name + \\\"]？\\\").confirm((path) => {\\n                const File = $.require(\\\"hiker://page/File.js\\\");\\n                if (File.deleteFlies(path)) {\\n                    refreshPage(true);\\n                    return \\\"toast://删除成功\\\";\\n                } else {\\n                    return \\\"toast://删除失败\\\";\\n                }\\n            }, item.path),\\n            col_type: Config.def_View_Style\\n        });\\n    }\\n}\\nif (isReverse === \\\"1\\\") {\\n    array.reverse();\\n}\\nlayout.push.apply(layout, array);\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.聚合搜索\",\"path\":\"Search.view\",\"rule\":\"js:\\nconst File = $.require(\\\"hiker://page/File.js?rule=\\\" + MY_RULE._title);\\nconst Config = $.require(\\\"hiker://page/Config.json?rule=\\\" + MY_RULE._title);\\nlet comicRuleDirs = File.getFilePath(Config[getParam(\\\"type\\\")+\\\"Path\\\"], \\\"dir\\\");\\nif (getParam(\\\"isAll\\\") === \\\"1\\\") {\\n    comicRuleDirs = comicRuleDirs.filter(item => item.name === MY_RULE.title);\\n}\\n\\nlet searchResult = [];\\nlet searchTerms = getParam(\\\"searchTerms\\\");\\nlet termsArr = searchTerms.split(\\\"\\\").map(t => t.replace(/\\\\*|\\\\.|\\\\?|\\\\+|\\\\$|\\\\^|\\\\[|\\\\]|\\\\(|\\\\)|\\\\{|\\\\}|\\\\||\\\\/|\\\\\\\\/g, k => \\\"\\\\\\\\\\\" + k));\\nlet reg = new RegExp(termsArr.join(\\\".*\\\"),\\\"i\\\");\\nlet pageUrl=getParam(\\\"type\\\")===\\\"novel\\\"?\\\"hiker://page/NovelBrowser.view\\\":\\\"hiker://page/ComicBrowser.view\\\";\\nfor (let sonDir of comicRuleDirs) {\\n    let comicList = File.getFilePath(sonDir.path, \\\"dir\\\");\\n    for (let comic of comicList) {\\n        if (reg.test(comic.name)) {\\n            searchResult.push({\\n                title: comic.name,\\n                pic_url: comic.path + \\\"/\\\" + comic.name + \\\".jpg\\\",\\n                url: pageUrl+\\\"?rule=\\\" + MY_RULE._title,\\n                desc: sonDir.name,\\n                extra: comic\\n            });\\n        }\\n    }\\n\\n}\\nsetResult(searchResult);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.设置\",\"path\":\"Setting.view\",\"rule\":\"js:\\nsetPageTitle(MY_RULE.title + \\\"|设置\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\nlet layout = [];\\n\\nlayout.push({\\n    title: \\\"<strong>基础设置</strong>\\\".big(),\\n    col_type: \\\"rich_text\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"目录路径\\\",\\n    url: $(Config.homePath, \\\"支持hiker://files路径\\\\n(该操作不会初始化目录)\\\").input(() => {\\n        const Config = $.require(\\\"hiker://page/Config.json\\\");\\n        if (input.startsWith(\\\"hiker://files/\\\")) input = getPath(input).slice(7);\\n        if (Config.homePath == input) return \\\"toast://已经是当前目录\\\";\\n        Config = JSON.parse(readFile(\\\"config.json\\\") || \\\"{}\\\");\\n        Config.homePath = input;\\n        saveFile(\\\"config.json\\\", JSON.stringify(Config));\\n        refreshPage(false);\\n        return \\\"toast://已保存\\\";\\n    }),\\n    desc: Config.homePath,\\n    col_type: \\\"text_1\\\"\\n});\\nlayout.push({\\n    title: \\\"设置默认封面\\\",\\n    desc: Config.def_Pic,\\n    url: \\\"hiker://page/Setting/More.view#noRefresh##noRecordHistory##noHistory#?settingType=defaultPic\\\",\\n    col_type: \\\"text_1\\\",\\n    extra: {\\n        lineVisible: false\\n    }\\n});\\nlayout.push({\\n    col_type: \\\"line_blank\\\"\\n});\\nlayout.push({\\n    title: \\\"<strong>下载器设置</strong>\\\".big(),\\n    col_type: \\\"rich_text\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\n\\nfunction setNum(key, test) {\\n    let Config = JSON.parse(readFile(\\\"config.json\\\") || \\\"{}\\\");\\n    input = parseInt(input);\\n    if (Number.isNaN(input)) return \\\"toast://请输入数字\\\";\\n    if (!test(input)) return \\\"toast://不符合条件\\\";\\n    Config[key] = input;\\n    saveFile(\\\"config.json\\\", JSON.stringify(Config));\\n    refreshPage(false);\\n    return \\\"toast://修改成功\\\";\\n}\\nlayout.push({\\n    title: \\\"log数\\\",\\n    url: $(Config.logNum, \\\"0<N<100\\\").input(setNum, \\\"logNum\\\", it => it > 0 && it < 100),\\n    desc: \\\"\\\" + Config.logNum,\\n    col_type: \\\"text_1\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"分批下载数(0不开启)\\\",\\n    url: $(\\\"\\\" + Config.threadNum, \\\"N>-1\\\").input(setNum, \\\"threadNum\\\", it => it > -1),\\n    desc: \\\"\\\" + Config.threadNum,\\n    col_type: \\\"text_1\\\",\\n    extra: {\\n        lineVisible: false,\\n    }\\n});\\n\\n\\nlayout.push({\\n    col_type: \\\"line_blank\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"<strong>小说阅读器设置</strong>\\\".big(),\\n    col_type: \\\"rich_text\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"默认开启分页阅读\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((def_isPaginate) => {\\n        let Config = JSON.parse(readFile(\\\"config.json\\\") || \\\"{}\\\");\\n\\n        Config.def_isPaginate = def_isPaginate === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\";\\n\\n        saveFile(\\\"config.json\\\", JSON.stringify(Config));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\";\\n    }, Config.def_isPaginate),\\n    desc: Config.def_isPaginate === \\\"0\\\" ? \\\"不开启\\\" : \\\"开启\\\",\\n    col_type: \\\"text_1\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"每页最大章数\\\",\\n    url: $(Config.viewPageSize, \\\"30<N<500\\\").input(setNum, \\\"viewPageSize\\\", it => it > 30 && it < 500),\\n    desc: \\\"\\\" + Config.viewPageSize,\\n    col_type: \\\"text_1\\\"\\n});\\nlayout.push({\\n    title: \\\"替换规则\\\",\\n    url: \\\"hiker://page/Setting/More.view#noRecordHistory##noHistory##noRefresh#?settingType=replaceRule\\\",\\n    col_type: \\\"text_1\\\",\\n    extra: {\\n        lineVisible: false\\n    }\\n});\\n\\nlayout.push({\\n    col_type: \\\"line_blank\\\"\\n});\\nlayout.push({\\n    title: \\\"<strong>其他设置</strong>\\\".big(),\\n    col_type: \\\"rich_text\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    title: \\\"规则发布页\\\",\\n    url: \\\"hiker://page/ruleDetail#noHistory##noRecordHistory#?rule=道长仓库Pro\\\",\\n    extra: {\\n        lver: MY_PARAMS.version || \\\"获取版本失败，自行查看\\\",\\n        id: \\\"3559\\\"\\n    },\\n    col_type: \\\"text_1\\\"\\n});\\nlayout.push({\\n    title: \\\"关于如何调用\\\",\\n    url: \\\"https://qun.qq.com/qqweb/qunpro/share?_wv=3&_wwv=128&inviteCode=1HFyBJ&from=246610&biz=ka\\\",\\n    desc: \\\"详细点击加入频道，频道里@LoyDgIk\\\",\\n    col_type: \\\"text_1\\\"\\n});\\nlayout.push({\\n    title: \\\"恢复默认设置\\\",\\n    url: $(\\\"确认恢复默认设置？\\\").confirm(() => {\\n        deleteFile(\\\"config.json\\\");\\n        refreshPage(false);\\n        return \\\"toast://恢复完成\\\";\\n    }),\\n    col_type: \\\"text_1\\\"\\n});\\nlayout.push({\\n    title: \\\"清理缓存\\\",\\n    url: \\\"hiker://page/Setting/More.view#noRecordHistory##noHistory#?settingType=cache\\\",\\n    col_type: \\\"text_1\\\"\\n});\\n/*\\nlayout.push({\\n    title: \\\"清除小说分页记录\\\",\\n    url: $(\\\"确认清除小说分页记录？\\\").confirm(() => {\\n        deleteFile(\\\"novelFootprint.json\\\");\\n        return \\\"toast://清除完成\\\";\\n    }),\\n    col_type: \\\"text_1\\\"\\n});\\n*/\\nsetResult(layout);\"},{\"col_type\":\"text_1\",\"name\":\"#v.小说查看\",\"path\":\"NovelBrowser.view\",\"rule\":\"js:\\nif (getParam(\\\"hasParams\\\") === \\\"true\\\") {\\n    MY_PARAMS = {\\n        path: decodeURIComponent(getParam(\\\"path\\\")),\\n        name: decodeURIComponent(getParam(\\\"name\\\"))\\n    }\\n}\\nlet path = MY_PARAMS.path;\\nsetPageTitle(\\\"NV|\\\" + MY_PARAMS.name);\\nconst File = $.require(\\\"hiker://page/File.js\\\");\\nconst Tool = $.require(\\\"hiker://page/Tool.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\nconst bookInfo = Object.assign({\\n    foot: 0,\\n    isReplace: true\\n}, JSON.parse(request(\\\"file://\\\" + path + \\\"/bookInfo.json\\\") || \\\"{}\\\"));\\nlet id = \\\"#\\\" + new Date().getTime();\\nvar layout = [];\\nlet mode = getMyVar(\\\".mode\\\", \\\"0\\\");\\nlet mode2 = getMyVar(\\\".mode2\\\", Config.def_isPaginate);\\n\\nlet isReverse = getMyVar(\\\".isReverse\\\", \\\"0\\\");\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    clearMyVar(\\\".mode\\\");\\n    clearMyVar(\\\".mode2\\\");\\n    clearMyVar(\\\".isReverse\\\");\\n    clearMyVar(\\\".pageNum\\\");\\n}));\\n\\nfunction getTitle(title) {\\n    let titles = Tool.split(title, \\\"$\\\", 2);\\n    return titles[2] !== undefined ? titles[2].slice(0, titles[2].lastIndexOf(\\\".\\\")) : title;\\n}\\nlayout.push({\\n    title: \\\"删除整本\\\",\\n    url: $(\\\"确认删除整本小说？\\\").confirm((path) => {\\n        const File = $.require(\\\"hiker://page/File.js\\\");\\n        if (File.deleteFlies(path)) {\\n            back();\\n            return \\\"toast://删除成功\\\";\\n        } else {\\n            return \\\"toast://删除失败\\\";\\n        }\\n    }, path),\\n    col_type: \\\"text_2\\\"\\n});\\n\\nlayout.push({\\n    title: [\\\"看小说\\\", \\\"删除章节\\\"][mode],\\n    url: $(\\\"#noLoading#\\\").lazyRule((mode) => {\\n        putMyVar(\\\".mode\\\", mode === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n        refreshPage(true);\\n        return \\\"hiker://empty\\\"\\n    }, mode),\\n    col_type: \\\"text_2\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"‘‘更多功能→’’\\\",\\n    url: \\\"hiker://empty\\\",\\n    col_type: \\\"scroll_button\\\"\\n});\\n\\nfunction txt(paths, isReplace) {\\n    showLoading(\\\"正在合并...\\\");\\n    const File = $.require(\\\"hiker://page/File.js\\\");\\n    const Tool = $.require(\\\"hiker://page/Tool.js\\\");\\n    const Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\n    let filelist = File.getFilePath(paths.path, \\\"file\\\", \\\".txt\\\");\\n    let listLength = filelist.length;\\n    if (listLength === 0) {\\n        hideLoading();\\n        return \\\"toast://空的章节\\\";\\n    }\\n    let bufilelist = [];\\n    for (let i = 0; i < listLength; i++) {\\n        let file = filelist[i];\\n        let fileInfo = Tool.split(file.name, \\\"$\\\", 2);\\n        bufilelist.push({\\n            name: fileInfo[2].slice(0, fileInfo[2].lastIndexOf(\\\".\\\")),\\n            path: \\\"file://\\\" + file.path,\\n            id: Number(fileInfo[0]) || 0\\n        });\\n    }\\n    bufilelist.sort((a, b) => a.id - b.id);\\n    let entirePath = paths.path.replace(Config.novelPath, Config.novelFullPath) + \\\".txt\\\";\\n    let entirePathto = isReplace ? entirePath + \\\".tmp\\\" : entirePath;\\n\\n    if (fileExist(\\\"file://\\\" + entirePath)) {\\n        toast(\\\"初始化文件\\\");\\n        if (!File.deleteFlies(entirePath)) {\\n            hideLoading();\\n            return \\\"toast://初始化失败\\\";\\n        } else {\\n            toast(\\\"初始化成功\\\");\\n        }\\n    }\\n\\n    for (let i = 0; i < listLength; i++) {\\n        let item = bufilelist[i];\\n        let content = request(item.path);\\n        File.fileWriteAppend(entirePathto, item.name + \\\"\\\\n　　\\\" + content.replace(/^\\\\s+|\\\\s+$/gm, \\\"\\\").split(/\\\\n+/).join(\\\"\\\\r　　\\\") + \\\"\\\\n\\\\n\\\");\\n    }\\n    if (isReplace) {\\n        let ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n        ruleList = ruleList.filter(item => item.isEnabled);\\n        let len = ruleList.length;\\n        let replacePattern = [\\\"replace\\\", \\\"replaceAll\\\"];\\n        let flag = File.fileRule(entirePathto, entirePath, (javaString) => {\\n            for (let i = 0; i < len; i++) {\\n                let replaceRule = ruleList[i];\\n                let replace = replacePattern[0 + replaceRule.isRegex];\\n                javaString = javaString[replace](replaceRule.pattern, replaceRule.replacement);\\n            }\\n            return javaString.getBytes();\\n        });\\n        if (!flag) {\\n            hideLoading();\\n            return \\\"toast://合并失败\\\";\\n        }\\n\\n    }\\n    hideLoading();\\n    return \\\"toast://合并完成\\\";\\n}\\nlayout.push({\\n    title: \\\"合并小说\\\",\\n    url: $(\\\"确定合并?\\\\n会覆盖已有TXT\\\").confirm(txt, MY_PARAMS, bookInfo.isReplace),\\n    col_type: \\\"scroll_button\\\"\\n});\\nlayout.push({\\n    title: [\\\"☐分页\\\", \\\"☑分页\\\"][mode2],\\n    url: $(\\\"#noLoading#\\\").lazyRule((mode2) => {\\n        putMyVar(\\\".mode2\\\", mode2 === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n        refreshPage(true);\\n        return \\\"hiker://empty\\\";\\n    }, mode2),\\n    col_type: \\\"scroll_button\\\"\\n});\\nlayout.push({\\n    title: [\\\"☐净化\\\", \\\"☑净化\\\"][0 + bookInfo.isReplace],\\n    url: $(\\\"#noLoading#\\\").lazyRule((isReplace, path) => {\\n        const bookInfo = JSON.parse(request(\\\"file://\\\" + path + \\\"/bookInfo.json\\\") || \\\"{}\\\");\\n        bookInfo.isReplace = !isReplace;\\n        writeFile(\\\"file://\\\" + path + \\\"/bookInfo.json\\\", JSON.stringify(bookInfo));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\";\\n    }, bookInfo.isReplace, path),\\n    col_type: \\\"scroll_button\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line_blank\\\"\\n});\\n\\nlet mhlist = File.getFilePath(path, \\\"file\\\", \\\".txt\\\");\\nmhlist.sort((a, b) => {\\n    a = (a.name.match(/\\\\d+/) || [])[0] || 0;\\n    b = (b.name.match(/\\\\d+/) || [])[0] || 0;\\n    return a - b;\\n});\\nlet chapterList = [];\\nlet chapterCount = mhlist.length;\\n\\nif (mode2 === \\\"1\\\") {\\n    let mhlistChunk = Tool.chunk(mhlist, Config.viewPageSize);\\n    let viewPageCount = mhlistChunk.length;\\n    let defPage = (viewPageCount - 1 < bookInfo.foot ? 0 : bookInfo.foot) || 0;\\n    let pageNum = Number(getMyVar(\\\".pageNum\\\", \\\"\\\" + defPage));\\n    chapterList = mhlistChunk[pageNum] || [];\\n    layout.push({\\n        title: \\\"““””\\\" + \\\"章节 \\\".big() + (\\\"本页:\\\" + chapterList.length + \\\" 共有:\\\" + chapterCount + \\\"章 当前:\\\" + (pageNum + 1) + \\\"/\\\" + viewPageCount).small(),\\n        url: $(\\\"#noLoading#\\\").lazyRule((isReverse) => {\\n            putMyVar(\\\".isReverse\\\", isReverse === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n            refreshPage(true);\\n            return \\\"hiker://empty\\\"\\n        }, isReverse),\\n        col_type: \\\"text_1\\\"\\n    });\\n    layout.push({\\n        title: \\\"跳集\\\",\\n        url: $(chapterCount, \\\"输入跳转章节 1-\\\" + chapterCount).input((chapterCount, pageNum, viewPageSize, path) => {\\n            let inputNum = Number(input);\\n            if (Number.isNaN(inputNum) || inputNum < 0 || inputNum > chapterCount) {\\n                return \\\"toast://请输入正确范围内的数字\\\";\\n            }\\n            inputNum = Math.floor((inputNum + viewPageSize) / viewPageSize) - 1;\\n            if (pageNum === inputNum) return \\\"toast://正在当前页面\\\";\\n            putMyVar(\\\".pageNum\\\", \\\"\\\" + inputNum);\\n            const bookInfo = JSON.parse(request(\\\"file://\\\" + path + \\\"/bookInfo.json\\\") || \\\"{}\\\");\\n            bookInfo.foot = inputNum;\\n            writeFile(\\\"file://\\\" + path, JSON.stringify(bookInfo));\\n            refreshPage(false);\\n        }, chapterCount, pageNum, Config.viewPageSize, path),\\n        col_type: \\\"text_5\\\"\\n    });\\n    layout.push({\\n        title: \\\"跳页\\\",\\n        url: $(pageNum + 1, \\\"跳转页数 1-\\\" + viewPageCount).input((viewPageCount, pageNum, path) => {\\n            let inputNum = Number(input) - 1;\\n            if (Number.isNaN(inputNum) || inputNum < 0 || inputNum > viewPageCount - 1) {\\n                return \\\"toast://请输入正确范围内的数字\\\";\\n            }\\n            if (pageNum === inputNum) return \\\"toast://正在当前页面\\\";\\n            putMyVar(\\\".pageNum\\\", \\\"\\\" + inputNum);\\n            const bookInfo = JSON.parse(request(path + \\\"/bookInfo.json\\\") || \\\"{}\\\");\\n            bookInfo.foot = inputNum;\\n            writeFile(\\\"file://\\\" + path + \\\"/bookInfo.json\\\", JSON.stringify(bookInfo));\\n            refreshPage(false);\\n        }, viewPageCount, pageNum, path),\\n        col_type: \\\"text_5\\\"\\n    });\\n    layout.push({\\n        title: \\\"上一页\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((pageNum, path) => {\\n            let inputNum = pageNum - 1;\\n            if (inputNum < 0) {\\n                return \\\"toast://已经是第一页了\\\";\\n            }\\n            putMyVar(\\\".pageNum\\\", \\\"\\\" + inputNum);\\n            const bookInfo = JSON.parse(request(path + \\\"/bookInfo.json\\\") || \\\"{}\\\");\\n            bookInfo.foot = inputNum;\\n            log(bookInfo.foot);\\n            writeFile(\\\"file://\\\" + path + \\\"/bookInfo.json\\\", JSON.stringify(bookInfo));\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, pageNum, path),\\n        col_type: \\\"text_5\\\"\\n    });\\n    layout.push({\\n        title: \\\"下一页\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((viewPageCount, pageNum, path) => {\\n            let inputNum = pageNum + 1;\\n            if (inputNum > viewPageCount - 1) {\\n                return \\\"toast://已经是最后一页了\\\";\\n            }\\n            putMyVar(\\\".pageNum\\\", \\\"\\\" + inputNum);\\n            const bookInfo = JSON.parse(request(path + \\\"/bookInfo.json\\\") || \\\"{}\\\");\\n            bookInfo.foot = inputNum;\\n            writeFile(\\\"file://\\\" + path + \\\"/bookInfo.json\\\", JSON.stringify(bookInfo));\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, viewPageCount, pageNum, path),\\n        col_type: \\\"text_5\\\"\\n    });\\n    layout.push({\\n        title: \\\"末页\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((viewPageCount, pageNum, path) => {\\n            let inputNum = viewPageCount - 1;\\n            if (pageNum === inputNum || inputNum === -1) {\\n                return \\\"toast://已经是最后一页了\\\";\\n            }\\n            putMyVar(\\\".pageNum\\\", \\\"\\\" + inputNum);\\n            const bookInfo = JSON.parse(request(path + \\\"/bookInfo.json\\\") || \\\"{}\\\");\\n            bookInfo.foot = inputNum;\\n            writeFile(\\\"file://\\\" + path + \\\"/bookInfo.json\\\", JSON.stringify(bookInfo));\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, viewPageCount, pageNum, path),\\n        col_type: \\\"text_5\\\"\\n    });\\n} else {\\n    chapterList = mhlist;\\n    layout.push({\\n        title: \\\"““””\\\" + \\\"章节 \\\".big() + (\\\"共有:\\\" + chapterCount + \\\"章\\\").small(),\\n        url: $(\\\"#noLoading#\\\").lazyRule((isReverse) => {\\n            putMyVar(\\\".isReverse\\\", isReverse === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n            refreshPage(true);\\n            return \\\"hiker://empty\\\"\\n        }, isReverse),\\n        col_type: \\\"text_1\\\"\\n    });\\n}\\nlet array = [];\\nif (mode === \\\"0\\\") {\\n    for (let item of chapterList) {\\n        let name = getTitle(item.name);\\n        array.push({\\n            title: name,\\n            url: \\\"hiker://page/NovelMainBody#autoPage##readTheme#\\\",\\n            extra: {\\n                path: item.path,\\n                title: name,\\n                isReplace: bookInfo.isReplace\\n            },\\n            col_type: Config.def_View_Style\\n        });\\n    }\\n} else {\\n    for (let item of chapterList) {\\n        let name = getTitle(item.name);\\n        array.push({\\n            title: name,\\n            url: $(\\\"确认删除[\\\" + name + \\\"]？\\\").confirm((path) => {\\n                const File = $.require(\\\"hiker://page/File.js\\\");\\n                if (File.deleteFlies(path)) {\\n                    refreshPage(true);\\n                    return \\\"toast://删除成功\\\";\\n                } else {\\n                    return \\\"toast://删除失败\\\";\\n                }\\n            }, item.path),\\n            col_type: Config.def_View_Style\\n        });\\n    }\\n}\\nif (isReverse === \\\"1\\\") {\\n    array.reverse();\\n}\\nlayout.push.apply(layout, array);\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.小说正文阅读\",\"path\":\"NovelMainBody\",\"rule\":\"js:\\nvar layout = [];\\nlet content = request(\\\"file://\\\" + MY_PARAMS.path);\\n//content = content.replace(/\\\\n|\\\\r/g, \\\"<br>\\\").replace(/(&nbsp;)+/g,\\\" \\\");\\nif (MY_PARAMS.isReplace) {\\n    let javaString = java.lang.String(content);\\n    let ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n    let replacePattern = [\\\"replace\\\", \\\"replaceAll\\\"];\\n    for (let i = 0, len = ruleList.length; i < len; i++) {\\n        let replaceRule = ruleList[i];\\n        if (!replaceRule.isEnabled) continue;\\n        let replace = replacePattern[0 + replaceRule.isRegex];\\n        javaString = javaString[replace](replaceRule.pattern, replaceRule.replacement);\\n    }\\n    content = String(javaString);\\n}\\ncontent = \\\"　　\\\" + content.replace(/^\\\\s+|\\\\s+$/gm, \\\"\\\").split(/\\\\n+/).join(\\\"<br>　　\\\");\\n\\nlayout.push({\\n    col_type: \\\"rich_text\\\",\\n    title: (\\\"<strong>\\\" + MY_PARAMS.title + \\\"</strong>\\\").big(),\\n});\\n\\nlayout.push({\\n    title: content,\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: 18,\\n        click: true\\n    }\\n});\\nsetResult(layout);\"},{\"col_type\":\"text_1\",\"name\":\"#v.小说全集查看\",\"path\":\"NovelCollected.view\",\"rule\":\"js:\\nconst File = $.require(\\\"hiker://page/File.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\nlet rulelDir = File.getFilePath(Config.novelFullPath, \\\"dir\\\");\\n\\nlet layout = [];\\n\\nfunction operation(path) {\\n    switch (input) {\\n        case \\\"分享\\\":\\n            return \\\"share://\\\" + path;\\n            break;\\n        case \\\"删除\\\":\\n            const File = $.require(\\\"hiker://page/File.js\\\");\\n            if (File.deleteFlies(path)) {\\n                refreshPage();\\n                return \\\"toast://删除成功\\\";\\n            } else {\\n                return \\\"toast://删除失败\\\";\\n            }\\n            break;\\n        case \\\"预览\\\":\\n            return \\\"editFile://file://\\\" + path;\\n            break;\\n    }\\n}\\nfor (let rulePaths of rulelDir) {\\n    let novels = File.getFilePath(rulePaths.path, \\\"file\\\");\\n    for (let novel of novels) {\\n        layout.push({\\n            title: novel.name,\\n            url: $([\\\"分享\\\", \\\"删除\\\", \\\"预览\\\"], 1).select(operation, novel.path),\\n            desc: \\\"来源：\\\" + rulePaths.name,\\n            col_type: \\\"text_1\\\"\\n        });\\n    }\\n}\\nif (layout.length === 0) {\\n    layout.push({\\n        title: '<h1 style=\\\"text-align: center;\\\">啥都没有耶</h1>',\\n        col_type: \\\"rich_text\\\"\\n    });\\n}\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.更多设置\",\"path\":\"Setting/More.view\",\"rule\":\"js:\\nconst File = $.require(\\\"hiker://page/File.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\nconst settingType = MY_PARAMS.settingType || getParam(\\\"settingType\\\");\\n\\nlet layout = [];\\n\\nswitch (settingType) {\\n    case \\\"cache\\\":\\n        setPageTitle(\\\"清除缓存|设置\\\");\\n        const knownList = new Map([\\n            [File.getName(Config.novelPath), \\\"#管理器#小说缓存目录[不建议清除]\\\"],\\n            [File.getName(Config.comicPath), \\\"#管理器#漫画缓存目录[不建议清除]\\\"],\\n            [File.getName(Config.novelFullPath), \\\"#管理器#小说合并目录[可以清除]\\\"],\\n            [\\\"dr章节缓存\\\", \\\"道长模板临时缓存[建议清除]\\\"]\\n        ]);\\n\\n        let cacheDir = File.getFilePath(Config.homePath, \\\"dir\\\");\\n\\n        function cleanCache(path) {\\n            const File = $.require(\\\"hiker://page/File.js\\\");\\n            if (File.deleteFlies(path)) {\\n                refreshPage(false);\\n                return \\\"toast://清除完成\\\";\\n            } else {\\n                return \\\"toast://清除失败\\\";\\n            }\\n        }\\n        for (let cache of cacheDir) {\\n            layout.push({\\n                title: cache.name,\\n                desc: \\\"大小：\\\" + File.getFileSize(cache.path) + \\\"\\\\n描述：\\\" + knownList.get(cache.name) || \\\"未知目录[风险未知]\\\",\\n                col_type: \\\"text_1\\\",\\n                url: $(\\\"确认清除 \\\" + cache.name + \\\" ?\\\").confirm(cleanCache, cache.path)\\n            });\\n        }\\n        layout.push({\\n            col_type: \\\"line_blank\\\"\\n        });\\n        layout.push({\\n            title: \\\"全部清除(\\\" + File.getFileSize(Config.homePath) + \\\")\\\",\\n            col_type: \\\"text_center_1\\\",\\n            url: $(\\\"确认清除全部缓存数据?\\\").confirm(cleanCache, Config.homePath)\\n        });\\n        break;\\n    case \\\"defaultPic\\\":\\n        setPageTitle(\\\"默认封面|设置\\\");\\n\\n        function setDefaultPic(url) {\\n            let Config = JSON.parse(readFile(\\\"config.json\\\") || \\\"{}\\\");\\n            Config.def_Pic = url;\\n            saveFile(\\\"config.json\\\", JSON.stringify(Config));\\n            back();\\n            return \\\"toast://修改成功\\\";\\n        }\\n        for (let i = 1; i <= 4; i++) {\\n            layout.push({\\n                title: \\\"图片\\\" + i,\\n                col_type: \\\"movie_3\\\",\\n                pic_url: \\\"hiker://images/home_pic\\\" + i,\\n                url: $(\\\"#noLoading#\\\").lazyRule(setDefaultPic, \\\"hiker://images/home_pic\\\" + i)\\n            });\\n        }\\n        break;\\n    case \\\"replaceRule\\\":\\n        setPageTitle(\\\"替换规则|设置\\\");\\n        let ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n        let id = \\\"#\\\" + new Date().getTime();\\n\\n        layout.push({\\n            title: \\\"新建替换\\\",\\n            url: \\\"hiker://page/editReplaceRule.view#noRecordHistory##noHistory##noRefresh#?isNew=true\\\",\\n            col_type: \\\"text_3\\\"\\n        });\\n        layout.push({\\n            title: \\\"导出规则\\\",\\n            url: $(\\\"确认导出\\\" + ruleList.length + \\\"条规则？\\\\n({homePtah}/replaceRule.json)\\\").confirm((num) => {\\n                const Config = $.require(\\\"hiker://page/Config.json\\\");\\n                let savePta = Config.homePath + \\\"/replaceRule.json\\\";\\n                writeFile(savePta, readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n                log(\\\"\\\\n路径：\\\" + savePta + \\\"\\\\n导出规则 \\\" + num + \\\" 条\\\");\\n                return \\\"share://\\\" + savePta;\\n            }, ruleList.length),\\n            col_type: \\\"text_3\\\"\\n        });\\n        layout.push({\\n            title: \\\"导入规则\\\",\\n            url: $(\\\"\\\", \\\"输入规则文件路径(*.json)\\\", \\\"规则导入\\\").input(() => {\\n                input = input.startsWith(\\\"file://\\\") ? input : \\\"file://\\\" + input\\n                let ruleText = request(input);\\n                if (!ruleText) return \\\"toast://获取文件为空\\\";\\n                try {\\n                    let newRuleList = JSON.parse(ruleText);\\n                    let ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n                    let newCount = 0,\\n                        updateCount = 0;\\n                    for (let i in newRuleList) {\\n                        let newRule = newRuleList[i];\\n                        let id = newRule.id;\\n                        newRule.id = id || new Date().getTime();\\n                        let idIndex = ruleList.findIndex(rule => rule.id === id);\\n                        if (idIndex > -1) {\\n                            updateCount++;\\n                            ruleList.splice(idIndex, 1, newRule);\\n                        } else {\\n                            newCount++;\\n                            ruleList.push(newRule);\\n                        }\\n                    }\\n                    saveFile(\\\"replaceRule.json\\\", JSON.stringify(ruleList));\\n                    refreshPage();\\n                    log(\\\"\\\\n路径：\\\" + input + \\\"\\\\n总规则数：\\\" + newRuleList.length + \\\"\\\\n更新规则 \\\" + updateCount + \\\" 条\\\\t新增规则 \\\" + newCount + \\\" 条\\\");\\n                    return \\\"toast://导入成功\\\";\\n                } catch (e) {\\n                    log(e.toString());\\n                    return \\\"toast://导入失败\\\";\\n                }\\n            }),\\n            col_type: \\\"text_3\\\"\\n        });\\n        layout.push({\\n            col_type: \\\"line_blank\\\"\\n        });\\n        for (let i = 0, len = ruleList.length; i < len; i++) {\\n            let replaceRule = ruleList[i];\\n            layout.push({\\n                title: (replaceRule.isEnabled ? \\\"●\\\" : \\\"○\\\") + replaceRule.name,\\n                col_type: \\\"text_1\\\",\\n                url: \\\"hiker://empty\\\",\\n                extra: {\\n                    id: id + i,\\n                    lineVisible: false\\n                }\\n            });\\n            layout.push({\\n                title: \\\"删除\\\",\\n                url: $(\\\"#noLoading#\\\").lazyRule((id, index) => {\\n                    var ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n                    ruleList.splice(index, 1);\\n                    saveFile(\\\"replaceRule.json\\\", JSON.stringify(ruleList));\\n                    deleteItem(id + index);\\n                    deleteItem(id +\\\"#\\\" +index);\\n                    deleteItem(id +\\\"$\\\" +index);\\n                    deleteItem(id +\\\"@\\\" +index);\\n                    toast(\\\"删除成功\\\");\\n                    return \\\"hiker://empty\\\";\\n                }, id, i),\\n                extra:{\\n                    id: id+\\\"#\\\"+i\\n                },\\n                col_type: \\\"text_3\\\"\\n            });\\n            layout.push({\\n                title: \\\"编辑\\\",\\n                url: \\\"hiker://page/editReplaceRule.view#noRecordHistory##noHistory##noRefresh#?index=\\\" + i,\\n                col_type: \\\"text_3\\\",\\n                extra:{\\n                    id: id+\\\"$\\\"+i\\n                }\\n            });\\n            layout.push({\\n                title: \\\"开启/关闭\\\",\\n                url: $(\\\"#noLoading#\\\").lazyRule((id, index, title) => {\\n                    var ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n                    let isEnabled = ruleList[index].isEnabled;\\n                    ruleList[index].isEnabled = !isEnabled;\\n                    updateItem({\\n                        extra: {\\n                            id: id + index,\\n                            lineVisible: false\\n                        },\\n                        title: (isEnabled ? \\\"○\\\" : \\\"●\\\") + title\\n                    });\\n                    saveFile(\\\"replaceRule.json\\\", JSON.stringify(ruleList));\\n                    return \\\"hiker://empty\\\";\\n                }, id, i, replaceRule.name),\\n                col_type: \\\"text_3\\\",\\n                extra:{\\n                    id: id+\\\"@\\\"+i\\n                }\\n            });\\n            layout.push({\\n                col_type: \\\"line\\\"\\n            });\\n        }\\n\\n        break;\\n}\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.编辑替换规则\",\"path\":\"editReplaceRule.view\",\"rule\":\"js:\\nconst isNew = MY_PARAMS.isNew || getParam(\\\"isNew\\\");\\nconst index = MY_PARAMS.index || Number(getParam(\\\"index\\\"));\\nlet layout = [];\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    clearMyVar(\\\".editReplaceRule.name\\\");\\n    clearMyVar(\\\".editReplaceRule.isRegex\\\");\\n    clearMyVar(\\\".editReplaceRule.pattern\\\");\\n    clearMyVar(\\\".editReplaceRule.replacement\\\");\\n    clearMyVar(\\\".editReplaceRule.first\\\");\\n    //clearMyVar(\\\".editReplaceRule.scope\\\");\\n}));\\nlet ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\nlet id = \\\"#\\\" + new Date().getTime();\\n//let replaceRule = isNew == \\\"true\\\"?{}:ruleList[index];\\nif (isNew == \\\"true\\\") {\\n    replaceRule = {\\n        id: new Date().getTime(),\\n        isEnabled: true,\\n        isRegex: false,\\n    }\\n} else {\\n    replaceRule = ruleList[index];\\n}\\n//首次初始化\\nif(getMyVar(\\\".editReplaceRule.first\\\",\\\"\\\")==\\\"\\\"){\\n    putMyVar(\\\".editReplaceRule.isRegex\\\", \\\"\\\" + replaceRule.isRegex);\\n    putMyVar(\\\".editReplaceRule.first\\\",\\\"1\\\");\\n}\\nlayout.push({\\n    title: \\\"拷贝\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        let att = [\\\"name\\\", \\\"isRegex\\\", \\\"pattern\\\", \\\"replacement\\\"];\\n        let json = {};\\n        att.forEach(key => {\\n            let value = getMyVar(\\\".editReplaceRule.\\\" + key, \\\"\\\");\\n            if (key === \\\"isRegex\\\") {\\n                value = value === \\\"true\\\" ? true : false;\\n            }\\n            json[key] = value;\\n        });\\n        copy(JSON.stringify(json));\\n        return \\\"hiker://empty\\\";\\n    }),\\n    col_type: \\\"text_2\\\"\\n});\\nlayout.push({\\n    title: \\\"粘贴\\\",\\n    url: $(\\\"{{clipboard}}\\\").input(() => {\\n        try {\\n            let json = JSON.parse(input);\\n            if (Array.isArray(json) || json.pattern == undefined) return;\\n            let att = [\\\"name\\\", \\\"isRegex\\\", \\\"pattern\\\", \\\"replacement\\\"];\\n            att.forEach(key => {\\n                putMyVar(\\\".editReplaceRule.\\\" + key, String(json[key]));\\n            });\\n            refreshPage(false);\\n        } catch (e) {\\n            log(e.toString());\\n        }\\n    }),\\n    col_type: \\\"text_2\\\"\\n});\\nlayout.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"替换规则名称\\\",\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getMyVar(\\\".editReplaceRule.name\\\", replaceRule.name),\\n        onChange: 'putMyVar(\\\".editReplaceRule.name\\\",input);'\\n    }\\n});\\n\\nlayout.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"替换规则\\\",\\n    extra: {\\n        titleVisible: false,\\n        type: \\\"textarea\\\",\\n        height: -1,\\n        defaultValue: getMyVar(\\\".editReplaceRule.pattern\\\", replaceRule.pattern),\\n        onChange: 'putMyVar(\\\".editReplaceRule.pattern\\\", input);'\\n    }\\n});\\nlayout.push({\\n    title: \\\"是否使用正则表达式：\\\" + getMyVar(\\\".editReplaceRule.isRegex\\\"),\\n    url: $(\\\"#noLoading#\\\").lazyRule((id) => {\\n        let isRegex = getMyVar(\\\".editReplaceRule.isRegex\\\") === \\\"true\\\" ? false : true;\\n        updateItem({\\n            extra: {\\n                id: id\\n            },\\n            title: \\\"是否使用正则表达式：\\\" + isRegex\\n        });\\n        putMyVar(\\\".editReplaceRule.isRegex\\\", \\\"\\\" + isRegex);\\n        return \\\"hiker://empty\\\";\\n    }, id),\\n    col_type: \\\"text_1\\\",\\n    extra: {\\n        id: id\\n    }\\n});\\nlayout.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"替换为\\\",\\n    extra: {\\n        titleVisible: false,\\n        type: \\\"textarea\\\",\\n        height: -1,\\n        defaultValue: getMyVar(\\\".editReplaceRule.replacement\\\", replaceRule.replacement),\\n        onChange: 'putMyVar(\\\".editReplaceRule.replacement\\\",input);'\\n    }\\n});\\nlayout.push({\\n    title: \\\"保存\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((replaceRule, isNew, index) => {\\n        let pattern = getMyVar(\\\".editReplaceRule.pattern\\\", \\\"\\\");\\n        if (!pattern) {\\n            return \\\"toast://替换规则不能为空\\\";\\n        }\\n        Object.assign(replaceRule, {\\n            name: getMyVar(\\\".editReplaceRule.name\\\", \\\"\\\"),\\n            isRegex: getMyVar(\\\".editReplaceRule.isRegex\\\") === \\\"true\\\" ? true : false,\\n            pattern: pattern,\\n            replacement: getMyVar(\\\".editReplaceRule.replacement\\\", \\\"\\\")\\n        });\\n        let ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n        if (isNew == \\\"true\\\") {\\n            ruleList.push(replaceRule);\\n        } else {\\n            ruleList.splice(index, 1, replaceRule);\\n        }\\n        saveFile(\\\"replaceRule.json\\\", JSON.stringify(ruleList));\\n        back();\\n        return \\\"toast://保存成功\\\";\\n    }, replaceRule, isNew, index),\\n    col_type: \\\"text_center_1\\\",\\n});\\n\\n/*\\nlayout.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"替换范围\\\",\\n    extra: {\\n        titleVisible: false,\\n        type: \\\"textarea\\\",\\n        height: -1,\\n        defaultValue: \\\"\\\",\\n        onChange: 'putMyVar(\\\".editReplaceRule.scope\\\",input);'\\n    }\\n});\\n\\n*/\\nsetResult(layout);\"}]","icon":"https://lanmeiguojiang.com/tubiao/q/58.png"},{"firstHeader":"class","last_chapter_rule":"","title":"工具台","author":"@LoyDgIk","version":0,"type":"other","url":"hiker://bookmark","col_type":"text_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar titles = [\n'剪贴板@@https://netcut.cn/@@https://netcut.cn/favicon.ico',\n'源仓库@@http://ku.mumuceo.com/@@http://ku.mumuceo.com/static/images/lib/haikuo.png',\n'一个木函@@https://web.woobx.cn/@@https://web.woobx.cn/favicon.ico',\n'via插件 @@ http://via-app.cn@@http://via-app.cn/favicon.ico',\n'微点分享@@https://wefocu.com/@@https://wefocu.com/wp-content/uploads/2019/11/8dedb06c85c8a5.png',\n'油猴脚本@@https://greasyfork.org/zh-CN/scripts/@@https://greasyfork.org/assets/blacklogo96-e0c2c76180916332b7516ad47e1e206b42d131d36ff4afe98da3b1ba61fd5d6c.png',\n'一个工具箱@@http://www.atoolbox.net/',\n'云极客工具@@https://www.ygktool.cn/#home',\n'孟坤工具箱@@http://tool.mkblog.cn/',\n'兔二工具@@https://www.tool2.cn/#daohangtxPhone',\n'点亮应用@@https://dianliang521.github.io/dianliangyingyong/index.html',\n'现实君工具箱@@http://tool.uixsj.cn/',\n'NET牛人@@https://ss.netnr.com/',\n'云上应用@@https://www.imcloudapp.com/',\n'精准云工具@@https://jingzhunyun.com/',\n'爱资料工具@@https://www.toolnb.com/',\n'MikuTools@@https://tools.miku.ac/',\n'在线工具箱@@https://tool.lu/',\n\n'传输文本@@https://getnote.cf',\n'文叔叔文件@@https://www.wenshushu.cn/',\n'一个不算糟糕的可私有文本分享平台@@https://pasteme.cn/',\n'阅后即焚@@ https://sesme.lylares.com/',\n'Tmplink@@https://app.tmp.link/index.html?tmpui_page=/',\n'配色网@@https://color.uisdc.com/',\n'取色器@@https://colors.ichuantong.cn/',\n'文本随心改@@https://getnote.cf/',\n'公众号封面@@http://www..com/tools-getWxArticleImages',\n'QQ头像获取@@http://www..com/tools-qqnumberimg',\n'竖排文字生成@@https://m.fuhaoku.net/tool/shupaiwenzi.html',\n'在线摇骰子@@https://math.yunser.com/dice/',\n'B站封面获取@@https://tools.miku.ac/bilibili_cover_get',\n'网页源码查看@@https://tools.miku.ac/get_html',\n'关系计算器@@https://tools.miku.ac/relatives_name',\n'身份证解析@@https://tools.miku.ac/chinese_id',\n'常用电话列表@@https://www.iamwawa.cn/dianhua.html',\n'公众号音频@@http://www.xmyeditor.com/tools/music.html',\n'扩展名对照@@https://shulijp.com/info/dzb/filename.html',\n'对联生成器@@http://www.nicetool.net/app/duilian.html',\n'Base64转换@@http://www.jsons.cn/base64/',\n'实时台风预警@@http://www..com/tools-taifeng',\n'跳转代码生成@@https://www.qtool.net/jumpcode',\n'文本翻转@@http://www.atoolbox.net/Tool.php?Id=759',\n\n'NET壁纸@@https://ss.netnr.com/wallpaper#36',\n'上传图片@@http://aote.frqrjg.top/Ali',\n'路过图床@@https://imgchr.com/',\n'阿里图床@@https://www.wz64.com/aliimg.htm',\n'定稿抠图@@https://www.gaoding.com/koutu?hmsr=zhongcao-kt_zh_phl-koutu---sy-bdqd&utm_medium=&utm_source=zhongcao',\n'素材图@@https://www.logosc.cn/so/',\n'图标下载@@https://www.easyicon.net/',\n'免费多图床@@https://www.rruu.net/',\n'随时图接口@@https://api.lyiqk.cn',\n\n'汉化软件站@@http://www.hanzify.org/',\n'3k资源网@@https://www.3kzy.com/',\n'大眼仔旭@@http://www.dayanzai.me',\n\n'极简插件@@https://chrome.zzzmh.cn',\n'B站视频解析@@https://xbeibeix.com/api/bilibili/',\n'简书@@https://www.jianshu.com/',\n'虾库@@http://www.xiacoo.com/type/ziyuansousuo/',\n'小鸡词典@@https://jikipedia.com/',\n'心灵乌鸡汤@@https://www.wujitang.top/chicks/positive',\n'表情包大全@@https://m.b7.cn/',\n'一句@@https://www.iamwawa.cn/shici.html',\n'期刊杂志@@http://new-qk.lifves.com/',\n'随机小姐姐@@http://www.8la8.cn/tool/xjj/',\n'新佛曰论禅@@http://hi.pcmoe.net/buddha.html',\n'阿虚同学@@http://..com/',\n'西瓜导航@@https://nav.hzwdd.cn/',\n'发现中国@@https://www.ageeye.cn/',\n'草料二维码@@https://cli.im/mob',\n'高速免费接口@@https://api.btstu.cn',\n];\n\nvar t = titles;\nvar res = {};\nvar d = [];\nd.push({\r\n    title: '推荐网站(返回首页)',\n    url: 'hiker://home@A1首页',\r\n    col_type: 'text_1'\r\n});\n\nfor(var i=0;i<t.length && i<4;i++)\n{\n    var k=t[i].split(/\\s*@@\\s*/);\n    if(k.length<2)continue;\n    var r={};\n    r.title=k[0];\n    r.url=k[1];\n    r.pic_url = k[2];\n    r.col_type= 'icon_4';\n    d.push(r);\n}\nfor(var i=4;i<t.length && i<6;i++){\n    var k=t[i].split(/\\s*@@\\s*/);\n    if(k.length<2)continue;\n    var r={};\n    r.title=k[0];\n    r.url=k[1];\n    r.pic_url = k[2];\n    r.col_type= 'icon_2';\n    d.push(r);\n    }\n\nd.push({\r\n    title: '工具箱',\n    url: 'hiker://home@工具台',\r\n    col_type: 'text_1'\r\n});\n\nfor(var i=6;i<t.length;i++)\n{\n   var k=t[i].split(/\\s*@@\\s*/);\n   if(k.length<2)continue;\n   var r={};      \n   var l={};\n   r.title=k[0];\n   r.url=k[1];\n   r.col_type='text_3';\n   d.push(r);\n\n    l.col_type= 'text_1';\nif(i==17)\n    {\n        l.title='实用';\n        l.url= 'hiker://home@工具台',\n        d.push(l);\n    }\nif(i==41)\n    {\n        l.title='图片';\n        l.url= 'hiker://home@工具台',\n        d.push(l);\n    }\nif(i==50)\n    {\n        l.title='软件下载';\n        l.url= 'hiker://home@工具台',\n        d.push(l);\n    }\nif(i==53)\n    {\n        l.title='其他';\n        l.url= 'hiker://home@工具台',\n        d.push(l);\n    }\n}\n\nres.data = d;\nsetHomeResult(res);","searchFind":"","search_url":"","titleColor":"#ffff7000","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"","pages":"[]","icon":""},{"last_chapter_rule":"","title":"龙轩导航","author":"","version":0,"type":"other","url":"http://api.ilxdh.com/navig/classify/list?fid=fyclass;post","col_type":"text_3","class_name":"生活&影视&搜索&软件工具&设计素材&音乐读物&学习提升","class_url":"167&171&172&173&174&176&177","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js: var json = JSON.parse(getResCode());\r\nvar list = json.data;\r\nvar res = {};\r\nvar d = [];\r\nfor (var i = 0; i < list.length; i++) {\r\n    try {\r\n        var r = {};\r\n        var j = list[i];\r\n        r.title = j.name;\r\n        r.col_type = 'text_1';\r\n        d.push(r);\r\n        var items = j.web.map(data => ({\r\n            title: data.name,\r\n            url: data.url\r\n        }));\r\n        d.push.apply(d,items);\r\n    } catch (e) {}\r\n}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":"","search_url":"","titleColor":"#ffff7000","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"","pages":"[]","icon":""},{"last_chapter_rule":"","title":"Jsons.c𝔥","author":"Hood","version":1,"type":"other","url":"http://www.jsons.cn/","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\n//线路列表\nvar tabs = parseDomForArray(html, '.footermap&&ul');\n\n//全部选集列表\nvar conts = parseDomForArray(html, '.footermap&&ul');\n\nfor(var i = 0; i < tabs.length; i++){\n\n//选集列表\nvar list=parseDomForArray(conts[i], 'ul&&a');\n\n//线路名称\nd.push({\ntitle:\"““””<b>\"+'<span style=\"color: #33CC99\">'+parseDomForHtml(tabs[i],'b&&Text')+'</span></b>',\nurl:'toast://点什么点 (｡•ˇ‸ˇ•｡)',\ncol_type: 'text_1'});\n\n//选集名称\nfor(var j in list){\nd.push({\ntitle: parseDomForHtml(list[j],'a&&Text'),\nurl: parseDom(list[j],'a&&href'),\ncol_type: 'text_2'});\n  }\n}\n\nres.data = d;\nsetHomeResult(res);","searchFind":"","search_url":"","titleColor":"#ff13b66a","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","icon":""},{"last_chapter_rule":"","title":"断插测试","author":"JùN&被子","version":0,"type":"other","url":"hiker://empty","col_type":"icon_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\n\n//测试链接\nvar furl1 = 'https://www.iqiyi.com/v_cv03rldpiw.html';\nvar furl2 = 'https://v.youku.com/v_show/id_XNTE5Nzc1MzQ5Ng==';\nvar furl3 = 'https://v.qq.com/x/cover/nbusftujqwczi7y.html';\nvar furl4 = 'https://www.mgtv.com/b/345810/14228677.html';\nvar furl5 = 'https://www.bilibili.com/bangumi/play/ss39104';\nvar furl6 = 'https://www.miguvideo.com/mgs/website/prd/detail.html?cid=715880597';\nvar furl7 = 'https://www.ixigua.com/6816627545807520269';\nvar furl8 = 'https://film.sohu.com/album/9291533.html';\nvar furl9 = 'http://v.pptv.com/show/Sgxh3kasHFq9O6M.html';\nvar furl10 = 'http://www.le.com/ptv/vplay/31517533.html';\nvar furl11 = 'https://vip.1905.com/play/1532576.shtml';\nvar furl12 = 'https://www.fun.tv/vplay/g-313897/';\n\n//断插模块切换显示，建议插入简介之后\nif (!getVar('jxms')) {\n    putVar('jxms', '0');\n}\nd.push({\n    col_type: 'line'\n})\nd.push({\n    col_type: \"rich_text\",\n    title: `当前解析模式为：<a href=\"hiker://empty@lazyRule=.js:putVar('jxms',getVar('jxms')=='1'?'0':'1');refreshPage();'toast://已切换解析模式';\">` + (getVar('jxms') == '1' ? \"断插解析\" : \"默认解析\") + \"</a>\"\n});\nif (getVar('jxms') == '1') {\n    var jsUrl = fetch('hiker://files/cache/MyParseSet.json');\n    if (jsUrl == '' || !fetch(JSON.parse(jsUrl).cj)) {\n        var jsFile = fetch('https://gitee.com/Duan-Nian/Dn/raw/master/hikerview/CloudParse-V2_Dn.js');\n    } else {\n        var jsFile = fetch(JSON.parse(jsUrl).cj);\n    }\n    eval(jsFile);\n    d.push({\n        title: '断插设置',\n        url: setUrl,\n        col_type: 'text_center_1'\n    });\n\n    var lazy = $(\"\").lazyRule(() => {\n        //前段为获取解析链接\n        var furl = input;\n        var iurl = furl; //furl替换为前段获取链接\n        if (iurl.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bili|sohu|pptv|letv|le/)) {\n            eval(fetch(JSON.parse(fetch('hiker://files/cache/MyParseSet.json')).cj));\n            return aytmParse(iurl)\n        } else {\n            putVar('jxms') == '0';            \n            return refreshPage();'toast://此链接不适用断插'\n        }\n    });\n} else if (getVar('jxms') == '0') {\n    //此处加入原解析，注意最后}\n    var lazy = $(\"\").lazyRule(() => {\n        //原站解析模式\n        var csurl = input;\n        try {\n            if (csurl.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bili|sohu|pptv|letv|le/)) {\n                var api = 'https://jx.manmankan.top/api.php';\n                var parse = JSON.parse(request(api, {\n                    body: 'url=' + csurl + '&ac=jx',\n                    method: 'POST'\n                }));\n                var vod = parse.url;\n\n            } else {\n                var vod = csurl;\n            }\n            return vod\n        } catch (e) {\n            return 'toast://检查原站解析！'\n        }\n    });\n    \n}\n//输出测试结果\nd.push({\n    title: '爱奇艺',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/09/8/110_901f2ef37af2fea25e5d9648f551ce31_con_130x130.png',\n    url: furl1 + lazy\n});\n\nd.push({\n    title: '优酷',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/16/9/110_8ff06e0c237760cd57d2508fd98c8414_con_130x130.png',\n    url: furl2 + lazy\n});\n\nd.push({\n    title: '腾讯视频',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/3/106_3a0d212e17cb95e232ffe155460385cb_con_130x130.png',\n    url: furl3 + lazy\n});\n\nd.push({\n    title: '芒果TV',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/6/110_1834d296aa5b5666a7d94b1e3479ae64_con_130x130.png',\n    url: furl4 + lazy\n});\n\nd.push({\n    title: '哔哩哔哩',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/27/4/110_8e2e3d88c45025b380e69817d6fb53b1_con_130x130.png',\n    url: furl5 + lazy\n});\n\nd.push({\n    title: '咪咕',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/13/1/110_0e6bdee42b08304d158d280b49452bc3_con_130x130.png',\n    url: furl6 + lazy\n});\n\nd.push({\n    title: '西瓜视频',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/27/5/110_a86265882ed18c6190566e9ea25f9698_con_130x130.png',\n    url: furl7 + lazy\n});\n\nd.push({\n    title: '搜狐视频',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/9/110_532a51f8431efc377808c1ffff2da36f_con_130x130.png',\n    url: furl8 + lazy\n});\n\nd.push({\n    title: 'PP视频',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/28/5/110_a455b2951227040ee62955edcfb89d72_con_130x130.png',\n    url: furl9 + lazy\n});\n\nd.push({\n    title: '乐视',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/8/2_35b5d4373f4bcba28f39486e4f1164d9_con_130x130.png',\n    url: furl10 + lazy\n});\n\nd.push({\n    title: '1905电影网',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/18/4/110_5f24b1052fed4f7fc73593a8ef27276d_con_130x130.png',\n    url: furl11 + lazy\n});\n\nd.push({\n    title: '风行视频',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/16/4/110_6f6af9f99b2629e51f0b0a33cdff1d9e_con_130x130.png',\n    url: furl12 + lazy\n});\n\nd.push({\n    col_type: 'line'\n})\n\nd.push({\n        title: '修改断插文件',\n        url: 'editFile://hiker://files/rules/js/LocalParse_Dn.js',\n        col_type: 'text_2'\n });\n\nd.push({\n    title: '嗅探解析口测试',\n    url: 'hiker://home@解析口测试',\n    col_type: 'text_2'\n});\n\nsetResult(d);","searchFind":"","search_url":"","titleColor":"#ffff00ff","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","icon":""},{"last_chapter_rule":"","title":"云上应用","author":"ᝰ","version":0,"type":"other","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n/** 无需下载APP，点返回即可。*/\nsetResult([{\n    col_type: \"x5_webview_single\",\n    url: \"https://www.imcloudapp.com/\",\n    desc: \"float&&100%\",\n    extra: {\n        canBack: true\n    }\n}])","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","icon":""},{"last_chapter_rule":"","title":"帅助手√","author":"帅","version":6,"type":"tool","url":"hiker://empty","col_type":"text_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nevalPrivateJS(\"Y7xhthrlg58sxq+PRbBm40+EGJQAbbk8izVyc9dNSxd7JbntNyIcXJe7w/Esp7TFAQRdWGzTOe6RspzZxZpu8ZXYlhzGtS3z5W3PS6NYj11Zgjp8CJEtCjy4vXLRd6yylPmErthg7537qOv4FO5orV5a58pEOKMK6SNpUvzjRfS//FPcB3cFUjLo7KV0nlNRJ9Zn1nB1vm5uNvluQQMgqfJLGH/ns20PAOJ+1ITTK5LBcrcAUfx+fcBl8ETytRGnBesg8gjJb2XtFb+yZNy4jcNpHfDL00OM1qmxmRhlmFU=\")","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"text_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"evalPrivateJS(\"YU3IfxkykvqTXjMRSB/8D34oOUU4GqwCQo5AxWI6XOY0qtT4EFdyb2r9LjhADsC7VhTn7e0LiwfI7Bzohp9DmLaBG/EDPh3Om9WpOthS2r/wI37PiZ8dGpNMI9LczfFJQm3pAQYj4F6X8h01aOnocpQE+MLhmZ1jhHU15lh1Q+b5WVwEpUldvMiV6Xeb/7cb7Y0eI3PMAtv7KcJgMF0bopQE+MLhmZ1jhHU15lh1Q+bZGq1JnoSodBjtzUSZlJALypbl7CLnIUVYBnRcQIcSiMowZGKJwqhPcLLdMUJbstgOB3E540bGnayT/tTTWhohiY/EFvWPiloAMVQwyZf8xhQqRXokO0EDNKRbJNMiaxM=\")","pages":"[{\"col_type\":\"movie_3\",\"name\":\"片源地址\",\"path\":\"fromUrl\",\"rule\":\"var urls = {\\n    爱奇艺:'https://www.iqiyi.com/v_1zp7qgh23kg.html',\\n    优酷:'https://v.youku.com/v_show/id_XNTIwMTI4NDg1Mg==.html',\\n    腾讯:'https://v.qq.com/x/cover/mzc002003ph5sbg.html',\\n    芒果:'https://www.mgtv.com/b/343060/10762029.html',\\n    哔哩哔哩:'https://www.bilibili.com/bangumi/play/ep381217',\\n    搜狐:'https://film.sohu.com/album/9457584.html',\\n    西瓜:'https://www.ixigua.com/6551332125654647310',\\n    PPTV:'http://v.pptv.com/show/TIndWsIomNY5tx8.html',\\n    咪咕:'https://www.miguvideo.com/mgs/website/prd/detail.html?cid=633511743',\\n    乐视:'http://www.le.com/ptv/vplay/75843059.html',\\n    1905:'https://vip.1905.com/play/875740.shtml',\\n    风行:'http://www.fun.tv/vplay/g-304143',\\n}\\n\\nvar fromlist = {};\\nvar sitelist = [];\\nfor(var key in urls){\\n  var host = urls[key].match(/\\\\.(.*?)\\\\//)[1];\\n  var from = host.split('.')[0];\\n  if(from!=\\\"\\\"&&key!=\\\"\\\"){\\n    fromlist[key] = from;\\n    fromlist[from] = key;\\n    sitelist.push(key);\\n  }\\n}\"}]","icon":""},{"last_chapter_rule":"","title":"在线VR站","author":"警告：本小程序仅供海阔视界用户学习交流使用。如有导入，请务必在24小时之内删除！若作它用，后果自负！","version":0,"type":"other","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n/** 无需下载APP，点返回即可。*/\nsetResult([{\n    col_type: \"x5_webview_single\",\n    url: \"https://www.zhijianshang.com/\",\n    desc: \"float&&100%\",\n    extra: {\n        canBack: true\n    }\n}])","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","icon":"#b7ba6b"},{"last_chapter_rule":"","title":"JSON编辑器","author":"永远の明日&道长","version":8,"type":"tool","url":"hiker://empty","col_type":"text_center_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"工具","year_url":"","find_rule":"js:\nlet history = JSON.parse(readFile('history') || '[]'),\n    el = [{\n        desc: '输入JSON或文件路径...',\n        url: $.toString((history) => {\n            let Json = {}\n            try {\n                Json = JSON.parse(input)\n            } catch (e) {\n                Json = JSON.parse(request(input))\n                if (!history.includes(input)) {\n                    history.push(input)\n                    saveFile('history', JSON.stringify(history))\n                }\n            }\n            saveFile('JSONTemp', JSON.stringify({ this: Json }))\n            let extra=/^hiker:|^file:/.test(input)?'JsonPath='+base64Encode(input):'';\n            //log(extra);\n            return 'hiker://page/content?'+extra+'#noHistory##noRecordHistory#'\n        }, history),\n        extra: { Path: ['this']},\n        col_type: 'input'\n    }, {\n        title: '““””<big><b>历史记录 &nbsp</b></big>🗑',\n        url: $(['清空历史记录', '删除单项记录']).select(() => {\n            if (input == '清空历史记录') {\n                deleteFile('history')\n                refreshPage(false)\n            } else {\n                let code = function(his, code) {\n                    return $(['““””' + '返回并应用'.bold().fontcolor('#f44236')].concat(his), 1).select((his, code) => {\n                        if (input == '““””' + '返回并应用'.bold().fontcolor('#f44236')) {\n                            saveFile('history', JSON.stringify(his))\n                            refreshPage()\n                            return\n                        } else {\n                            his.splice(his.indexOf(input), 1)\n                            return code(his, code)\n                        }\n                    }, his, code)\n                }\n                return code(JSON.parse(readFile('history') || '[]'), code)\n            }\n        }),\n        col_type: 'text_1'\n    }]\nhistory.forEach((v) => el.push({\n    title: v,\n    url: $('#noLoading#').lazyRule((url) => {\n        let Json = JSON.parse(request(url))\n        saveFile('JSONTemp', JSON.stringify({ this: Json }))\n        return 'hiker://page/content#noHistory##noRecordHistory#'\n    }, v),\n    extra: { Path: ['this'] ,JsonPath:v},\n}))\nsetResult(el)\n","searchFind":"","search_url":"","group":"#⃣️工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"/*\n\n*/","pages":"[{\"col_type\":\"scroll_button\",\"name\":\"内容载入\",\"path\":\"content\",\"rule\":\"js:\\nsetPageTitle('JSON编辑器');\\neval(JSON.parse(request('hiker://page/functions')).rule)\\nlet AllJson = JSON.parse(readFile('JSONTemp') || '{}'),\\n    Path = MY_PARAMS.Path || JSON.parse(base64Decode(getParam('Path'))),\\n\\t JsonPath = MY_PARAMS.JsonPath,\\n    Json = JSONRecur(AllJson, Path),\\n    Type = Object.prototype.toString.call(Json).slice(8, -1)\\naddListener('onClose', Path.length == 1 ? 'back(false);deleteFile(\\\"JSONTemp\\\")' : 'refreshPage(false)')\\nif(!JsonPath){\\n    try{\\n        JsonPath = base64Decode(getParam('JsonPath'));\\n    }catch(e){\\n        JsonPath='hiker://files/rules/dzHouse/ruleCache/xxx.json';\\n    }\\n}\\nlet el = [{\\n    title: '““””' + (Path.join('.') + ': ').bold().fontcolor('#409eff') + '[' + Type + '] 🖋️',\\n    url: $(['Object', 'Array', 'String', 'Number', 'Boolean', 'Null'], 2, '选择数据类型').select((Path) => {\\n        eval(JSON.parse(request('hiker://page/functions')).rule)\\n        let AllJson = JSON.parse(readFile('JSONTemp') || '{}')\\n        JSONRecur(AllJson, Path, (self) => typeConvert(self, input))\\n        saveFile('JSONTemp', JSON.stringify(AllJson))\\n        refreshPage(false)\\n    }, Path),\\n    col_type: 'text_1',\\n    extra: { lineVisible: false },\\n}, {\\n    title: '✏️修改',\\n    url: $(typeConvert(Json, 'String'), '可清空后，导入新内容覆盖\\\\n可自由选择内容复制').input((Path, Type) => {\\n        eval(JSON.parse(request('hiker://page/functions')).rule)\\n        let AllJson = JSON.parse(readFile('JSONTemp') || '{}')\\n        JSONRecur(AllJson, Path, typeConvert(input, Type))\\n        saveFile('JSONTemp', JSON.stringify(AllJson))\\n        refreshPage(false)\\n    }, Path, Type)\\n}, {\\n    title: '💾保存',\\n    url: $(JsonPath||'hiker://files/', '输入保存文件路径').input((Path) => {\\n        eval(JSON.parse(request('hiker://page/functions')).rule)\\n        let AllJson = JSON.parse(readFile('JSONTemp') || '{}'),\\n            Json = typeConvert(JSONRecur(AllJson, Path), 'String')\\n        writeFile(input, Json)\\n        return 'toast://已保存至' + input\\n    }, Path)\\n}, {\\n    title: '⌨️更多处理',\\n    url: $('self=\\\"\\\"', '用JS对本级内容self进行修改\\\\n大佬级操作，不懂JS慎用').input((Path) => {\\n        eval(JSON.parse(request('hiker://page/functions')).rule)\\n        let AllJson = JSON.parse(readFile('JSONTemp') || '{}')\\n        JSONRecur(AllJson, Path, new Function('self', input + ';return self'))\\n        saveFile('JSONTemp', JSON.stringify(AllJson))\\n        refreshPage(false)\\n    }, Path)\\n}, { col_type: 'line_blank' }]\\n\\nswitch (Type) {\\n    case 'Object':\\n    case 'Array':\\n        eval(JSON.parse(request('hiker://page/' + Type)).rule)\\n        break\\n    default:\\n        el.push({\\n            title: String(Json),\\n            col_type: 'long_text'\\n        })\\n}\\n\\nsetResult(el)\\n\"},{\"col_type\":\"movie_3\",\"name\":\"对象解析\",\"path\":\"Object\",\"rule\":\"el.splice(-2, 0, {\\n    title: '💠新增',\\n    url: $('', '输入新增的键值').input((Path) => {\\n        eval(JSON.parse(request('hiker://page/functions')).rule)\\n        let AllJson = JSON.parse(readFile('JSONTemp') || '{}')\\n        JSONRecur(AllJson, Path, (self) => (self[input] = null, self))\\n        saveFile('JSONTemp', JSON.stringify(AllJson))\\n        return 'hiker://page/content#noHistory##noRecordHistory#?Path=' + base64Encode(JSON.stringify(Path.concat(input)))\\n    }, Path)\\n}, {\\n    title: '📥导入',\\n    url: $('hiker://files/', '输入要批量新增的\\\\n对象JSON或文件路径\\\\n键值相同的会被覆盖').input((Path) => {\\n        eval(JSON.parse(request('hiker://page/functions')).rule)\\n        try {\\n            input = JSON.parse(input)\\n        } catch (e) {\\n            input = JSON.parse(request(input))\\n        }\\n        let AllJson = JSON.parse(readFile('JSONTemp') || '{}')\\n        JSONRecur(AllJson, Path, (self) => Object.assign(self, input))\\n        saveFile('JSONTemp', JSON.stringify(AllJson))\\n        refreshPage(false)\\n    }, Path)\\n})\\nfor (let k in Json) {\\n    let v = Json[k],\\n        vType = Object.prototype.toString.call(v).slice(8, -1)\\n    el.push({\\n        title: '““””' + (k + ': ').bold() + '[' + vType + ']',\\n        desc: typeConvert(v, 'String').slice(0, 200),\\n        url: 'hiker://page/content#noHistory##noRecordHistory#',\\n        col_type: 'text_1',\\n        extra: {\\n            Path: Path.concat(k),\\n            lineVisible: false\\n        }\\n    }, {\\n        title: '✎ 键值',\\n        url: $('', '新的键值').input((key, Path) => {\\n            eval(JSON.parse(request('hiker://page/functions')).rule)\\n            let AllJson = JSON.parse(readFile('JSONTemp') || '{}')\\n            JSONRecur(AllJson, Path, (self) => (self[input] = self[key], delete self[key], self))\\n            saveFile('JSONTemp', JSON.stringify(AllJson))\\n            refreshPage(false)\\n        }, k, Path)\\n    }, {\\n        title: '✘ 删除',\\n        url: $('确定要删除键值[' + k + ']的内容吗？').confirm((key, Path) => {\\n            eval(JSON.parse(request('hiker://page/functions')).rule)\\n            let AllJson = JSON.parse(readFile('JSONTemp') || '{}')\\n            JSONRecur(AllJson, Path, (self) => (delete self[key], self))\\n            saveFile('JSONTemp', JSON.stringify(AllJson))\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, k, Path)\\n    },{\\n        title: '🖨复制键',\\n        url: 'copy://'+k\\n    },\\n    {\\n        title: '🖨复制值',\\n        url: 'copy://'+typeConvert(v, 'String')\\n    },\\n     { col_type: 'line' })\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数组解析\",\"path\":\"Array\",\"rule\":\"el.splice(-2, 0, {\\n    title: '💠新增',\\n    url: $('#noLoading#').lazyRule((Path, lastIndex) => {\\n        eval(JSON.parse(request('hiker://page/functions')).rule)\\n        let AllJson = JSON.parse(readFile('JSONTemp') || '{}')\\n        JSONRecur(AllJson, Path, (self) => (self.push(null), self))\\n        saveFile('JSONTemp', JSON.stringify(AllJson))\\n        return 'hiker://page/content#noHistory##noRecordHistory#?Path=' + base64Encode(JSON.stringify(Path.concat(lastIndex)))\\n    }, Path, Json.length)\\n}, {\\n    title: '📥导入',\\n    url: $('hiker://files/', '输入要批量新增的\\\\n数组JSON或文件路径').input((Path) => {\\n        eval(JSON.parse(request('hiker://page/functions')).rule)\\n        try {\\n            input = JSON.parse(input)\\n        } catch (e) {\\n            input = JSON.parse(request(input))\\n        }\\n        let AllJson = JSON.parse(readFile('JSONTemp') || '{}')\\n        JSONRecur(AllJson, Path, (self) => self.concat(input))\\n        saveFile('JSONTemp', JSON.stringify(AllJson))\\n        refreshPage(false)\\n    }, Path)\\n})\\nfor (let i = 0; i < Json.length; i++) {\\n    let v = Json[i],\\n        vType = Object.prototype.toString.call(v).slice(8, -1)\\n    el.push({\\n        title: '““””' + (i + ': ').bold() + (vType == 'Object' && (v.title || v.name) || '') + ' [' + vType + ']',\\n        desc: typeConvert(v, 'String').slice(0, 200),\\n        url: 'hiker://page/content#noHistory##noRecordHistory#',\\n        col_type: 'text_1',\\n        extra: {\\n            Path: Path.concat(i),\\n            lineVisible: false\\n        }\\n    }, {\\n        title: '⇵ 移动',\\n        url: $(String(i), '要移动到的位置序号').input((index, Path) => {\\n            eval(JSON.parse(request('hiker://page/functions')).rule)\\n            let AllJson = JSON.parse(readFile('JSONTemp') || '{}')\\n            JSONRecur(AllJson, Path, (self) => (self.splice(input, 0, self.splice(index, 1)[0]), self))\\n            saveFile('JSONTemp', JSON.stringify(AllJson))\\n            refreshPage(false)\\n        }, i, Path)\\n    }, {\\n        title: '✘ 删除',\\n        url: $('确定要删除序号[' + i + ']的内容吗？').confirm((index, Path) => {\\n            eval(JSON.parse(request('hiker://page/functions')).rule)\\n            let AllJson = JSON.parse(readFile('JSONTemp') || '{}')\\n            JSONRecur(AllJson, Path, (self) => (self.splice(index, 1), self))\\n            saveFile('JSONTemp', JSON.stringify(AllJson))\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, i, Path)\\n    },\\n    {\\n        title: '🖨复制值',\\n        url: 'copy://'+typeConvert(v, 'String')\\n    },{ col_type: 'line' })\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"公用函数\",\"path\":\"functions\",\"rule\":\"function typeConvert(value, type) {\\n    let vType = Object.prototype.toString.call(value).slice(8, -1)\\n    switch (type) {\\n        case 'Object':\\n            switch (vType) {\\n                case 'Object':\\n                    return value\\n                case 'Array':\\n                    return value.reduce((obj, v, i) => {\\n                        obj[i] = value[i]\\n                        return obj\\n                    }, {})\\n                case 'String':\\n                    try {\\n                        return JSON.parse(value)\\n                    } catch (e) { return {} };\\n                default:\\n                    return {}\\n            };\\n        case 'Array':\\n            switch (vType) {\\n                case 'Object':\\n                    return Object.keys(value).map((k) => value[k])\\n                case 'Array':\\n                    return value\\n                case 'String':\\n                    try {\\n                        return JSON.parse(value)\\n                    } catch (e) { return [] };\\n                default:\\n                    return []\\n            };\\n        case 'String':\\n            switch (vType) {\\n                case 'Object':\\n                case 'Array':\\n                    return JSON.stringify(value)\\n                default:\\n                    return String(value)\\n            };\\n        case 'Number':\\n            return Number(value) || 0\\n        case 'Boolean':\\n            try { value = eval(value) } catch (e) {}\\n            return Boolean(value)\\n        case 'Null':\\n            return null\\n    }\\n}\\n\\nfunction JSONRecur(json, path, value, isCode) {\\n    if (path.length == 1) {\\n        if (value === undefined) {\\n            return json[path[0]]\\n        } else if (typeof value == 'function') {\\n            json[path[0]] = value(json[path[0]])\\n        } else json[path[0]] = value\\n    } else {\\n        return JSONRecur(json[path[0]], path.slice(1), value, isCode)\\n    }\\n}\\n\"},{\"col_type\":\"text_center_1\",\"name\":\"对外接口\",\"path\":\"interface\",\"rule\":\"js:\\n/*\\n入口示例\\n{ url: 'hiker://page/interface#noHistory##noRecordHistory#?rule=JSON编辑器', extra: { Json: JSON对象或字符串或文件地址 } }\\n{ url: 'hiker://page/interface#noHistory##noRecordHistory#?rule=JSON编辑器&Json='+base64Encode(JSON字符串或文件地址)) }\\n*/\\nsetPageTitle('JSON编辑器')\\nlet Json = MY_PARAMS.Json || base64Decode(getParam('Json'));\\nlet JsonPath;\\ntry{\\n  JsonPath = base64Decode(getParam('Json'));\\n}catch(e){JsonPath=''}\\nif (typeof Json != 'object')\\n    try {\\n        Json = JSON.parse(Json)\\n    } catch (e) {\\n        try{\\n        Json = JSON.parse(request(Json));\\n        }catch(e){\\n            Json='null';\\n        }\\n    }\\n\\nvar d=[];\\nif(Json!=='null'){\\n    saveFile('JSONTemp', JSON.stringify({ this: Json }))\\nJson = JSON.stringify(Json, null, 2)\\nif(Json.length > 10000) Json = Json.slice(0, 9999) + '\\\\n\\\\n......'\\n    d.push({\\n    title: '““””<b>点我开始编辑Json',\\n    desc: '““””<b>预览',\\n    url: 'hiker://page/content#noHistory##noRecordHistory#',\\n    extra: { Path: ['this'],JsonPath:JsonPath },\\n})\\n}else{\\n    d.push({\\n        title:'JSON文件错误，请用其他编辑器编辑',\\n        url:'hiker://empty'\\n    })\\n}\\nd=d.concat([{title:'视界编辑器编辑',col_type:'text_2', url:'editFile://'+JsonPath},\\n{title:'外部查看编辑',col_type:'text_2',url:'openFile://'+JsonPath}\\n,{ title: Json, col_type: 'long_text' }])\\n\\nsetResult(d);\\n\"}]","icon":"https://img.icons8.com/?format=png&id=6or30FVdPylJ&size=96"},{"last_chapter_rule":"","title":"道长仓库Pro","author":"@LoyDgIk","version":122,"type":"tool","url":"hiker://empty","col_type":"icon_2_round","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n    const {\n        getApi,\n        color,\n        small,\n        getFile,\n        htmlTag,\n        api,\n        md\n    } = $.require(\"hiker://page/utiliy\");\n\nconst lsg=$.require(\"hiker://page/localStorage?rule=道长仓库Pro\");\nlet classA = getVar(\"Warehouse.class\", \"0\");\nlet listUrl = getApi(\"usersUrl\") + classA,\n    myUrl = getApi(\"devSelf\");\n    // myUrl = getApi(\"rulesAllUrl\");\nputVar(\"Warehouse.filter\", \"\");\nvar noWait=true;//无需重试\nvar timeout=500;\nvar tmp_headers={\n    timeout:timeout\n};\ntry{\nvar userList = JSON.parse(request(listUrl,tmp_headers)).result,\n    nowCon = 0,\n    ruleCount = JSON.parse(request(getApi(\"ruleCountUrl\"),tmp_headers)).result;\n}catch(e){\n    noWait=false;\n    setResult([{\n        title:'仓库同时访问量过大或网络差，繁忙中...\\n请耐心等待稍后再试',\n        desc:'点击尝试重新访问',\n        col_type:'text_1',\n        url:$('#noLoading#').lazyRule(()=>{\n            refreshPage(false);\n            return 'toast://已刷新'\n        })\n    }]);\n}\nif(noWait){\nlet data = [];\nlet classTab = [\n    [\"上次活跃\", \"0\"],\n    [\"规则数\", \"1\"],\n    [\"注册时间\", \"-1\"]\n]\nfor (let item of classTab) {\n    data.push({\n        title: item[1] === classA ? \"““\" + item[0] + \"””\" : item[0],\n        url: $(\"#noLoading#\").lazyRule((key) => {\n            putVar(\"Warehouse.class\", key);\n            refreshPage(false);\n            return \"hiker://empty\";\n        }, item[1]),\n        col_type: \"scroll_button\"\n    });\n}\ndata.push({\n    title: \"全部规则\",\n    url: \"hiker://page/AllPublicRule?url=hiker://empty#fypage#noHistory##noRecordHistory#\",\n    col_type: \"scroll_button\"\n});\ndata.push({\n    title: \"刷新依赖\",\n    url: $('#noLoading#').lazyRule((jsonUrl)=>{\n        jsonUrl = jsonUrl+'2505';\n        // log(jsonUrl);\n        let text = request(jsonUrl);\n        if(!/version/.test(text)){\n            return 'toast://服务器正忙,请稍候再试...'\n        }\n        deleteCache(jsonUrl);\n        try {\n            require(jsonUrl);\n            confirm({title:'刷新成功提示',content:\"toast://已刷新,当前版本信息:\\n\"+JSON.stringify(version)})\n            return 'hiker://empty'\n        }catch (e) {\n            return 'toast://糟糕，本地缓存插件被清除了，但是服务器通讯失败!'\n        }\n    },getApi(\"importUrl\")),\n    col_type: \"scroll_button\"\n});\ndata.push({\n    title:\"通免:\"+color(lsg.getItem(\"通免\",\"X5\"),\"#ff7000\"),\n    col_type:\"scroll_button\",\n    url:$('#noLoading#').lazyRule(()=>{\n        const lsg=$.require(\"hiker://page/localStorage?rule=道长仓库Pro\");\n        if(lsg.getItem(\"通免\",\"X5\")==\"X5\"){\n            lsg.setItem(\"通免\",\"WEB\");\n        }else{\n            lsg.setItem(\"通免\",\"X5\");\n        }\n        refreshPage(false);\n        return \"toast://已设置仓库通免模式为:\"+lsg.getItem(\"通免\");\n    })\n});\ndata.push({\n    title:color(\"仓库公告\",\"#ff7000\"),\n    col_type:\"scroll_button\",\n    url:$('hiker://empty#noHistory##noRecordHistory#').rule((md)=>{\n        require(md);\n        let d = [];\n        let 仓库公告=\"暂无公告\";\n        try{\n            仓库公告=fetch('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/仓库公告.md');\n        }catch(e){}\n        if(仓库公告) {\n            d.push({\n                title: marked.parse(仓库公告),\n                col_type: 'rich_text',\n                url: 'hiker://empty'\n            });\n        }\n        setResult(d);\n    },md)\n});\n\ndata.push({\n    title:color(\"升级仓库\",\"#15ab21\"),\n    col_type:\"scroll_button\",\n    url:$('#noLoading#').lazyRule(()=>{\n        const {getApi} = $.require(\"hiker://page/utiliy\");\n        let ruleHead = '海阔视界首页频道规则【道长仓库Pro】￥home_rule_url￥';\n        let url = getApi('importUrl')+\"1094\";\n        let importUrl = 'rule://'+base64Encode(ruleHead+url);\n        return importUrl\n    })\n});\n\naddListener('onClose', $.toString(() => {\n    clearVar(\"Warehouse.class\");\n}));\nlet {\n    username,\n    password,\n    user\n} = getFile();\n\nlet is_login = false;\nlet is_manager = false;\nif (username !== void 0 && password !== void 0) {\n    myUrl += '?qq=' + username + '&password=' + password;\n    let code_str = request(myUrl,tmp_headers);\n    let code = {};\n    try{\n        code=JSON.parse(code_str);\n    }catch(e){}\n    if (code.status === 0&& code.result.active) {\n        is_login = true;\n        if(code.result.is_manager){\n            is_manager = true;\n            putVar('house.is_manager','真');\n            putVar('house.username',username);\n            putVar('house.password',password);\n        }else{\n            putVar('house.is_manager','');\n            clearVar('house.username');\n            clearVar('house.password');\n        }\n    }\n}\nif (is_login) {\n    try{\n    nowCon = JSON.parse(request(getApi(\"nowConUrl\"),tmp_headers)).result;\n    }catch(e){\n        nowCon='未知';\n    }\n    let devData = userList.find(item => item.qq === username);\n    data.push({\n        title: '<strong><span style=\"color: #ff7000\">' + devData.name + '</span></strong>&nbsp;&nbsp;&nbsp;&nbsp;<small><u>规则管理 ></u></small>',\n        pic_url: devData.avatar,\n        col_type: \"avatar\",\n        url: \"hiker://page/devManage#noHistory##noRecordHistory#\",\n        extra: {\n            //username: username,\n            //password: password,\n            dev: devData\n        }\n    });\n    data.push({\n        col_type: 'text_1',\n        title: small(\"现有 \" + color(userList.length, \"#ff7000\") + \" 名开发者，\" + color(ruleCount[0], \"#ff7000\") + \" 条公开规则，\" + color(ruleCount[1], \"#ff7000\") + \" 条集芳阁规则。在线:\"+color(nowCon, \"#ff7000\")),\n        url: \"toast://喵喵喵?\",\n    });\n} else {\n    data.push({\n        title: small(color(\"开发者登录\", \"#00BFFF\")),\n        col_type: 'text_center_1',\n        desc: small(\"现有\" + color(userList.length, \"#ff7000\") + \"名开发者，\" + color(ruleCount[0], \"#ff7000\") + \"条公开规则，\" + color(0, \"#ff7000\") + \"条集芳阁规则。\"),\n        url: \"hiker://page/devLogin\"\n    });\n}\nif (Array.isArray(user) && user.length === 2) {\n    let userlogin = request(api.dis_login, {\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"params\": {\n                \"qq\": user[0],\n                \"auth_code\": user[1]\n            }\n        }),\n        method: 'POST',\n        timeout:timeout\n    });\n    userlogin = JSON.parse(userlogin).result;\n    if (userlogin.status === 0) {\n        userlogin = userlogin.result\n        data.push({\n            title: userlogin.name + \"&nbsp;&nbsp;\" + userlogin.qq + \"&nbsp;&nbsp;&nbsp;&nbsp;<small><u>更换账号 ></u></small>\",\n            col_type: 'avatar',\n            pic_url: userlogin.avatar_url,\n            url: \"hiker://page/Userregistration\"\n        });\n        data.splice(3,0,{\n            title: userlogin.has_reply?\"🆕回复\":\"🔔回复\",\n            url: \"hiker://page/MyReply?url=hiker://empty#fypage#noHistory##noRecordHistory#\",\n            col_type: \"scroll_button\",\n            extra:{\n                auth_code:user[1],\n                qq:user[0]\n            }\n        });\n    } else {\n        data.push({\n            title: userlogin.detail,\n            col_type: 'text_center_1',\n            desc: \"““””<small><u>重新获取验证码 ></u></small>\",\n            url: \"hiker://page/Userregistration\"\n        });\n    }\n} else {\n    data.push({\n        title: \"评论登录/注册\",\n        col_type: 'text_center_1',\n        desc: \"\",\n        url: \"hiker://page/Userregistration\"\n    });\n}\nfor (var item of userList) {\n    data.push({\n        title: item.name + \"(\" + item.rule_num + \")\",\n        desc: item.id + ':' + item.nick_name,\n        pic_url: item.avatar,\n        url: \"hiker://page/rules#noHistory#\",\n        extra: {\n            avatarUrl: item.avatar,\n            qq: item.qq,\n            id:item.id,\n            can_upload:item.can_upload\n        }\n    });\n}\n\ndata.push({\n    col_type: 'long_text'\n});\nsetResult(data);\nlet img = [\n    [\n        \"hiker://files/icon/赞.svg\", \"https://bafybeiaeetwbc3thoy22y5zd7al6rndeqbrbwhszqb6oitnf7a5zvsz5pe.ipfs.cf-ipfs.com/\"\n    ],\n    [\n        \"hiker://files/icon/踩.svg\", \"https://bafybeiehxynphaafe4mukacs7we4d6lrb35kppdiffjv4vwnsq22nfqnl4.ipfs.cf-ipfs.com/\"\n    ],\n    [\n        \"hiker://files/icon/评论.svg\", \"https://bafybeifhxi5rdnxq5xly7r4qdbwico2343smelxdqoytalguctgc2ojsdy.ipfs.cf-ipfs.com/\"\n    ]\n]\nfor (let item of img) {\n    if (!fileExist(item[0])) {\n        writeFile(item[0], request(item[1]));\n    }\n}\n}","searchFind":"js:\nvar d = [];\nconst {\n    api,\n    getApi,\n    localRuleVer    \n} = $.require(\"hiker://page/utiliy\");\nvar html = request(getApi(\"search\") + \"?key=\" + MY_URL.replace(\"hiker://empty#\", \"\")); // 获取源码\nvar rule_list = JSON.parse(html).result;\nlet filter = getVar(\"Warehouse.filter\", \"\");\nif (filter !== \"\") {\n    rule_list = rule_list.filter(item => item.author === filter);\n}\nif (rule_list.length === 0) {\n    d.push({\n        title: '共搜索到' + rule_list.length + \"条记录\",\n        desc: '详情请找道长,qq 434857005',\n        url: \"hiker://empty\",\n        col_type: 'text_center_1'\n    });\n}\nlet homeList = JSON.parse(request(api.home));\n\nfor (let item of rule_list) {\n    //let lver=localRuleVer(homeList, item);\n    let label = \"\",\n        lver = -2;\n    if (item.data_type === \"home_rule_url\") {\n        lver = localRuleVer(homeList, item);\n        if (lver === -1) {\n            label = \"🆕\";\n        } else if (lver < item.ver) {\n            label = \"🆙\";\n        }\n    }\n    d.push({\n        title: label+item.name,\n        desc: item.type,\n        content: item.author/*+\"\\n本地版本:\"+lver+\"\\t\\t云端版本:\"+item.ver*/+ '\\n更新于:' + item.last_update,\n        url: \"hiker://page/ruleDetail#noHistory##noRecordHistory#\",\n        extra: {\n            lver: lver,\n            id: item.id\n        },\n        pic_url: item.pic_url\n    });\n\n}\n\nsetResult(d);","search_url":"hiker://empty#**","titleColor":"#ff228be6","group":"#⃣️工具","detail_col_type":"text_1","detail_find_rule":"","sdetail_col_type":"text_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"utiliy\",\"rule\":\"js:\\nlet host = \\\"http://hiker.nokia.press\\\";\\n//let host = \\\"http://192.168.3.94:8079\\\";\\nlet home = base64Decode(\\\"aGlrZXI6Ly9ob21l\\\");\\nvar api = {\\n    host: host+\\\"/hikerule\\\",\\n    usersUrl: \\\"/dev/users?order=\\\", //用户列表\\n    ruleCountUrl: \\\"/dev/rulecount\\\", //获取规则数量\\n    rulesUrl: \\\"/dev/get\\\", //用户对应的规则列表仅仅获取公开\\n    rulesAllUrl: \\\"/dev/getall\\\", //开发者对应的规则列表可获取私有\\n    devSelf:'/dev/getself',//获取开发者信息\\n    manCanUpload:'/set_can_upload/',//超管设置开发者是否可上传\\n    manRuleSafe:'/set_rule_safe/',//超管设置规则安全性\\n    manRuleGood:'/set_rule_good/',//超管设置规则优质性\\n    importUrl: \\\"/rulelist.json?id=\\\", //规则详情可导入\\n    infoSetUrl: \\\"/dev/set_info\\\",\\n    nowConUrl: \\\"/sql_info/get_now_con\\\",\\n    infoGetUrl: \\\"/dev/get_info?name=\\\",\\n    settingsGetUrl: \\\"/dev/get_settings?name=\\\",\\n    gupload: \\\"/dev/gupload\\\",\\n    gtimeover: \\\"/dev/gtimeover\\\",\\n    getbyid: \\\"/dev/getbyid\\\",\\n    ruleListJson: \\\"/rulelist.json\\\",\\n    auth: \\\"/dev/get_auth\\\",\\n    timeover: \\\"/dev/timeover\\\",\\n    share: \\\"/dev/share\\\",\\n    genAuth: \\\"/dev/gen_auth\\\",\\n    deleteUrl: \\\"/dev/delete\\\",\\n    jsonList: \\\"/dev/json_list\\\",\\n    search: \\\"/dev/search\\\",\\n    new_dev: \\\"/dev_regist/new\\\",\\n    new_getId: \\\"/dev_regist/get_id\\\",\\n    new_confirm: \\\"/dev_regist/confirm\\\",\\n    modify_pwd: \\\"/modify/password\\\",\\n    modify_name: \\\"/modify/name\\\",\\n    modify_ava: \\\"/modify/avatar\\\",\\n    user: \\\"/dev/user/\\\",\\n    get_rule_note: \\\"/modify/get_rule_note/\\\",\\n    set_rule_pic: \\\"/modify/rule_pic/\\\",\\n    set_rule_note: \\\"/modify/rule_note/\\\"\\n}\\n$.exports.range = function(m, n) {\\n    return Math.floor(Math.random() * (m - n + 1) + n);\\n}\\n$.exports.mapColType = function(target, type, n) {\\n    for (let i = 0; i < n; i++) {\\n        target.push({\\n            col_type: type\\n        });\\n    }\\n}\\nvar getApi = function(k) {\\n    return api.host + api[k];\\n};\\n$.exports.getApi=getApi;\\n$.exports.md=getApi('importUrl')+\\\"3187\\\";\\n$.exports.localRuleVer = function(localRuleList, rule) {\\n    let localRule;\\n    for (let i = 0; i < localRuleList.length; i++) {\\n        let item = localRuleList[i];\\n        let au = item.author || \\\"\\\";\\n        let sameAu=au.length > 0 && rule.author.includes(au);\\n        sameAu=true;//不判断作者默认为true\\n        if (item.title === rule.name && sameAu) {\\n            localRule = item;\\n            break;\\n        }\\n    }\\n    if (localRule === void 0) {\\n        return -1;\\n    } else {\\n        return localRule.version;\\n    }\\n}\\n$.exports.color = function(text, color) {\\n    text += \\\"\\\";\\n    if (text.indexOf(\\\"““””\\\") === 0) {\\n        text.replace(\\\"““””\\\", \\\"\\\");\\n    }\\n    return \\\"““””<font color='\\\" + color + \\\"'>\\\" + text + \\\"</font>\\\";\\n}\\n\\nfunction htmlTag(tag, text) {\\n    text += \\\"\\\";\\n    if (text.indexOf(\\\"““””\\\") === 0) {\\n        text.replace(\\\"““””\\\", \\\"\\\");\\n    }\\n    return \\\"““””\\\" + \\\"<\\\" + tag + \\\">\\\" + text + \\\"</\\\" + tag + \\\">\\\";\\n\\n}\\n\\nfunction getNowFormatDate() {\\n            let date = new Date();\\n            let seperator1 = \\\"-\\\";\\n            let seperator2 = \\\":\\\";\\n            let month = date.getMonth() + 1;\\n            let strDate = date.getDate();\\n            let strHours = date.getHours();\\n            let strMinutes = date.getMinutes();\\n            let strSeconds = date.getSeconds()+1;\\n            if (month >= 1 && month <= 9) {\\n                month = \\\"0\\\" + month\\n            }\\n            if (strDate >= 0 && strDate <= 9) {\\n                strDate = \\\"0\\\" + strDate\\n            }\\n            if (strHours >= 0 && strHours <= 9) {\\n                strHours = \\\"0\\\" + strHours\\n            }\\n            if (strMinutes >= 0 && strMinutes <= 9) {\\n                strMinutes = \\\"0\\\" + strMinutes\\n            }\\n            if (strSeconds >= 0 && strSeconds <= 9) {\\n                strSeconds = \\\"0\\\" + strSeconds\\n            }\\n            //let currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate + \\\" \\\" + strHours + seperator2 + strMinutes + seperator2 + strSeconds;\\n            let currentdate = (date.getFullYear()-2020)+''+ month +''+ strDate +''+ strHours+'' + strMinutes +''+ Math.ceil(strSeconds/7);\\n            return parseInt(currentdate)\\n        }\\n$.exports.getNowFormatDate = getNowFormatDate;\\n$.exports.htmlTag = htmlTag;\\n$.exports.small = function(text) {\\n    return htmlTag(\\\"small\\\", text);\\n}\\n$.exports.getFile = function() {\\n    var File = request(\\\"hiker://files/WarehouseUSER.json\\\") || \\\"{}\\\";\\n    try {\\n        return JSON.parse(File);\\n    } catch (e) {\\n        writeFile(\\\"hiker://files/WarehouseUSER.json\\\", \\\"{}\\\");\\n        return {};\\n    }\\n}\\n$.exports.getUserDate =function(){\\n    var File = request(\\\"hiker://files/WarehouseUSERA.json\\\") || \\\"[]\\\";\\n    try {\\n        return JSON.parse(File);\\n    } catch (e) {\\n        writeFile(\\\"hiker://files/WarehouseUSERA.json\\\", \\\"[]\\\");\\n        return [];\\n    }\\n}\\n$.exports.existFile = function(spath, ipath, headers) {\\n    let scode = request(spath);\\n    if (!scode) {\\n        writeFile(spath, request(ipath, headers));\\n    }\\n}\\n\\nlet newApi = {\\n    \\\"dis_new\\\": \\\"/hikerule/new_rule_discuss/\\\",\\n    \\\"dis_verify\\\": \\\"/hikerule/rule_discuss/get_yzm\\\",\\n    \\\"dis_get\\\": \\\"/hikerule/rule_discuss/\\\",\\n    \\\"dis_set\\\": \\\"/hikerule/modify/can_discuss/\\\",\\n    \\\"dis_new_user\\\": \\\"/hikerule/rule_discuss/new_user\\\",\\n    \\\"dis_login\\\":\\\"/hikerule/rule_discuss/user_login\\\",\\n    \\\"dis_dev_discuss\\\":\\\"/hikerule/modify/dev_can_discuss\\\",\\n    \\\"dis_dev_control\\\":\\\"/hikerule/rule_discuss/remove/\\\",\\n    \\\"all_rule\\\":\\\"/hikerule/get_rules\\\",\\n    \\\"dis_get_reply\\\":\\\"/hikerule/get_reply_rule_discuss\\\",\\n    \\\"dis_reply\\\":\\\"/hikerule/dev_new_rule_discuss/\\\",\\n}\\n\\nfunction setApi(object) {\\n    let target = {};\\n    for (let key in object) {\\n        target[key]=host+object[key]\\n    }\\n    return target;\\n}\\n\\n$.exports.api = setApi(newApi);\\n$.exports.api.host=host;\\n$.exports.api.home=home;\"},{\"col_type\":\"movie_3\",\"name\":\"开发者登录\",\"path\":\"devLogin\",\"rule\":\"js:\\nsetPageTitle(\\\"开发者登录\\\");\\nconst {\\n    getApi,\\n    htmlTag,\\n    mapColType,\\n    small,\\ngetFile\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nvar data = [];\\naddListener('onClose', $.toString(()=>{\\n    clearVar(\\\"WarehouseUsername\\\");\\n    clearVar(\\\"WarehousePassword\\\");\\n}))\\ndata.push({\\n    title: '账号',\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('WarehouseUsername',''),\\n        type:\\\"number\\\",\\n        onChange: 'putVar(\\\"WarehouseUsername\\\",input)'\\n    }\\n}, {\\n    title: '密码',\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('WarehousePassword', ''),\\n        type: \\\"password\\\",\\n        onChange: 'putVar(\\\"WarehousePassword\\\",input)'\\n    }\\n});\\n\\ndata.push({\\n    title:\\\"&nbsp;&nbsp;<a href='hiker://page/Register'>注册</a>\\\",\\n    col_type:\\\"rich_text\\\"\\n});\\nmapColType(data, \\\"line_blank\\\", 1);\\nlet user = getFile();\\ndata.push({\\n    title: htmlTag(\\\"b\\\", \\\"登录\\\"),\\n    url: $().lazyRule((url, f)=> {\\n        let username = getVar('WarehouseUsername', ''),\\n            password = getVar('WarehousePassword', '');\\n        if(username === \\\"\\\" && password ===\\\"\\\"){\\n            return \\\"toast://账号和密码不能为空\\\"\\n        }\\n        let myUrl = url + '?qq=' + username + '&password=' + password;\\n        let code_str = request(myUrl);\\n        let code = JSON.parse(code_str);\\n        if (code.status == 0) {\\n            f.username=username;\\n            f.password=password\\n            writeFile('hiker://files/WarehouseUSER.json', JSON.stringify(f));\\n            back();\\n            return \\\"toast://登录成功\\\";\\n        }else{\\n            return \\\"toast://账号或密码错误\\\";\\n        }\\n    }, getApi(\\\"rulesAllUrl\\\"),user),\\n    col_type: 'text_center_1'\\n});\\nsetResult(data);\"},{\"col_type\":\"icon_2_round\",\"name\":\"开发者管理\",\"path\":\"devManage\",\"rule\":\"js:\\nsetPageTitle(\\\"规则管理\\\");\\naddListener('onClose', 'clearVar(\\\"Warehouse.back\\\",\\\"\\\");');\\nif (getVar(\\\"Warehouse.back\\\") === \\\"1\\\") {\\n    back();\\n}\\nconst {\\n    getApi,\\n    color,\\n    small,\\n    getFile,\\n    existFile,\\n    mapColType,\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    dev\\n} = MY_PARAMS;\\nlet {\\n    username,\\n    password,\\n} = getFile();\\n//existFile(\\\"hiker://files/rules/dzHouse/html/开发者分享.html\\\", \\\"https://erp.scwinbao.com/hikerule/rulelist.json?id=539\\\");\\nlet ruleList = JSON.parse(request(getApi(\\\"rulesAllUrl\\\") + '?qq=' + username + '&password=' + password)).result;\\nlet MOBILE_UA = 'Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Mobile Safari/537.36';\\nlet infoSetUrl = getApi(\\\"infoSetUrl\\\");\\nlet infoGetUrl = getApi(\\\"infoGetUrl\\\") + username;\\nlet settingsGetUrl = getApi(\\\"settingsGetUrl\\\") + username;\\nputMyVar(\\\"dev_set_info\\\", [username, password, infoSetUrl, MOBILE_UA, infoGetUrl].join(\\\"$$\\\"));\\nlet data = [];\\ndata.push({\\n    title: '““””<big>仓库设置</big>&nbsp;&nbsp;&nbsp;<small><u>（ 个人资料 >）</u></small>',\\n    desc: '““””您共有 <span style=\\\"color: #ff7000\\\">' + ruleList.length + '</span>' + \\\" 条规则。\\\\n点击规则可进行分享、删除、导入操作及查看详情\\\",\\n    url: \\\"hiker://page/PersonalData#noHistory##noRecordHistory#\\\",\\n    extra:{id:dev.id},\\n    col_type: 'text_1'\\n});\\nmapColType(data, \\\"line\\\", 2);\\ndata.push({\\n    title: small(color(\\\"更改公告✍\\\", \\\"#34b1ff\\\")),\\n    // url: \\\"x5://file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/dev_info_edit.html\\\",\\n    url: \\\"hiker://page/devInfoEdit\\\",\\n    col_type: 'text_3'\\n});\\ndata.push({\\n    title: small(color(\\\"更多分享📲\\\", \\\"#34b1ff\\\")),\\n    //url: \\\"x5://file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/开发者分享.html\\\",\\n    url: \\\"hiker://page/moreShare\\\",\\n    col_type: 'text_3'\\n});\\ndata.push({\\n    title: small(color(\\\"升级依赖📥\\\", \\\"#34b1ff\\\")),\\n    url: $(\\\"升级会重新从仓库拉取相关的静态页面到本地\\\\n确认升级吗?\\\").confirm((host) => {\\n        writeFile(\\\"hiker://files/rules/dzHouse/html/开发者分享.html\\\", request(host+'/hikerule/rulelist.json?id=539'));\\n        writeFile(\\\"hiker://files/rules/dzHouse/html/dev_info_edit.html\\\", request(host+'/hikerule/rulelist.json?id=402'));\\n        writeFile(\\\"hiker://files/rules/dzHouse/html/dev_info_get.html\\\", request(host+'/hikerule/rulelist.json?id=404'));\\n        refreshPage(false);\\n        return \\\"toast://已重置开发者分享,简介查看,简介编辑等静态文件\\\";\\n    },api.host),\\n    col_type: 'text_3'\\n});\\nlet devSetBack;\\ntry {\\n    devSetBack = JSON.parse(request(settingsGetUrl));\\n} catch (e) {\\n    devSetBack = {};\\n}\\n\\nfunction setSettingItem(basic) {\\n    let temp = {\\n        title: basic.title,\\n        col_type: basic.col_type,\\n        url: $(basic.confirm).confirm((url, msg) => {\\n            let back = request(url);\\n            let ret = JSON.parse(back);\\n            if (ret.status == 0) {\\n                refreshPage(true);\\n                return \\\"toast://\\\" + msg[0];\\n            } else {\\n                refreshPage(false);\\n                return \\\"toast://\\\" + msg[1] + \\\"\\\\n\\\" + ret.detail;\\n            }\\n        }, basic.url, basic.msg)\\n    };\\n    return temp;\\n}\\nif (devSetBack.status == 0) {\\n    let devSettings = devSetBack.result;\\n    let share = {\\n        col_type: \\\"text_3\\\"\\n    };\\n    if (devSettings.share_public) {\\n        share.title = small(color(\\\"公开上传\\\", \\\"green\\\") + color(\\\"(私藏)\\\", \\\"#00bfff\\\"));\\n        share.url = getApi(\\\"gupload\\\") + \\\"?qq=\\\" + username + \\\"&password=\\\" + password + \\\"&flag=1\\\";\\n        share.confirm = \\\"是否确认私藏以后提交的规则?\\\";\\n        share.msg = [\\\"已私藏\\\", \\\"私藏失败\\\"];\\n    } else {\\n        share.title = small(color(\\\"私密上传\\\", \\\"red\\\") + color(\\\"(公开)\\\", \\\"#adff2f\\\"));\\n        share.url = getApi(\\\"gupload\\\") + \\\"?qq=\\\" + username + \\\"&password=\\\" + password;\\n        share.confirm = \\\"是否确认公开以后提交的规则?\\\";\\n        share.msg = [\\\"已公开\\\", \\\"公开失败\\\"];\\n    }\\n    data.push(setSettingItem(share));\\n    let timeOver = {\\n        col_type: \\\"text_3\\\"\\n    };\\n    if (devSettings.time_over) {\\n        timeOver.title = small(color(\\\"短时秘钥\\\", \\\"green\\\") + color(\\\"(永久)\\\", \\\"#00bfff\\\"));\\n        timeOver.url = getApi(\\\"gtimeover\\\") + \\\"?qq=\\\" + username + \\\"&password=\\\" + password + \\\"&flag=1\\\";\\n        timeOver.confirm = \\\"是否确认以后的私藏规则分享不过期?\\\";\\n        timeOver.msg = [\\\"已设为永久\\\", \\\"设为永久失败\\\"];\\n    } else {\\n        timeOver.title = small(color(\\\"永久秘钥\\\", \\\"red\\\") + color(\\\"(过期)\\\", \\\"#adff2f\\\"));\\n        timeOver.url = getApi(\\\"gtimeover\\\") + \\\"?qq=\\\" + username + \\\"&password=\\\" + password;\\n        timeOver.confirm = \\\"确认要以后分享的私藏规则自动到期?\\\";\\n        timeOver.msg = [\\\"已设为过期\\\", \\\"设为过期失败\\\"];\\n    }\\n    data.push(setSettingItem(timeOver));\\n    let discuss = {\\n        col_type: \\\"text_3\\\"\\n    };\\n    if (devSettings.can_discuss) {\\n        discuss.title = small(color(\\\"允许评论\\\", \\\"red\\\") + color(\\\"(不许)\\\", \\\"#adff2f\\\"));\\n        discuss.url = api.dis_dev_discuss + \\\"?qq=\\\" + username + \\\"&password=\\\" + password+ \\\"&flag=1\\\";\\n        discuss.confirm = \\\"是否确认以后上传的规则允许评论?\\\";\\n        discuss.msg = [\\\"已设为不许\\\", \\\"设置失败\\\"];\\n\\n    } else {\\n        discuss.title = small(color(\\\"不许评论\\\", \\\"green\\\") + color(\\\"(允许)\\\", \\\"#00bfff\\\"));\\n        discuss.url = api.dis_dev_discuss + \\\"?qq=\\\" + username + \\\"&password=\\\" + password;\\n        discuss.confirm = \\\"是否确认以后上传的规则允许评论?\\\";\\n        discuss.msg = [\\\"已设为允许\\\", \\\"设置失败\\\"];\\n    }\\n    data.push(setSettingItem(discuss));\\n}\\nmapColType(data, \\\"line\\\", 2);\\nfor (let item of ruleList) {\\n    let my_t_excode1 = '';\\n    let my_t_excode2 = '';\\n    if (item.state != 'public') {\\n        my_t_excode1 += '㊙️';\\n    } else {\\n        my_t_excode1 += '';\\n    }\\n    data.push({\\n        title: my_t_excode1 + item.name + my_t_excode2,\\n        url: \\\"hiker://page/manageRule#noHistory##noRecordHistory#\\\",\\n        extra: {\\n            id: item.id,\\n            //username: username,\\n            //password: password\\n        },\\n        pic_url: item.pic,\\n    })\\n}\\nif (ruleList.length === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>快来上传你的第一条规则吧！</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n}\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"规则详细-dev\",\"path\":\"manageRule\",\"rule\":\"js:\\nconst {\\n    getApi,\\n    color,\\n    small,\\n    getFile,\\n    existFile,\\n    mapColType,\\n    htmlTag,\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    id\\n} = MY_PARAMS;\\nlet {\\n    username,\\n    password,\\n} = getFile();\\naddListener('onClose', $.toString(() => {\\n    refreshPage(false);\\n}));\\nlet dataItem = JSON.parse(request(getApi(\\\"getbyid\\\") + \\\"?id=\\\" + id)).result;\\nsetPageTitle(\\\"编辑「\\\" + dataItem.name + \\\"」\\\");\\nlet reqByGet = \\\"?id=\\\" + dataItem.id + \\\"&qq=\\\" + username + \\\"&password=\\\" + password;\\nlet ruleListJson = getApi(\\\"ruleListJson\\\") + \\\"?id=\\\";\\nlet data = [];\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"版本\\\"),\\n    desc: \\\"““””云端版本:\\\" + color(dataItem.ver, \\\"#5cff2c\\\") + \\\"\\\\n上次提交于: [\\\" + color(dataItem.last_update, \\\"#ff7000\\\") + \\\"]\\\",\\n    url: $(\\\"<开发者>\\\\n\\\" + dataItem.author + \\\"\\\\n<名称>\\\\n\\\" + dataItem.name + \\\"\\\\n<云端版本>\\\\n\\\" + dataItem.ver + \\\"\\\\n<更新时间>\\\\n[\\\" + dataItem.last_update + \\\"]\\\").confirm(() => {}),\\n    col_type: 'text_1'\\n});\\nlet dataType = {\\n    home_rule_url: '首页云规则',\\n    publish: '提交云仓库规则',\\n    js_url: '网页插件规则',\\n    html: '静态页面',\\n    config: '主页配置'\\n};\\n\\nlet basic = {\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://empty\\\"\\n};\\nlet dataTypeTips = dataType[dataItem.data_type] || '未知规则:' + dataItem.data_type;\\n\\nbasic.title = htmlTag(\\\"big\\\", \\\"类型\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(\\\"(id:\\\" + dataItem.id + \\\")\\\");\\nbasic.desc = \\\"数据类型：\\\" + color(dataTypeTips, \\\"#cb54ff\\\") + \\\"\\\\n分享状态为：\\\" + dataItem.state;\\nif ([\\\"html\\\", \\\"config\\\", \\\"js_url\\\"].includes(dataItem.data_type)) {\\n    basic.desc += \\\"\\\\n““”” =>\\\" + small(\\\"点此预览\\\");\\n    basic.url = ruleListJson + dataItem.id;\\n}\\nlet auth = \\\"\\\";\\nif (dataItem.state == \\\"private\\\") {\\n    let auth_back = JSON.parse(request(getApi(\\\"auth\\\") + reqByGet));\\n    basic.title = basic.title + \\\"\\\\n\\\" + small(color(auth_back.result, \\\"grey\\\"));\\n    auth = '&auth=' + auth_back.result;\\n    basic.url = basic.url === \\\"hiker://empty\\\" ? basic.url : basic.url + auth;\\n}\\ndata.push(basic);\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"操作\\\"),\\n    col_type: \\\"text_1\\\",\\n    url: \\\"toast://你才是最帅的那个人！\\\"\\n});\\nlet importUrl, ruleCode, shareUrl, backCode = \\\"\\\";\\nif (!dataItem.is_json) {\\n    backCode = request(ruleListJson + dataItem.id + auth);\\n}\\nswitch (dataItem.data_type) {\\n    case \\\"home_rule_url\\\":\\n        ruleCode = \\\"海阔视界首页频道规则【\\\" + dataItem.name + \\\"】￥home_rule_url￥\\\" + ruleListJson + dataItem.id + auth;\\n        importUrl = \\\"rule://\\\" + base64Encode(ruleCode)\\n        break;\\n    case 'publish':\\n        ruleCode = '海阔视界规则分享，当前分享的是：' + dataItem.name + '￥publish￥' + base64Encode(backCode);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break;\\n    case 'js_url':\\n        ruleCode = '海阔视界规则分享，当前分享的是：网页插件￥js_url￥' + dataItem.name + '@base64://' + base64Encode(backCode);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break;\\n    case 'html':\\n        let file_tmp = dataItem.name.split('.');\\n        let file_path = file_tmp.length > 1 ? file_tmp[file_tmp.length - 1] + \\\"/\\\" + dataItem.name : dataItem.name;\\n        ruleCode = \\\"海阔视界本地文件分享￥file_url￥hiker://files/rules/dzHouse/\\\" + file_path + \\\"@\\\" + ruleListJson + dataItem.id + auth;\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break\\n    case \\\"config\\\":\\n        importUrl = $().rule(password => {\\n            eval(fetch(\\\"hiker://assets/home.js\\\"));\\n            HikerHome.load(\\\"import\\\", password);\\n        }, backCode);\\n        break;\\n}\\nlet my_col_type = \\\"text_2\\\";\\nif (importUrl) {\\n    data.push({\\n        title: \\\"导入规则\\\",\\n        url: importUrl,\\n        col_type: my_col_type\\n    });\\n}\\nif (ruleCode) {\\n    data.push({\\n        title: \\\"分享规则\\\",\\n        url: \\\"copy://\\\" + ruleCode,\\n        col_type: my_col_type\\n    });\\n}\\n\\nfunction setSettingItem(basic, pattern) {\\n    let temp = {\\n        title: basic.title,\\n        col_type: basic.col_type,\\n        url: $(basic.confirm).confirm((url, msg, pattern) => {\\n            let backA = request(url);\\n            let ret = JSON.parse(backA);\\n            if (ret.status == 0) {\\n                pattern ? back() : refreshPage(false);\\n                return \\\"toast://\\\" + msg[0];\\n            } else {\\n                pattern ? back() : refreshPage(false);\\n                return \\\"toast://\\\" + msg[1] + \\\"\\\\n\\\" + ret.detail;\\n            }\\n        }, basic.url, basic.msg, pattern)\\n    };\\n    return temp;\\n}\\nif (dataItem.state == 'private') {\\n    data.push({\\n        title: \\\"设为公开\\\",\\n        url: $(getApi(\\\"share\\\") + reqByGet + \\\"&flag\\\" + \\\"#noLoading#\\\").lazyRule(() => {\\n            request(input);\\n            refreshPage(false);\\n            return \\\"toast://已设为公开\\\";\\n        }),\\n        col_type: my_col_type\\n    }, {\\n        title: \\\"随机密钥\\\",\\n        col_type: my_col_type,\\n        url: $(getApi(\\\"genAuth\\\") + reqByGet + \\\"#noLoading#\\\").lazyRule(() => {\\n            let back = request(input);\\n            let ret = JSON.parse(back);\\n            if (ret.status == 0) {\\n                refreshPage(false);\\n                return \\\"toast://已生成随机密码\\\\n\\\" + ret.result\\n            } else {\\n                refreshPage(true);\\n                return \\\"toast://随机密码生成失败\\\"\\n            }\\n        })\\n    });\\n    let timeOver = {\\n        col_type: my_col_type\\n    };\\n    if (dataItem.time_over) {\\n        timeOver.title = small(color(\\\"短时密钥\\\", \\\"green\\\") + color(\\\"(→永久)\\\", \\\"red\\\"));\\n        timeOver.url = getApi(\\\"timeover\\\") + reqByGet + \\\"&flag=1\\\";\\n        timeOver.confirm = \\\"是否确认以后的私藏规则分享不过期?\\\";\\n        timeOver.msg = [\\\"已设为永久\\\", \\\"设为永久失败\\\"];\\n    } else {\\n        timeOver.title = small(color(\\\"永久密钥\\\", \\\"red\\\") + color(\\\"(→短时)\\\", \\\"green\\\"));\\n        timeOver.url = getApi(\\\"timeover\\\") + reqByGet;\\n        timeOver.confirm = \\\"确认要以后分享的私藏规则自动到期?\\\";\\n        timeOver.msg = [\\\"已设为过期\\\", \\\"设为过期失败\\\"];\\n    }\\n    data.push(setSettingItem(timeOver));\\n} else if (dataItem.state == 'public') {\\n    data.push({\\n        title: \\\"设为私有\\\",\\n        url: $(getApi(\\\"share\\\") + reqByGet + \\\"&flag=1#noLoading#\\\").lazyRule(() => {\\n            request(input);\\n            refreshPage(false);\\n            return \\\"toast://已设为私有\\\";\\n        }),\\n        col_type: my_col_type\\n    });\\n}\\ndata.push(setSettingItem({\\n    title: \\\"删除数据\\\",\\n    confirm: \\\"是否确认删除\\\",\\n    msg: [\\\"已删除\\\", \\\"删除失败\\\"],\\n    url: getApi(\\\"deleteUrl\\\") + reqByGet,\\n    col_type: my_col_type\\n}, true));\\ndata.push({\\n    title: \\\"设置图标\\\",\\n    url: $(dataItem.pic_url, \\\"输入图标地址\\\").input(api => {\\n        if (input === \\\"\\\") {\\n            return \\\"toast://你在逗我链接哪?\\\"\\n        }\\n        let result = request(api + \\\"&rule_pic=\\\" + input);\\n        result = JSON.parse(result);\\n        if (result.status !== 0) {\\n            return \\\"toast://\\\" + result.detail;\\n        }\\n        return \\\"toast://修改成功\\\";\\n    }, getApi(\\\"set_rule_pic\\\") + dataItem.id + reqByGet),\\n    col_type: my_col_type\\n});\\n\\ndata.push({\\n    title: dataItem.can_discuss ? \\\"禁止评论\\\" : \\\"开启评论\\\",\\n    url: $(api.dis_set + dataItem.id + reqByGet + \\\"&state=\\\" + (dataItem.can_discuss ? \\\"\\\" : 1)).lazyRule((can_discuss) => {\\n        request(input);\\n        refreshPage(false);\\n        return can_discuss ? \\\"toast://已禁止评论\\\" : \\\"toast://已开启评论\\\";\\n    }, dataItem.can_discuss),\\n    col_type: my_col_type\\n});\\nMY_PARAMS.name = dataItem.name;\\nMY_PARAMS.username=username;\\nMY_PARAMS.password=password;\\ndata.push({\\n    title: \\\"设置备注\\\",\\n    url: \\\"hiker://page/set_rule_notes\\\",\\n    extra: MY_PARAMS,\\n    col_type: my_col_type\\n});\\nif (dataItem.is_json && dataItem.data_type === \\\"home_rule_url\\\" && !dataItem.is_json_list) {\\n    data.push({\\n        title: '进入频道',\\n        url: $( /*\\\"#noLoading#\\\"*/ ).lazyRule((name,home) => {\\n            let ruleList = JSON.parse(request(home));\\n            let hasRule = ruleList.some(item => item.title === name);\\n            if (hasRule) {\\n                putVar(\\\"Warehouse.back\\\", \\\"1\\\");\\n                back();\\n                return home+\\\"s@\\\" + name;\\n            } else {\\n                return \\\"toast://未安装\\\";\\n            }\\n        }, dataItem.name,api.home),\\n        col_type: my_col_type\\n    });\\n}\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ndata.push({\\n    title: dataItem.good_num,\\n    pic_url: \\\"hiker://files/icon/赞.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\ndata.push({\\n    title: dataItem.bad_num,\\n    pic_url: \\\"hiker://files/icon/踩.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\ndata.push({\\n    title: \\\"评论\\\",\\n    pic_url: \\\"hiker://files/icon/评论.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://page/Reply#noHistory##noRecordHistory#\\\",\\n    extra: {\\n        ruleId: dataItem.id,\\n        name: dataItem.author,\\n        password: password,\\n        username: username\\n    }\\n});\\nlet totalSum = dataItem.good_num + dataItem.bad_num;\\n\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"评论(\\\" + totalSum + \\\")\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(htmlTag(\\\"u\\\", \\\"查看全部评论(控评) >\\\")),\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://page/Comment\\\",\\n    extra: {\\n        url: \\\"hiker://empty#fypage#noHistory##noRecordHistory#\\\",\\n        id: dataItem.id,\\n        totalSum: totalSum,\\n        no_active: true,\\n        username: username,\\n        password: password\\n    }\\n});\\n//const longestSum=120;\\nlet icon = {\\n    \\\"good\\\": \\\"👍\\\",\\n    \\\"bad\\\": \\\"👎\\\",\\n    \\\"reply\\\": \\\"开发者🗣\\\"\\n}\\nif (totalSum === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>一条评论也没有，快来抢沙发吧！</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n} else {\\n    let commentList = JSON.parse(request(api.dis_get + dataItem.id + \\\"?limit=5\\\")).result;\\n    for (let item of commentList) {\\n        let Reply = item.discuss_type===\\\"reply\\\"&&item.reply_to_name!==false&&item.reply_to_id!==false?\\\"‘‘回复@\\\"+item.reply_to_name+\\\" #\\\"+item.discuss_id+\\\"’’\\\\n\\\":\\\"\\\";\\n        data.push({\\n            title: item.name + \\\"&nbsp;&nbsp;<font color='gray'><small>#\\\" + item.id + \\\"</small><font>\\\",\\n            col_type: \\\"avatar\\\",\\n            url: \\\"hiker://page/Reply\\\",\\n            extra:{\\n                ruleId: dataItem.id,\\n                name: item.name,\\n                password: password,\\n                username: username,\\n                replyId:item.id\\n            },\\n            pic_url: item.avatar_url\\n        });\\n        data.push({\\n            title: item.discuss_text,\\n            desc: Reply+item.create_date + \\\"·\\\" + icon[item.discuss_type],\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/info\\\",\\n            extra: {\\n                name: item.name,\\n                type: \\\"long_text\\\",\\n                text: item.discuss_text\\n            },\\n            pic_url: item.avatar_url\\n        });\\n    }\\n}\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\nsetResult(data);\"},{\"col_type\":\"icon_2_round\",\"name\":\"规则列表\",\"path\":\"rules\",\"rule\":\"js:\\naddListener('onClose',$.toString(()=>{\\n    clearVar(\\\"Warehouse.back\\\");\\n    clearVar(\\\"Warehouse.filter\\\");\\n    clearVar(\\\"Warehouse.type\\\");\\n    if(getVar('Warehouse.can_upload','')){\\n        log('操作过禁止上传:'+getVar('Warehouse.can_upload'));\\n        clearVar(\\\"Warehouse.can_upload\\\");\\n        refreshPage(true);\\n    }\\n}));\\n\\nif (getVar(\\\"Warehouse.back\\\") === \\\"1\\\") {\\n    back(false);\\n}\\n\\nconst {\\n    getApi,\\n    api,\\n    color,\\n    small,\\n    localRuleVer,\\n    htmlTag,\\n    md\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nconst { mergeSort } = $.require(\\\"hiker://page/sort\\\");\\nlet {\\n    avatarUrl,\\n    qq,\\n    id,\\n    can_upload\\n} = MY_PARAMS;\\nlet dataType = getVar(\\\"Warehouse.type\\\",\\\"\\\");\\nlet backCode = JSON.parse(request(getApi(\\\"rulesUrl\\\") + \\\"?name=\\\" + qq+\\\"&data_type=\\\"+dataType));\\nlet devName = backCode.dev_name;\\nputVar(\\\"Warehouse.filter\\\", devName);\\nlet ruleList = backCode.result;\\nlet subUrl = getApi(\\\"jsonList\\\") + \\\"?name=\\\" + qq;\\nlet hasSub = hasHomeSub(subUrl);\\nlet devInfo = \\\"这个人很懒,什么都没写哦~\\\";\\nlet tmpJson = JSON.parse(request(getApi(\\\"infoGetUrl\\\") + qq));\\nif (tmpJson.status == 0) {\\n    devInfo = tmpJson.result || devInfo;\\n}\\nlet subFlag = hasSub ? '🆗' : '📡';\\nlet data = [];\\nrequire(md);\\ndevInfo=marked.parse(devInfo);\\ndata.push({\\n    title: \\\"““””\\\" + devName + \\\"\\\\n\\\\n\\\" + small(htmlTag(\\\"u\\\", \\\"点击查看完整公告\\\")),\\n    desc: small(devInfo),\\n    url: 'hiker://page/info',\\n    extra: {\\n        text: devInfo,\\n        name: devName,\\n        type:\\\"rich_text\\\"\\n    },\\n    pic_url: avatarUrl,\\n    col_type: 'movie_1_vertical_pic'\\n});\\ndata.push({\\n    title: \\\"<big>订阅管理</big>&nbsp;&nbsp;<small>(当前\\\" + (hasSub ? \\\"已订阅\\\" : \\\"未订阅\\\") + \\\")</small>\\\",\\n    col_type: \\\"rich_text\\\"\\n});\\n\\nlet sub_code = '海阔视界合集规则订阅￥home_sub￥' + devName + \\\"合集@@\\\" + subUrl;\\nlet rulesCode = '海阔视界合集规则￥home_rule_url￥' + subUrl;\\ndata.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">一键订阅</span>',\\n    desc: '订阅““””<span style=\\\"color: #5cff2c\\\">' + devName + '</span>的所有单规则，合集需单独订阅',\\n    url: sub_code,\\n    col_type: 'text_3'\\n});\\ndata.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">导入全部</span>',\\n    url: rulesCode,\\n    col_type: 'text_3'\\n});\\ndata.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">导入轻合集</span>',\\n    url: $().lazyRule((devName,subUrl,avatarUrl)=>{\\n        const {genRule}=$.require(\\\"hiker://page/genApi\\\");\\n        log(\\\"轻合集图标链接:\\\"+avatarUrl);\\n        let import_rule=genRule(\\\"轻合集.\\\"+devName,subUrl,avatarUrl);\\n        //copy(import_rule);\\n        let ruleCode=parsePaste(import_rule.split(\\\"\\\\n\\\")[0]);\\n        //return \\\"hiker://empty\\\"\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        return importUrl\\n    },devName,subUrl,avatarUrl),\\n    col_type: 'text_3'\\n});\\nlet can_upload_api = getApi(\\\"manCanUpload\\\")+id;\\nif(getVar('house.is_manager')){\\n    let tips = can_upload?'能':'否';\\n    // log('tips:'+tips);\\n    // log('can_upload:'+can_upload);\\n    data.push({\\n        title:'⚠能否上传:'+(getVar('Warehouse.can_upload')||tips),\\n        col_type:'scroll_button',\\n        url:'hiker://empty'\\n    });\\n    function setUpload(flag,can_upload_api) {\\n        flag = flag || '';\\n        try {\\n            let code = fetch(can_upload_api, {\\n                headers: {\\\"User-Agent\\\": MOBILE_UA},\\n                body: {\\n                    \\\"params\\\":\\n                        {\\n                            \\\"username\\\": getVar('house.username'),\\n                            \\\"password\\\": getVar('house.password'),\\n                            \\\"can_upload\\\": !!flag\\n                        }\\n                }\\n            });\\n            code = JSON.parse(code).result;\\n            if (code.status === 0) {\\n                return code.detail\\n            } else {\\n                return '操作失败:' + code.detail\\n            }\\n        } catch (e) {\\n            return '操作失败:' + e.message\\n        }\\n    }\\n    data.push({\\n        title:'🚫禁止上传',\\n        col_type:'scroll_button',\\n        url:$('禁止该开发者上传规则?你的操作将被系统记录').confirm((id,can_upload_api,setUpload)=>{\\n            let ret = setUpload(false,can_upload_api);\\n            if(!/操作失败/.test(ret)){\\n                putVar('Warehouse.can_upload','否');\\n                refreshPage(false);\\n            }\\n            return 'toast://'+ret\\n        },id,can_upload_api,setUpload)\\n    });\\n    data.push({\\n        title:'✅允许上传',\\n        col_type:'scroll_button',\\n        url:$('允许该开发者上传规则?你的操作将被系统记录').confirm((id,can_upload_api,setUpload)=>{\\n            let ret = setUpload(true,can_upload_api);\\n            if(!/操作失败/.test(ret)){\\n                putVar('Warehouse.can_upload','是');\\n                refreshPage(false);\\n            }\\n            return 'toast://'+ret\\n        },id,can_upload_api,setUpload)\\n    });\\n}\\ndata.push({\\n    title: \\\"<small>提示：开发者单独分享的合集文件只能单独导入。</small>\\\",\\n    col_type: \\\"rich_text\\\"\\n});\\ndata.push({\\n    title: \\\"<big>规则列表</big>&nbsp;&nbsp;<small>(共\\\" + ruleList.length + \\\"条)</small>\\\",\\n    col_type: \\\"rich_text\\\"\\n});\\nlet dataTypeList = {\\n    \\\"\\\":\\\"全部\\\",\\n    \\\"home_rule_url\\\": '小程序',\\n    //\\\"publish\\\": '提交云仓库规则',\\n    \\\"js_url\\\": '网页插件',\\n    \\\"html\\\": '静态页面',\\n    \\\"config\\\": '主题'\\n};\\nfor(let key in dataTypeList){\\n    data.push({\\n        title:dataType===key?\\\"““\\\"+dataTypeList[key]+\\\"””\\\":dataTypeList[key],\\n        url:$(\\\"#noLoading#\\\").lazyRule((key)=>{\\n            putVar(\\\"Warehouse.type\\\",key);\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        },key),\\n        col_type:\\\"scroll_button\\\"\\n    });\\n}\\nif (ruleList.length > 20) {\\n    data.push({\\n        title: \\\"搜索\\\",\\n        url: $.toString(name => \\\"hiker://search?s=\\\" + input + \\\"&rule=\\\" + name, MY_RULE.title),\\n        col_type: \\\"input\\\",\\n        desc: \\\"搜索当前开发者的规则\\\"\\n    });\\n}\\nlet homeList = JSON.parse(request(api.home));\\nlet mRuleList = [];\\nfor (var item of ruleList) {\\n    var name = item.name;\\n    if (item.is_tap) {\\n        let location = JSON.parse(request(getApi(\\\"ruleListJson\\\") + \\\"?id=\\\" + item.id));\\n        item.id = location.id;\\n        item.name = location.name;\\n        item.author = location.author;\\n        item.data_type = location.data_type;\\n        item.ver = location.ver\\n    }\\n    item.version = item.ver;\\n    let label = \\\"\\\",\\n        lver = -2;\\n    if (item.is_json && item.data_type === \\\"home_rule_url\\\") {\\n        lver = localRuleVer(homeList, item);\\n        if (lver === -1) {\\n            label = \\\"🆕\\\";\\n        } else if (lver < item.ver) {\\n            label = \\\"🆙\\\";\\n        }\\n    }\\n    mRuleList.push({\\n        title: label + name,\\n        url: \\\"hiker://page/ruleDetail#noHistory##noRecordHistory#\\\",\\n        extra: {\\n            lver: lver,\\n            id: item.id\\n        },\\n        pic_url: item.pic,\\n    });\\n}\\n/* 归并排序 Start */\\nmRuleList = mergeSort(mRuleList);\\n/* 归并排序 End */\\ndata.push.apply(data, mRuleList)\\nsetResult(data);\\n\"},{\"col_type\":\"movie_3\",\"name\":\"规则详细-user\",\"path\":\"ruleDetail\",\"rule\":\"js:\\n    const {\\n        getApi,\\n        color,\\n        small,\\n        htmlTag,\\n        api,\\n        md\\n    } = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    id,\\n    lver,\\n    isAll\\n} = MY_PARAMS;\\naddListener('onClose', $.toString((isAll) => {\\n    if(!isAll){\\n        refreshPage(false);\\n    }\\n},isAll));\\nlet dataItem = JSON.parse(request(getApi(\\\"getbyid\\\") + \\\"?id=\\\" + id)).result;\\nsetPageTitle(\\\"「\\\" + dataItem.name + \\\"」\\\")\\nlet ruleListJson = getApi(\\\"ruleListJson\\\") + \\\"?id=\\\";\\nlet data = [];\\nvar hasSub = false;\\n\\nif (dataItem.is_json_list) {\\n    hasSub = hasHomeSub(ruleListJson + dataItem.id);\\n} else if (!dataItem.is_json_list && dataItem.data_type == 'home_rule_url') {\\n    hasSub = hasHomeSub(ruleListJson + dataItem.id + '&debug=true');\\n}\\n\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"版本\\\"),\\n    desc: \\\"““””开发者：\\\" + color(dataItem.author, \\\"#228BE6\\\") + \\\"\\\\n云端版本：\\\" + color(dataItem.ver, \\\"#5cff2c\\\") + \\\"\\\\t\\\\t本地版本：\\\" + color(lver, \\\"#5cff2c\\\") + \\\"\\\\n更新于: [\\\" + color(dataItem.last_update, \\\"#ff7000\\\") + \\\"]\\\",\\n    url: $(\\\"<开发者>\\\\n\\\" + dataItem.author + \\\"\\\\n<名称>\\\\n\\\" + dataItem.name + \\\"\\\\n<云端版本>\\\\n\\\" + dataItem.ver + \\\"\\\\n<本地版本>\\\\n\\\" + lver + \\\"\\\\n<更新时间>\\\\n[\\\" + dataItem.last_update + \\\"]\\\").confirm(() => {}),\\n    col_type: 'text_1'\\n});\\nlet dataType = {\\n    home_rule_url: '首页云规则',\\n    publish: '提交云仓库规则',\\n    js_url: '网页插件规则',\\n    html: '静态页面',\\n    config: '主页配置'\\n};\\n\\nlet basic = {\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://empty\\\"\\n};\\nlet dataTypeTips = dataType[dataItem.data_type] || '未知规则：' + dataItem.data_type;\\n\\nlet safe_tip=dataItem.is_safe?\\\"安全\\\":\\\"危险\\\";\\nlet good_tip = dataItem.is_good?small(color(\\\"【优质规则】\\\",'#ff7000')):\\\"\\\";\\nlet not_safe_note=dataItem.not_safe_note;\\nbasic.title = htmlTag(\\\"big\\\", \\\"类型\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(\\\"(id:\\\" + dataItem.id + \\\")\\\")+\\\"\\\\t\\\\t\\\\t\\\" + small(\\\"(风险检测:\\\" +safe_tip+\\\")\\\")+good_tip;\\nbasic.desc = \\\"数据类型：\\\" + color(dataTypeTips, \\\"#cb54ff\\\") + \\\"\\\\n分享状态为：\\\" + dataItem.state;\\nif ([\\\"html\\\", \\\"config\\\", \\\"js_url\\\"].includes(dataItem.data_type)) {\\n    basic.desc += \\\"\\\\n““”” =>\\\" + small(\\\"点此预览\\\");\\n    basic.url = ruleListJson + dataItem.id;\\n}\\n\\ndata.push(basic);\\nlet hasSubs = \\\"\\\";\\nif (hasSub) {\\n    hasSubs = \\\"\\\\t\\\\t\\\\t\\\" + small(\\\"已订阅\\\")\\n}\\n\\nlet notes = request(getApi(\\\"get_rule_note\\\") + id);\\nnotes = JSON.parse(notes).result;\\nrequire(md);\\nlet notesHtml=\\\"\\\"\\ntry{\\n    notesHtml=marked.parse(notes);\\n}catch(e){}\\n\\nif (notes !== false) {\\n    data.push({\\n        title: htmlTag(\\\"big\\\", \\\"备注\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(htmlTag(\\\"u\\\", \\\"查看完整公告 >\\\")),\\n        desc: notes,\\n        col_type: \\\"text_1\\\",\\n        url: \\\"hiker://page/info\\\",\\n        extra: {\\n            text: notesHtml,\\n            name: dataItem.name,\\n            // type: \\\"long_text\\\"\\n            type: \\\"rich_text\\\"\\n        }\\n    });\\n}\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"操作\\\") + hasSubs,\\n    col_type: \\\"text_1\\\",\\n    url: \\\"toast://你才是最帅的那个人！\\\"\\n});\\nlet importUrl, ruleCode, shareUrl, backCode = \\\"\\\";\\nif (!dataItem.is_json) {\\n    backCode = request(ruleListJson + dataItem.id);\\n}\\nswitch (dataItem.data_type) {\\n    case \\\"home_rule_url\\\":\\n        ruleCode = \\\"海阔视界首页频道规则【\\\" + dataItem.name + \\\"】￥home_rule_url￥\\\" + ruleListJson + dataItem.id;\\n        importUrl = \\\"rule://\\\" + base64Encode(ruleCode)\\n        break;\\n    case 'publish':\\n        ruleCode = '海阔视界规则分享，当前分享的是：' + dataItem.name + '￥publish￥' + base64Encode(backCode);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break;\\n    case 'js_url':\\n        ruleCode = '海阔视界规则分享，当前分享的是：网页插件￥js_url￥' + dataItem.name + '@base64://' + base64Encode(backCode);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break;\\n    case 'html':\\n        let file_tmp = dataItem.name.split('.');\\n        let file_path = file_tmp.length > 1 ? file_tmp[file_tmp.length - 1] + \\\"/\\\" + dataItem.name : dataItem.name;\\n        ruleCode = \\\"海阔视界本地文件分享￥file_url￥hiker://files/rules/dzHouse/\\\" + file_path + \\\"@\\\" + ruleListJson + dataItem.id;\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break\\n    case \\\"config\\\":\\n        importUrl = $().rule(password => {\\n            eval(fetch(\\\"hiker://assets/home.js\\\"));\\n            HikerHome.load(\\\"import\\\", password);\\n        }, backCode);\\n        break;\\n}\\nlet my_col_type = \\\"text_2\\\";\\nif (importUrl) {\\n    data.push({\\n        title: \\\"导入规则\\\",\\n        url: dataItem.is_safe?importUrl:'toast://风险规则禁止导入!!!',\\n        col_type: my_col_type\\n    });\\n}\\nif (ruleCode) {\\n    data.push({\\n        title: \\\"分享口令\\\",\\n        url: \\\"copy://\\\" + ruleCode,\\n        col_type: my_col_type\\n    });\\n}\\n\\nif (importUrl) {\\n    if (dataItem.is_json_list && !hasSub) {\\n        let sub_rule_code = '海阔视界合集规则订阅￥home_sub￥' + dataItem.name + \\\"@@\\\" + ruleListJson + dataItem.id;\\n        let sub_url = 'rule://' + base64Encode(sub_rule_code);\\n        data.push({\\n            title: '订阅合集',\\n            url: sub_url,\\n            col_type: my_col_type\\n        });\\n        data.push({\\n            title: '““””<span style=\\\"color: #ff7000\\\">导入轻合集</span>',\\n            url: $().lazyRule((dataItem,subUrl)=>{\\n                const {genRule}=$.require(\\\"hiker://page/genApi\\\");\\n                let import_rule=genRule(dataItem.name+\\\".\\\"+dataItem.author,subUrl);\\n                //copy(import_rule);\\n                let ruleCode=parsePaste(import_rule.split(\\\"\\\\n\\\")[0]);\\n                //return \\\"hiker://empty\\\"\\n                importUrl = 'rule://' + base64Encode(ruleCode);\\n                return importUrl\\n            },dataItem,ruleListJson + dataItem.id),\\n            col_type: my_col_type\\n        });\\n        data.push({\\n            title: \\\"<small>提示：开发者单独分享的合集文件只能单独导入。</small>\\\",\\n            col_type: \\\"rich_text\\\"\\n        });\\n    } else if (!dataItem.is_json_list && !hasSub && dataItem.data_type == 'home_rule_url') {\\n        let sub_rule_code = '海阔视界单规则订阅￥home_sub￥' + dataItem.name + \\\"@@\\\" + ruleListJson + dataItem.id + '&debug=true';\\n        let sub_url = 'rule://' + base64Encode(sub_rule_code);\\n        data.push({\\n            title: '订阅规则',\\n            url: sub_url,\\n            col_type: my_col_type\\n        })\\n    }\\n}\\nif (dataItem.is_json && dataItem.data_type === \\\"home_rule_url\\\" && !dataItem.is_json_list) {\\n    data.push({\\n        title: '进入频道',\\n        url: $( /*\\\"#noLoading#\\\"*/ ).lazyRule((name,home) => {\\n            let ruleList = JSON.parse(request(home));\\n            let hasRule = ruleList.some(item => item.title === name);\\n            if (hasRule) {\\n                putVar(\\\"Warehouse.back\\\", \\\"1\\\");\\n                back();\\n                return home+\\\"s@\\\" + name;\\n            } else {\\n                return \\\"toast://未安装\\\";\\n            }\\n        }, dataItem.name,api.home),\\n        col_type: my_col_type\\n    })\\n}\\nlet man_rule_safe = getApi(\\\"manRuleSafe\\\")+dataItem.id;\\nlet man_rule_good = getApi(\\\"manRuleGood\\\")+dataItem.id;\\n// dataItem.is_safe;\\nif(getVar('house.is_manager')){\\n    function setIsSafe(flag,man_rule_safe) {\\n        flag = flag || '';\\n        try {\\n            let code = fetch(man_rule_safe, {\\n                headers: {\\\"User-Agent\\\": MOBILE_UA},\\n                body: {\\n                    \\\"params\\\":\\n                        {\\n                            \\\"username\\\": getVar('house.username'),\\n                            \\\"password\\\": getVar('house.password'),\\n                            \\\"is_safe\\\": !!flag\\n                        }\\n                }\\n            });\\n            code = JSON.parse(code).result;\\n            if (code.status === 0) {\\n                return code.detail\\n            } else {\\n                return '操作失败:' + code.detail\\n            }\\n        } catch (e) {\\n            return '操作失败:' + e.message\\n        }\\n    }\\n    function setIsGood(flag,man_rule_good) {\\n        flag = flag || '';\\n        try {\\n            let code = fetch(man_rule_good, {\\n                headers: {\\\"User-Agent\\\": MOBILE_UA},\\n                body: {\\n                    \\\"params\\\":\\n                        {\\n                            \\\"username\\\": getVar('house.username'),\\n                            \\\"password\\\": getVar('house.password'),\\n                            \\\"is_good\\\": !!flag\\n                        }\\n                }\\n            });\\n            code = JSON.parse(code).result;\\n            if (code.status === 0) {\\n                return code.detail\\n            } else {\\n                return '操作失败:' + code.detail\\n            }\\n        } catch (e) {\\n            return '操作失败:' + e.message\\n        }\\n    }\\n    data.push({\\n        title:'🚫风险',\\n        col_type:'scroll_button',\\n        url:$('标记该规则为风险?风险规则无法被导入').confirm((id,man_rule_safe,setIsSafe)=>{\\n            let ret = setIsSafe(false,man_rule_safe);\\n            if(!/操作失败/.test(ret)){\\n                refreshPage(false);\\n            }\\n            return 'toast://'+ret\\n        },dataItem.id,man_rule_safe,setIsSafe)\\n    });\\n    data.push({\\n        title:'✅正常',\\n        col_type:'scroll_button',\\n        url:$('标记该规则为正常?').confirm((id,man_rule_safe,setIsSafe)=>{\\n            let ret = setIsSafe(true,man_rule_safe);\\n            if(!/操作失败/.test(ret)){\\n                refreshPage(false);\\n            }\\n            return 'toast://'+ret\\n        },dataItem.id,man_rule_safe,setIsSafe)\\n    });\\n    data.push({\\n        title:'♥非优质',\\n        col_type:'scroll_button',\\n        url:$('标记该规则为非优质?').confirm((id,man_rule_good,setIsGood)=>{\\n            let ret = setIsGood(false,man_rule_good);\\n            if(!/操作失败/.test(ret)){\\n                refreshPage(false);\\n            }\\n            return 'toast://'+ret\\n        },dataItem.id,man_rule_good,setIsGood)\\n    });\\n    data.push({\\n        title:'💖优质',\\n        col_type:'scroll_button',\\n        url:$('标记该规则为优质?').confirm((id,man_rule_good,setIsGood)=>{\\n            let ret = setIsGood(true,man_rule_good);\\n            if(!/操作失败/.test(ret)){\\n                refreshPage(false);\\n            }\\n            return 'toast://'+ret\\n        },dataItem.id,man_rule_good,setIsGood)\\n    });\\n}\\n\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ndata.push({\\n    title: dataItem.good_num,\\n    pic_url: \\\"hiker://files/icon/赞.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://page/MakeAcomment#noHistory##noRecordHistory#\\\",\\n    extra: {\\n        id: dataItem.id,\\n        name: dataItem.name\\n    }\\n});\\ndata.push({\\n    title: dataItem.bad_num,\\n    pic_url: \\\"hiker://files/icon/踩.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://page/MakeAcomment#noHistory##noRecordHistory#\\\",\\n    extra: {\\n        id: dataItem.id,\\n        name: dataItem.name,\\n        defaultType:\\\"bad\\\"\\n    }\\n});\\ndata.push({\\n    title: \\\"评论\\\",\\n    pic_url: \\\"hiker://files/icon/评论.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://page/MakeAcomment#noHistory##noRecordHistory#\\\",\\n    extra: {\\n        id: dataItem.id,\\n        name: dataItem.name\\n    }\\n});\\nlet totalSum = dataItem.good_num + dataItem.bad_num;\\n\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"评论(\\\" + totalSum + \\\")\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(htmlTag(\\\"u\\\", \\\"查看全部评论 >\\\")),\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://page/Comment\\\",\\n    extra: {\\n        url: \\\"hiker://empty#fypage#noHistory##noRecordHistory#\\\",\\n        id: dataItem.id,\\n        totalSum: totalSum,\\n        no_active: false\\n    }\\n});\\n//const longestSum=120;\\nlet icon = {\\n    \\\"good\\\": \\\"👍\\\",\\n    \\\"bad\\\": \\\"👎\\\",\\n    \\\"reply\\\":\\\"开发者🗣\\\"\\n}\\nif (totalSum === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>一条评论也没有，快来抢沙发吧！</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n} else {\\n    let commentList = JSON.parse(request(api.dis_get + dataItem.id + \\\"?limit=5\\\")).result;\\n    for (let item of commentList) {\\n        let Reply = item.discuss_type===\\\"reply\\\"&&item.reply_to_name!==false&&item.reply_to_id!==false?\\\"‘‘回复@\\\"+item.reply_to_name+\\\" #\\\"+item.discuss_id+\\\"’’\\\\n\\\":\\\"\\\";\\n        data.push({\\n            title: item.name + \\\"&nbsp;&nbsp;<font color='gray'><small>#\\\" + item.id + \\\"</small><font>\\\",\\n            col_type: \\\"avatar\\\",\\n            //url: \\\"toast://\\\" + item.qq,\\n            url:\\\"mqqwpa://im/chat?chat_type=wpa&uin=\\\"+item.qq,\\n            pic_url: item.avatar_url\\n        });\\n        data.push({\\n            title: item.discuss_text,\\n            desc: Reply+item.create_date + \\\"·\\\" + icon[item.discuss_type],\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/info\\\",\\n            extra:{\\n                name:item.name,\\n                type:\\\"long_text\\\",\\n                text:item.discuss_text\\n            },\\n            pic_url: item.avatar_url\\n        });\\n    }\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n}\\n\\nsetResult(data);\"},{\"col_type\":\"rich_text\",\"name\":\"查看\",\"path\":\"info\",\"rule\":\"js:\\nsetPageTitle(\\\"查看「\\\"+MY_PARAMS.name+\\\"」\\\")\\nsetResult([{\\n    title: MY_PARAMS.text,\\n    col_type:MY_PARAMS.type\\n}]);\"},{\"col_type\":\"movie_3\",\"name\":\"开发者注册\",\"path\":\"Register\",\"rule\":\"js:\\nsetPageTitle(\\\"开发者注册\\\");\\nconst {\\n    getApi,\\n    htmlTag,\\n    mapColType,\\n    small\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nvar data = [];\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.Password\\\");\\n    clearVar(\\\"Warehouse.Username\\\");\\n    clearVar(\\\"Warehouse.Description\\\");\\n    clearVar(\\\"Warehouse.UserAddress\\\");\\n}));\\naddListener('onRefresh', $.toString(()=>{\\n    putVar(\\\"Warehouse.Wait\\\", \\\"\\\");\\n}));\\ndata.push({\\n    title: '账号',\\n    desc: \\\"请输入账号(必填)\\\",\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('Warehouse.Username', ''),\\n        type: \\\"number\\\",\\n        onChange: 'putVar(\\\"Warehouse.Username\\\",input)'\\n    }\\n}, {\\n    title: '密码',\\n    desc: \\\"请输入密码(必填)\\\",\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('Warehouse.Password', ''),\\n        type: \\\"password\\\",\\n        onChange: 'putVar(\\\"Warehouse.Password\\\",input)'\\n    }\\n});\\nmapColType(data, \\\"line_blank\\\", 1);\\ndata.push({\\n    title: '昵称',\\n    desc: \\\"请输入昵称(必填)\\\",\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('Warehouse.UserAddress', ''),\\n        onChange: 'putVar(\\\"Warehouse.UserAddress\\\",input)'\\n    }\\n}, {\\n    title: '描述',\\n    desc: \\\"说说为什么要注册吧\\\\n(可以增加通过概率,选填)\\\",\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('Warehouse.Description', ''),\\n        type: \\\"textarea\\\",\\n        onChange: 'putVar(\\\"Warehouse.Description\\\",input)'\\n    }\\n})\\n\\nmapColType(data, \\\"line_blank\\\", 1);\\n\\ndata.push({\\n    title: htmlTag(\\\"b\\\", \\\"注册\\\"),\\n    url: $(getApi(\\\"new_dev\\\")+\\\"#noLoading#\\\").lazyRule((getId, confirm) => {\\n        let username = getVar('Warehouse.Username', \\\"\\\"),\\n            password = getVar('Warehouse.Password', \\\"\\\"),\\n            description = getVar('Warehouse.Description', \\\"\\\"),\\n            name = getVar(\\\"Warehouse.UserAddress\\\", \\\"\\\");\\n        if ([username, password, name].includes(\\\"\\\")) {\\n            return \\\"toast://账号,密码和昵称不能为空\\\";\\n        }\\n        showLoading(\\\"正在提交申请表\\\");\\n        let result = request(input, {\\n            headers: {\\n                'content-type': 'application/json'\\n            },\\n            body: JSON.stringify({\\n                \\\"params\\\": {\\n                    \\\"reason\\\": description,\\n                    \\\"name\\\": name,\\n                    \\\"password\\\": password,\\n                    \\\"qq\\\": username\\n                }\\n            }),\\n            method: 'post'\\n        });\\n        result = JSON.parse(result).result;\\n        hideLoading();\\n        if (result.status !== 0) {\\n            return \\\"toast://\\\" + result.detail;\\n        }\\n        let idresult = JSON.parse(request(getId + \\\"?qq=\\\" + username));\\n        if (idresult.status !== 0) {\\n            return \\\"toast://\\\" + idresult.detail;\\n        }\\n        \\n        return $(\\\"\\\", \\\"输入邮箱验证码\\\\n\\\" + result.detail).input((confirm, id, account) => {\\n            showLoading(\\\"请耐心等待\\\");\\n            try {\\n                let result = request(confirm, {\\n                    headers: {\\n                        'content-type': 'application/json'\\n                    },\\n                    body: JSON.stringify({\\n                        \\\"params\\\": {\\n                            \\\"regist_id\\\": id,\\n                            \\\"yzm\\\": input\\n                        }\\n                    }),\\n                    method: 'POST'\\n                });\\n                result = JSON.parse(result).result;\\n                if (result.status !== 0) {\\n                    hideLoading();\\n                    return \\\"toast://\\\" + result.detail;\\n                } else {\\n                    putVar(\\\"WarehouseUsername\\\", account[0]);\\n                    putVar(\\\"WarehousePassword\\\", account[1]);\\n                    hideLoading();\\n                    back();\\n                    return \\\"toast://成功提交注册注册\\\\n\\\"+result.detail;\\n                }\\n            } catch (e) {\\n                hideLoading();\\n                return \\\"toast://出错了呐\\\";\\n            }\\n        }, confirm, idresult.result, [username, password]);\\n    }, getApi(\\\"new_getId\\\"), getApi(\\\"new_confirm\\\")),\\n    col_type: 'text_center_1'\\n});\\nsetResult(data);\"},{\"col_type\":\"text_1\",\"name\":\"个人资料\",\"path\":\"PersonalData\",\"rule\":\"js:\\nsetPageTitle(\\\"个人资料\\\");\\nvar data=[];\\nconst {\\n    getApi,\\n    getFile,\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\n\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\n\\nlet {username,password} = getFile();\\nlet dev = JSON.parse(request(getApi(\\\"user\\\")+MY_PARAMS.id)).result;\\ndata.push({\\n    title:\\\"头像\\\",\\n    desc:dev.avatar,\\n    url:\\\"hiker://page/modify_PersonalData#noHistory##noRecordHistory#\\\",\\n    extra:{\\n        dev:dev,\\n        username:username,\\n        password:password,\\n        Pattern:0\\n    },\\n    col_type:\\\"text_1\\\"\\n});\\n\\n\\ndata.push({\\n    title:\\\"昵称\\\",\\n    desc:dev.name,\\n    url:\\\"hiker://page/modify_PersonalData#noHistory##noRecordHistory#\\\",\\n    extra:{\\n        dev:dev,\\n        username:username,\\n        password:password,\\n        Pattern:1\\n    },\\n    col_type:\\\"text_1\\\"\\n});\\n\\ndata.push({\\n    title:\\\"密码\\\",\\n    url:\\\"hiker://page/modify_PersonalData#noHistory##noRecordHistory#\\\",\\n    extra:{\\n        dev:dev,\\n        username:username,\\n        password:password,\\n        Pattern:2\\n    },\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\ndata.push({\\n    title:\\\"账号：\\\"+username,\\n    url:\\\"copy://\\\"+username,\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    title:\\\"UID：\\\"+dev.id,\\n    url:\\\"copy://\\\"+dev.id,\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\ndata.push({\\n    title:\\\"提交云仓库规则\\\",\\n    url:$(\\\"#noLoading#\\\").lazyRule((host)=>{\\n        let code=request(host+\\\"/hikerule/rulelist.json?id=145\\\");\\n        let word=\\\"￥publish￥\\\"+base64Encode(code);\\n        return \\\"rule://\\\"+base64Encode(word);\\n    },api.host),\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    title:\\\"同步提交云仓库账号密码\\\",\\n    url:\\\"rule://\\\"+base64Encode(\\\"￥publish_account￥\\\"+username+\\\"@\\\"+password),\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\ndata.push({\\n    title:\\\"你一共发布了「\\\"+dev.rule_num+\\\"」条规则\\\",\\n    url:\\\"hiker://empty\\\",\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\nlet user = getFile();\\ndata.push({\\n    title:\\\"注销登录\\\",\\n    url:$(\\\"确认注销登录?\\\").confirm(f => {\\n        f.username=\\\"\\\";\\n        f.password=\\\"\\\";\\n        writeFile('hiker://files/WarehouseUSER.json', JSON.stringify(f));\\n        putVar(\\\"Warehouse.back\\\",\\\"1\\\");\\n        back();\\n        return \\\"toast://已注销\\\";\\n    },user),\\n    col_type:\\\"text_center_1\\\"\\n});\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"更改个人资料\",\"path\":\"modify_PersonalData\",\"rule\":\"js:\\nconst {\\n    getApi,\\n    color,\\n    small,\\n    getFile,\\n    htmlTag\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    dev,\\n    username,\\n    password,\\n    Pattern\\n} = MY_PARAMS;\\nvar data = [];\\nlet path = \\\"?qq=\\\" + username + \\\"&password=\\\" + password;\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.m.petName\\\");\\n    clearVar(\\\"Warehouse.m.avatar\\\");\\n    clearVar(\\\"Warehouse.m.Password.c\\\");\\n    clearVar(\\\"Warehouse.m.Password.x\\\");\\n    clearVar(\\\"Warehouse.m.Password.y\\\");\\n}));\\nfunction m_petName() {\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        col_type: 'input',\\n        desc: \\\"请输入新昵称\\\",\\n        extra: {\\n            titleVisible: false,\\n            defaultValue: getVar('Warehouse.m.petName', '')||dev.name,\\n            onChange: 'putVar(\\\"Warehouse.m.petName\\\",input)'\\n        }\\n    });\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title: \\\"保存\\\",\\n        url: $(getApi(\\\"modify_name\\\") + path).lazyRule(() => {\\n            let newPetName = getVar('Warehouse.m.petName', '');\\n            if (newPetName == \\\"\\\") {\\n                return \\\"toast://你还什么都没填啊!\\\";\\n            }\\n            let result = request(input + \\\"&name=\\\" + encodeURIComponent(newPetName));\\n            result = JSON.parse(result);\\n            if (result.status === 0) {\\n                back();\\n                return \\\"toast://修改成功\\\";\\n            } else {\\n                return \\\"toast://\\\" + result.detail;\\n            }\\n        }),\\n        col_type: 'text_center_1'\\n    });\\n}\\n\\nfunction m_avatar() {\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        col_type: 'input',\\n        desc: \\\"请输入新的头像链接\\\",\\n        extra: {\\n            titleVisible: false,\\n            defaultValue: getVar('Warehouse.m.avatar', '') || dev.avatar,\\n            onChange: 'putVar(\\\"Warehouse.m.avatar\\\",input)'\\n        }\\n    });\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title: \\\"保存\\\",\\n        url: $(getApi(\\\"modify_ava\\\") + path).lazyRule(() => {\\n            let newAvatar = getVar('Warehouse.m.avatar', '');\\n            \\n            let result = request(input + \\\"&avatar_url=\\\" + encodeURIComponent(newAvatar));\\n            result = JSON.parse(result);\\n            if (result.status === 0) {\\n                back();\\n                return \\\"toast://修改成功\\\";\\n            } else {\\n                return \\\"toast://\\\" + result.detail;\\n            }\\n        }),\\n        col_type: 'text_center_1'\\n    });\\n}\\n\\nfunction m_pwd() {\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title:\\\"原密码\\\",\\n        col_type: 'input',\\n        desc: \\\"请输入原密码\\\",\\n        extra: {\\n            type:\\\"password\\\",\\n            defaultValue: getVar('Warehouse.m.Password.y', ''),\\n            onChange: 'putVar(\\\"Warehouse.m.Password.y\\\",input)'\\n        }\\n    });\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title:\\\"新密码\\\",\\n        col_type: 'input',\\n        desc: \\\"请输入新密码\\\",\\n        extra: {\\n            type:\\\"password\\\",\\n            defaultValue: getVar('Warehouse.m.Password.x', ''),\\n            onChange: 'putVar(\\\"Warehouse.m.Password.x\\\",input)'\\n        }\\n    });\\n    data.push({\\n        title:\\\"重复新密码\\\",\\n        col_type: 'input',\\n        desc: \\\"请重复新密码\\\",\\n        extra: {\\n            type:\\\"password\\\",\\n            titleVisible: false,\\n            defaultValue: getVar('Warehouse.m.Password.c', ''),\\n            onChange: 'putVar(\\\"Warehouse.m.Password.c\\\",input)'\\n        }\\n    });\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title: \\\"保存\\\",\\n        url: $(getApi(\\\"modify_pwd\\\")+path).lazyRule((password,username) => {\\n            let old_password = getVar('Warehouse.m.Password.y', '');\\n            let new_password = getVar('Warehouse.m.Password.x', '');\\n            let new_password_again = getVar('Warehouse.m.Password.c', '');\\n            if (old_password!==password) {\\n                return \\\"toast://原密码错误\\\";\\n            }\\n            if(new_password===\\\"\\\"){\\n                return \\\"toast://请输入新密码\\\";\\n            }\\n            if(new_password!==new_password_again){\\n                return \\\"toast://两次密码不同\\\"\\n            }\\n            let result = request(input + \\\"&new_password=\\\" + new_password+\\\"&new_password_re=\\\"+new_password_again);\\n            result = JSON.parse(result);\\n            if (result.status === 0) {\\n                writeFile(\\\"hiker://files/WarehouseUSER.json\\\",JSON.stringify({\\n                    username:username,\\n                    password:new_password\\n                }));\\n                back();\\n                return \\\"toast://修改成功\\\";\\n            } else {\\n                return \\\"toast://\\\" + result.detail;\\n            }\\n        },password,username),\\n        col_type: 'text_center_1'\\n    });\\n}\\n\\nswitch (Pattern) {\\n    case 0:\\n        setPageTitle(\\\"修改头像\\\");\\n        m_avatar();\\n        break;\\n    case 1:\\n        setPageTitle(\\\"修改昵称\\\");\\n        m_petName();\\n        break;\\n    case 2:\\n        setPageTitle(\\\"修改密码\\\");\\n        m_pwd();\\n        break;\\n}\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"编辑规则备注\",\"path\":\"set_rule_notes\",\"rule\":\"js:\\nlet data = [];\\nconst {\\n    getApi\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    id,\\n    username,\\n    password,\\n    name\\n} = MY_PARAMS;\\nsetPageTitle(\\\"备注「\\\"+name+\\\"」\\\");\\naddListener('onClose',\\\"clearVar('Warehouse.rule.notes', '')\\\");\\nlet notes=request(getApi(\\\"get_rule_note\\\")+id);\\nnotes=JSON.parse(notes).result;\\ndata.push({\\n    desc: \\\"规则备注......\\\",\\n    col_type: 'input',\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getVar('Warehouse.rule.notes', '')||notes||\\\"\\\",\\n        type: \\\"textarea\\\",\\n        height:-1,\\n        onChange: 'putVar(\\\"Warehouse.rule.notes\\\",input)'\\n    }\\n});\\n\\ndata.push({\\n    title: \\\"保存\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(getApi(\\\"set_rule_note\\\") + id).lazyRule((username, password) => {\\n        let notes = getVar('Warehouse.rule.notes', '');\\n        let result = request(input, {\\n            headers: {\\n                'content-type': 'application/json'\\n            },\\n            body: JSON.stringify({\\n                \\\"params\\\": {\\n                    \\\"qq\\\": username,\\n                    \\\"password\\\": password,\\n                    \\\"note\\\":notes\\n                }\\n            }),\\n            method: 'POST'\\n        });\\n        result = JSON.parse(result).result;\\n        if (result.status !== 0) {\\n            return \\\"toast://\\\" + result.detail;\\n        }\\n        back(false);\\n        return \\\"toast://修改成功\\\";\\n    }, username, password)\\n});\\nsetResult(data);\"},{\"col_type\":\"line\",\"name\":\"评论列表\",\"path\":\"Comment\",\"rule\":\"js:\\nsetPageTitle(\\\"评论列表\\\");\\nconst {\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet data = [];\\nlet {\\n    totalSum,\\n    id,\\n    no_active,\\n    username,\\n    password\\n} = MY_PARAMS;\\nlet page = parseInt(MY_URL.split(\\\"#\\\")[1]);\\nlet discuss_type = getVar(\\\"Warehouse.comment.discuss_type\\\", \\\"\\\");\\nif (page === 1) {\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    addListener('onClose', $.toString(() => {\\n        putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"\\\");\\n    }));\\n    data.push({\\n        title: \\\"全部\\\" + (discuss_type === \\\"\\\" ? \\\"◉\\\" : \\\"○\\\"),\\n        url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n            putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"\\\");\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: 'text_4'\\n\\n    });\\n    data.push({\\n        title: \\\"👍赞\\\" + (discuss_type === \\\"good\\\" ? \\\"◉\\\" : \\\"○\\\"),\\n        url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n            putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"good\\\");\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: 'text_4'\\n\\n    });\\n    data.push({\\n        title: \\\"👎踩\\\" + (discuss_type === \\\"bad\\\" ? \\\"◉\\\" : \\\"○\\\"),\\n        url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n            putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"bad\\\");\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: 'text_4'\\n    });\\n    data.push({\\n        title: \\\"回复\\\" + (discuss_type === \\\"reply\\\" ? \\\"◉\\\" : \\\"○\\\"),\\n        url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n            putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"reply\\\");\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: 'text_4'\\n    });\\n}\\n\\n\\nlet icon = {\\n    \\\"good\\\": \\\"👍\\\",\\n    \\\"bad\\\": \\\"👎\\\",\\n    \\\"reply\\\":\\\"开发者🗣\\\"\\n}\\nlet control=(pid,active)=>void 0;\\nif(no_active){\\n    control=function(pid,active){\\n        data.push({\\n            title:active?\\\"隐藏评论\\\":\\\"展示评论\\\",\\n            url:$(api.dis_dev_control+pid+\\\"?qq=\\\" + username + \\\"&password=\\\" + password+\\\"#noLoading#\\\").lazyRule(()=>{\\n                let result=JSON.parse(request(input));\\n                refreshPage(false)\\n                return \\\"toast://\\\"+result.detail;\\n            }),\\n            col_type:\\\"text_2\\\"\\n        });\\n        data.push({\\n            title:\\\"删除评论\\\",\\n            url:$(\\\"确认删除该评论?\\\").confirm((input)=>{\\n                let result=JSON.parse(request(input));\\n                refreshPage(false)\\n                return \\\"toast://\\\"+result.detail;\\n            },api.dis_dev_control+pid+\\\"?qq=\\\" + username + \\\"&password=\\\" + password+\\\"&delete=1\\\"),\\n            col_type:\\\"text_2\\\"\\n        });\\n        data.push({\\n            col_type:\\\"line\\\"\\n        });\\n        data.push({\\n            col_type:\\\"line\\\"\\n        });\\n    }\\n}\\nif (totalSum === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>一条评论也没有，快来抢沙发吧！</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n} else {\\n    let commentList = JSON.parse(request(api.dis_get + id + \\\"?limit=5&page=\\\" + page + \\\"&no_active=\\\" + no_active + \\\"&discuss_type=\\\" + discuss_type)).result;\\n    for (let item of commentList) {\\n        let Reply = item.discuss_type===\\\"reply\\\"&&item.reply_to_name!==false&&item.reply_to_id!==false?\\\"‘‘回复@\\\"+item.reply_to_name+\\\" #\\\"+item.discuss_id+\\\"’’\\\\n\\\":\\\"\\\";\\n        data.push({\\n            title: item.name + \\\"&nbsp;&nbsp;<font color='gray'><small>#\\\" + item.id + \\\"</small><font>\\\",\\n            col_type: \\\"avatar\\\",\\n            //url: no_active?\\\"hiker://page/Reply\\\":\\\"toast://\\\" + item.qq,\\n\\t\\t       url:no_active?\\\"hiker://page/Reply\\\":\\\"mqqwpa://im/chat?chat_type=wpa&uin=\\\"+item.qq,\\n            extra:{\\n                ruleId: id,\\n                name: item.name,\\n                password: password,\\n                username: username,\\n                replyId:item.id\\n            },\\n            pic_url: item.avatar_url\\n        });\\n        data.push({\\n            title: item.discuss_text,\\n            desc: Reply+item.create_date + \\\"·\\\" + icon[item.discuss_type],\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/info\\\",\\n            extra:{\\n                name:item.name,\\n                type:\\\"long_text\\\",\\n                text:item.discuss_text\\n            },\\n            pic_url: item.avatar_url\\n        });\\n        control(item.id,item.active);\\n    }\\n    if (commentList.length === 0) {\\n        data.push({\\n            col_type: \\\"line_blank\\\"\\n        });\\n    }\\n}\\n\\nsetResult(data)\"},{\"col_type\":\"movie_3\",\"name\":\"发表评论\",\"path\":\"MakeAcomment\",\"rule\":\"js:\\nlet data = [];\\nconst {\\n    api,\\n    getFile\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    id,\\n    name,\\n    defaultType\\n} = MY_PARAMS;\\nlet user=getFile().user||[\\\"\\\",\\\"\\\"];\\n\\nsetPageTitle(\\\"评论(\\\" + name + \\\")\\\");\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.comment.type\\\");\\n    clearVar(\\\"Warehouse.comment.text\\\");\\n    clearVar(\\\"Warehouse.comment.qq\\\");\\n    refreshPage(false);\\n}));\\nlet type = getVar(\\\"Warehouse.comment.type\\\") || defaultType||\\\"good\\\";\\ndata.push({\\n    desc: \\\"评论......\\\",\\n    col_type: 'input',\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getVar('Warehouse.comment.text', ''),\\n        type: \\\"textarea\\\",\\n        height:7,\\n        onChange: 'putVar(\\\"Warehouse.comment.text\\\",input)'\\n    }\\n});\\ndata.push({\\n    title:\\\"账号：\\\"+(user[0]||\\\"\\\"),\\n    desc:\\\"验证码：\\\"+(user[1]||\\\"\\\"),\\n    url:\\\"hiker://page/Userregistration\\\",\\n    col_type: 'text_1',\\n    \\n});\\n\\ndata.push({\\n    title:  (type === \\\"good\\\" ? \\\"◉\\\" : \\\"○\\\")+\\\" 👍\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        putVar(\\\"Warehouse.comment.type\\\", \\\"good\\\");\\n        refreshPage();\\n        return \\\"hiker://empty\\\";\\n    }),\\n    col_type: 'text_2'\\n\\n});\\ndata.push({\\n    title:  (type === \\\"bad\\\" ? \\\"◉\\\" : \\\"○\\\")+\\\" 👎\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        putVar(\\\"Warehouse.comment.type\\\", \\\"bad\\\");\\n        refreshPage();\\n        return \\\"hiker://empty\\\";\\n    }),\\n    col_type: 'text_2'\\n});\\n\\ndata.push({\\n    title: \\\"提交\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(api.dis_new + id).lazyRule((Account) => {\\n        let text = getVar('Warehouse.comment.text', '');\\n        let [qq,auth_code] = Account;\\n        let type = getVar('Warehouse.comment.type') || 'good';\\n        qq=qq||\\\"\\\";\\n        auth_code=auth_code||\\\"\\\";\\n        if(qq==\\\"\\\"||auth_code==\\\"\\\"){\\n            return \\\"toast://未登录账号\\\";\\n        }\\n        if(text==\\\"\\\"){\\n            return \\\"toast://你还什么都没写啊\\\";\\n        }\\n        function r(p) {\\n            let result = request(input, {\\n                headers: {\\n                    'content-type': 'application/json'\\n                },\\n                body: JSON.stringify(p),\\n                method: 'POST'\\n            });\\n            return JSON.parse(result).result;\\n        }\\n        let p = {\\n            \\\"params\\\": {\\n                \\\"discuss_text\\\": text,\\n                \\\"qq\\\": qq,\\n                \\\"discuss_type\\\": type,\\n                \\\"auth_code\\\": auth_code\\n            }\\n        }\\n        let result = r(p);\\n        if(result.status===0){\\n            back(false);\\n        }\\n        return \\\"toast://\\\"+result.detail;\\n\\n    },user)\\n});\\n\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"伪用户注册\",\"path\":\"Userregistration\",\"rule\":\"js:\\nconst {\\n    api,\\n    getFile,\\n    getUserDate\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet data = [];\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\nsetPageTitle(\\\"用户列表管理\\\");\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.m.qq\\\");\\n    clearVar(\\\"Warehouse.m.yzm\\\");\\n}));\\nlet user = getFile();\\nlet userName = user.user || [\\\"\\\"];\\nuserName = userName[0];\\ndata.push({\\n    title: \\\"““””<big>(添加/验证)账号</big>\\\",\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\n\\ndata.push({\\n    title: \\\"获取\\\",\\n    col_type: 'input',\\n    desc: \\\"请输入qq\\\",\\n    url: $.toString((a, b) => {\\n        let qq = input;\\n        if (qq == \\\"\\\") {\\n            return \\\"toast://你还什么都没填啊!\\\";\\n        }\\n        showLoading(\\\"获取中...\\\")\\n        return $(\\\"#noLoading#\\\").lazyRule((qq, a, b) => {\\n        try {\\n            let result = request(a, {\\n                headers: {\\n                    'content-type': 'application/json'\\n                },\\n                body: JSON.stringify({\\n                    \\\"params\\\": {\\n                        \\\"qq\\\": qq\\n                    }\\n                }),\\n                method: 'POST'\\n            });\\n            result = JSON.parse(result).result;\\n            if (result.status === 0) {\\n                hideLoading();\\n                return \\\"toast://\\\" + result.detail;\\n            } else {\\n                let result2 = JSON.parse(request(b + \\\"?qq=\\\" + qq));\\n                hideLoading();\\n                return \\\"toast://\\\" + result2.detail;\\n            }\\n        } catch (e) {\\n            hideLoading();\\n            throw e;\\n        }\\n        }, qq, a, b);\\n\\n    }, api.dis_new_user, api.dis_verify),\\n    extra: {\\n        type: \\\"number\\\",\\n        defaultValue: getVar('Warehouse.m.qq', '') || userName,\\n        onChange: 'putVar(\\\"Warehouse.m.qq\\\",input)'\\n    }\\n});\\n\\ndata.push({\\n    col_type: 'input',\\n    desc: \\\"请输入验证码\\\",\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getVar('Warehouse.m.yzm', ''),\\n        onChange: 'putVar(\\\"Warehouse.m.yzm\\\",input)'\\n    }\\n});\\ndata.push({\\n    col_type: 'rich_text',\\n    title: \\\"<small>提示：1.每天只能获取5次验证码.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.<s>验证码有效期持续一周左右</s>(暂时不会，忘记验证码可通过QQ号获取)</small>\\\"\\n});\\n\\nlet userList = getUserDate();\\ndata.push({\\n    title: \\\"验证/登录\\\",\\n    url: $(\\\"确定保存，验证码填错，无法评论哦\\\").confirm((f, l, login) => {\\n        let qq = getVar('Warehouse.m.qq', '');\\n        let yzm = getVar('Warehouse.m.yzm', '');\\n        if (qq == \\\"\\\" || yzm == \\\"\\\") {\\n            return \\\"toast://qq或验证码为空\\\";\\n        }\\n        let result = request(login, {\\n            headers: {\\n                'content-type': 'application/json'\\n            },\\n            body: JSON.stringify({\\n                \\\"params\\\": {\\n                    \\\"qq\\\": qq,\\n                    \\\"auth_code\\\": yzm\\n                }\\n            }),\\n            method: 'POST'\\n        });\\n        result = JSON.parse(result).result;\\n        if (result.status === 0) {\\n            f.user = [qq, yzm];\\n            writeFile(\\\"hiker://files/WarehouseUSER.json\\\", JSON.stringify(f));\\n            let index = l.findIndex(item => item[0] === qq);\\n            if (index > -1) {\\n                l.splice(index, 1, [qq, yzm]);\\n            } else if (l.length < 6) {\\n                l.push([qq, yzm]);\\n            } else {\\n                l.splice(0, 1);\\n                l.push([qq, yzm]);\\n            }\\n            writeFile(\\\"hiker://files/WarehouseUSERA.json\\\", JSON.stringify(l));\\n            back();\\n            return \\\"toast://验证成功\\\";\\n        }\\n        return \\\"toast://\\\" + result.detail;\\n    }, user, userList, api.dis_login),\\n    col_type: 'text_center_1'\\n});\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ndata.push({\\n    title: \\\"““””<big>账号列表</big>\\\\t\\\\t\\\\t<small>(保留5条记录)</small>\\\",\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\nuserList.reverse();\\n\\nfor (let item of userList) {\\n    data.push({\\n        title: \\\"账号：\\\" + item[0] + (userName === item[0] ? \\\"\\\\t\\\\t\\\\t““[当前账号]””\\\" : \\\"\\\"),\\n        desc: \\\"验证码：\\\" + item[1],\\n        url: $(\\\"是否切换为该[\\\" + item[0] + \\\"]账号\\\").confirm((f, item) => {\\n            f.user = item;\\n            writeFile(\\\"hiker://files/WarehouseUSER.json\\\", JSON.stringify(f));\\n            back();\\n            return \\\"toast://切换成功\\\";\\n        }, user, item),\\n        col_type: \\\"text_1\\\"\\n    });\\n}\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ndata.push({\\n    title: \\\"退出账号\\\",\\n    url: $(\\\"确认退出登录状态\\\").confirm((f) => {\\n        f.user = [];\\n        writeFile(\\\"hiker://files/WarehouseUSER.json\\\", JSON.stringify(f));\\n        back();\\n        return \\\"toast://退出成功\\\";\\n    }, user),\\n    col_type: 'text_center_1'\\n});\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"列表排序算法\",\"path\":\"sort\",\"rule\":\"js:\\n/* 规则列表排序 [ UP、NEW、无更新 ] 顺序 */\\n/* 归并排序 Start */\\nfunction mergeSort(arr) {\\n    var len = arr.length;\\n    if (len < 2) {\\n        return arr;\\n    }\\n    var middle = Math.floor(len / 2),\\n        left = arr.slice(0, middle),\\n        right = arr.slice(middle);\\n    return merge(mergeSort(left), mergeSort(right));\\n}\\nfunction merge(left, right) {\\n    var result = [];\\n    var isThisVersionList = [];\\n\\n    while (left.length > 0 && right.length > 0) {\\n        if (left[0].title.includes(\\\"🆙\\\")) {\\n            result.push(left.shift());\\n        } else if (right[0].title.includes(\\\"🆙\\\")) {\\n            result.push(right.shift());\\n        } else if (left[0].title.includes(\\\"🆕\\\")) {\\n            result.push(left.shift());\\n        } else if (right[0].title.includes(\\\"🆕\\\")) {\\n            result.push(right.shift());\\n        } else {\\n            isThisVersionList.push(left.shift());\\n            isThisVersionList.push(right.shift());\\n        }\\n    }\\n\\n    while (isThisVersionList.length) result.push(isThisVersionList.shift());\\n\\n    while (left.length)\\n        result.push(left.shift());\\n\\n    while (right.length)\\n        result.push(right.shift());\\n\\n    return result;\\n}\\n$.exports.mergeSort = mergeSort;\\n/* 归并排序 End */\"},{\"col_type\":\"icon_2_round\",\"name\":\"全部公开规则\",\"path\":\"AllPublicRule\",\"rule\":\"js:\\n    const {\\n        api,\\n        localRuleVer,\\n        getApi\\n    } = $.require(\\\"hiker://page/utiliy\\\");\\nconst {\\n    mergeSort\\n} = $.require(\\\"hiker://page/sort\\\");\\nlet dataType = getVar(\\\"Warehouse.type\\\", \\\"\\\");\\nlet order = getVar(\\\"Warehouse.order\\\", \\\"0\\\");\\nlet sort = getVar(\\\"Warehouse.sort\\\", \\\"0\\\");\\nlet good = getVar(\\\"Warehouse.good\\\", \\\"\\\");\\nlet page = MY_URL.split(\\\"#\\\")[1] || 1;\\nlet ruleList = JSON.parse(request(api.all_rule + \\\"?data_type=\\\" + dataType + \\\"&page=\\\" + page + \\\"&limit=20&order=\\\" + order + \\\"&sort=\\\" + sort+ \\\"&is_good=\\\" + good)).result;\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.type\\\");\\n    clearVar(\\\"Warehouse.order\\\");\\n    clearVar(\\\"Warehouse.sort\\\");\\n    clearVar(\\\"Warehouse.good\\\");\\n    clearVar(\\\"Warehouse.back\\\");\\n}));\\nlet data = [];\\nif (getVar(\\\"Warehouse.back\\\") === \\\"1\\\") {\\n    back();\\n}\\nfunction tab(arr, type, contrast) {\\n    for (let item of arr) {\\n        data.push({\\n            title: item[1] === contrast ? \\\"““\\\" + item[0] + \\\"””\\\" : item[0],\\n            url: $(\\\"#noLoading#\\\").lazyRule((key, type) => {\\n                putVar(type, key);\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\";\\n            }, item[1], type),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    data.push({\\n        col_type: \\\"blank_block\\\"\\n    });\\n}\\nif (page === \\\"1\\\") {\\n    tab([\\n        [\\\"全部\\\", \\\"\\\"],\\n        [\\\"小程序\\\", \\\"home_rule_url\\\"],\\n        [\\\"提交云仓库规则\\\", \\\"publish\\\"],\\n        [\\\"网页插件\\\", \\\"js_url\\\"],\\n        [\\\"静态页面\\\", \\\"html\\\"],\\n        [\\\"主题\\\", \\\"config\\\"]\\n    ], \\\"Warehouse.type\\\", dataType);\\n    tab([\\n        [\\\"时间\\\", \\\"0\\\"],\\n        [\\\"ID\\\", \\\"1\\\"],\\n        [\\\"好评度\\\", \\\"2\\\"],\\n        [\\\"差评度\\\", \\\"3\\\"],\\n        [\\\"回复数\\\", \\\"4\\\"]\\n    ], \\\"Warehouse.order\\\", order);\\n    tab([\\n        [\\\"倒序\\\", \\\"0\\\"],\\n        [\\\"正序\\\", \\\"1\\\"]\\n    ], \\\"Warehouse.sort\\\", sort);\\n    tab([\\n        [\\\"不论\\\", \\\"\\\"],\\n        [\\\"优质\\\", \\\"1\\\"]\\n    ], \\\"Warehouse.good\\\", good);\\n    data.push({\\n        title: \\\"搜索\\\",\\n        url: $.toString(name => \\\"hiker://search?s=\\\" + input + \\\"&rule=\\\" + name, MY_RULE.title),\\n        col_type: \\\"input\\\",\\n        desc: \\\"搜索全部规则\\\"\\n    });\\n}\\n\\nlet homeList = JSON.parse(request(api.home));\\nlet mRuleList = [];\\nfor (var item of ruleList) {\\n    var name = item.name;\\n    if (item.is_tap) {\\n        let location = JSON.parse(request(getApi(\\\"ruleListJson\\\") + \\\"?id=\\\" + item.id));\\n        item.id = location.id;\\n        item.name = location.name;\\n        item.author = location.author;\\n        item.data_type = location.data_type;\\n        item.ver = location.ver\\n    }\\n    item.version = item.ver;\\n    let label = \\\"\\\",\\n        lver = -2;\\n    if (item.is_json && item.data_type === \\\"home_rule_url\\\") {\\n        lver = localRuleVer(homeList, item);\\n        if (lver === -1) {\\n            label = \\\"🆕\\\";\\n        } else if (lver < item.ver) {\\n            label = \\\"🆙\\\";\\n        }\\n    }\\n    mRuleList.push({\\n        title: label + name,\\n        url: \\\"hiker://page/ruleDetail#noHistory##noRecordHistory#\\\",\\n        extra: {\\n            lver: lver,\\n            id: item.id,\\n            isAll:true\\n        },\\n        pic_url: item.pic,\\n    })\\n}\\n/* 归并排序 Start */\\n//mRuleList = mergeSort(mRuleList);\\n/* 归并排序 End */\\ndata.push.apply(data, mRuleList)\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"回复\",\"path\":\"Reply\",\"rule\":\"js:\\nlet data = [];\\nconst {\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    replyId,\\n    ruleId,\\n    name,\\n    password,\\n    username\\n} = MY_PARAMS;\\n\\n\\nsetPageTitle(\\\"回复(\\\" + name + \\\")\\\");\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.comment.text\\\");\\n    refreshPage(false);\\n}));\\n\\ndata.push({\\n    desc: \\\"回复......\\\",\\n    col_type: 'input',\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getVar('Warehouse.comment.text', ''),\\n        type: \\\"textarea\\\",\\n        height:7,\\n        onChange: 'putVar(\\\"Warehouse.comment.text\\\",input)'\\n    }\\n});\\n\\n\\ndata.push({\\n    title: \\\"提交\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(api.dis_reply + ruleId).lazyRule((password, username, ruleId) => {\\n        let text = getVar('Warehouse.comment.text', '');\\n        if (password == \\\"\\\" || username == \\\"\\\") {\\n            return \\\"toast://未登录账号\\\";\\n        }\\n        if (text == \\\"\\\") {\\n            return \\\"toast://你还什么都没写啊\\\";\\n        }\\n        let result = request(input, {\\n            headers: {\\n                'content-type': 'application/json'\\n            },\\n            body: JSON.stringify({\\n                \\\"params\\\": {\\n                    \\\"discuss_text\\\": text,\\n                    \\\"qq\\\": username,\\n                    \\\"password\\\": password,\\n                    \\\"discuss_id\\\": ruleId\\n                }\\n            }),\\n            method: 'POST'\\n        });\\n        result = JSON.parse(result).result;\\n        if (result.status === 0) {\\n            back(false);\\n        }\\n        return \\\"toast://\\\" + result.detail;\\n\\n    }, password, username, replyId)\\n});\\n\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"我的回复\",\"path\":\"MyReply\",\"rule\":\"js:\\nconst {\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    auth_code,\\n    qq\\n} = MY_PARAMS;\\nlet page = parseInt(MY_URL.split(\\\"#\\\")[1]);\\nlet data=[];\\nlet commentList = JSON.parse(request(api.dis_get_reply + \\\"?limit=5&page=\\\" + page + \\\"&qq=\\\" + qq + \\\"&auth_code=\\\" + auth_code)).result;\\nif (commentList.length === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>别拉了一条也不剩了</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n} else {\\n    for (let item of commentList) {\\n        data.push({\\n            title: item.name + \\\"&nbsp;&nbsp;<font color='gray'><small>#\\\" + item.id + \\\"</small><font>\\\",\\n            col_type: \\\"avatar\\\",\\n            url: \\\"hiker://page/ruleDetail#noHistory##noRecordHistory#\\\",\\n            extra: {\\n                lver: \\\"回复进入不支持查看\\\",\\n                id: item.rule_id[0]\\n            },\\n            pic_url: item.avatar_url\\n        });\\n        data.push({\\n            title: item.discuss_text,\\n            desc: item.create_date + \\\"·\\\"+item.rule_id[1]+\\\"·\\\"+\\\"开发者🗣\\\",\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/info\\\",\\n            extra:{\\n                name:item.name,\\n                type:\\\"long_text\\\",\\n                text:item.discuss_text\\n            },\\n            pic_url: item.avatar_url\\n        });\\n    }\\n    \\n}\\nsetResult(data);\\n\"},{\"col_type\":\"movie_3\",\"name\":\"更多分享\",\"path\":\"moreShare\",\"rule\":\"js:\\n    addListener('onClose', $.toString(()=>{\\n        clearVar(\\\"house.upload_code\\\");\\n    }));\\nconst {color,small,api, getFile} = $.require(\\\"hiker://page/utiliy\\\");\\nlet houseFile = getFile||false;\\nlet put_url = api.host+'/hikerule/dev/put';\\nif(!houseFile){\\n    setItem('is_house_vip', 'false');\\n}\\nlet house_data = houseFile();\\n// log(house_data.username+'-'+house_data.password);\\nvar canup = house_data.username.length >= 6 && house_data.password.length > 2;\\nlog('可以上传?'+canup);\\nlet d = [];\\nlet file_type = [{name:'静态文件',value:'html'},{name:'网页插件',value:'js_url'},{name:'主页配置',value:'config'}]; //上传类型\\nlet file_redirect = [{name:'本地',value:'false'},{name:'直链302',value:'true'}]; //是否重定向\\nlet file_ua = [{name:'电脑',value:'pc'},{name:'手机',value:'mobile'}];\\nlet file_type_title = file_type.map((item) => {\\n    let name = getItem('house.file_type','静态文件');\\n    if(item.name===name){\\n        return '👉'+item.name;\\n    }else{\\n        return item.name;\\n    }\\n});\\nlet file_redirect_title = file_redirect.map((item) => {\\n    let name = getItem('house.file_redirect','本地');\\n    if(item.name===name){\\n        return '👉'+item.name;\\n    }else{\\n        return item.name;\\n    }\\n});\\nlet file_ua_title = file_ua.map((item) => {\\n    let name = getItem('house.file_ua','电脑');\\n    if(item.name===name){\\n        return '👉'+item.name;\\n    }else{\\n        return item.name;\\n    }\\n});\\nd.push({col_type: 'x5_webview_single', extra: {js: 'console.log(\\\"我加载了\\\")'}});\\nd.push({\\n    title: '获取',\\n    desc: \\\"文件路径,支持hiker,file,http,主题\\\",\\n    extra: {\\n        onChange: \\\"putVar('house.web_url',input)\\\",\\n        titleVisible: true,\\n        defaultValue:getVar('house.web_url')\\n    },\\n    url:$.toString(() => {\\n        let input = getVar('house.web_url','');\\n        if(input.length<2){\\n            return 'toast://链接不可以为空'\\n        } else if(/^hiker:|^file:|^http:|^https:|^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(input)){\\n            if(/^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(input)){\\n                input = 'file://'+input;\\n            }\\n            log('正常链接:'+input);\\n            let ua = getItem('house.file_ua')==='电脑'?'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36':'Mozilla/5.0 (Linux; Android 9; MI 6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Mobile Safari/537.36';\\n            let web_url_arr = input.split(';');\\n            let web_url = web_url_arr[0];\\n            let headers = {\\n                'Referer':'https://blog.csdn.net',\\n                'User-Agent':ua,\\n                'Accept':'application/json, text/javascript, */*; q=0.01',\\n                'Accept-Language':'zh-CN',\\n            };\\n            if(web_url_arr.length>=3&&web_url_arr[2].length>2){ //设置编码\\n                headers['content-type'] = 'charset='+web_url_arr[2].toUpperCase();\\n            }\\n            let params = {headers:headers,withHeaders:false,redirect:false};\\n            if(web_url_arr.length>=2&&web_url_arr[1].length>2){ // 设置请求方法\\n                params['method'] = web_url_arr[1].toUpperCase();\\n            }\\n            log('开始获取源码');\\n            try {\\n                /*\\n                requestAsync(web_url,params,function (key,code) {\\n                    let back_code = code;\\n                    if(back_code.length>20){\\n                        putVar('house.upload_code',back_code);\\n                        refreshPage(true);\\n                        return 'toast://源码已获取,并部分插入到文本区域'\\n                    }else{\\n                        return 'toast://错误，本次获取到空文本，疑似你没有此文件!';\\n                    }\\n                });\\n                */\\n                let back_code = getItem('house.file_ua')==='电脑'?fetch(web_url,params):request(web_url,params);\\n                if(back_code.length>20){\\n                    putVar('house.upload_code',back_code);\\n                    refreshPage(true);\\n                    return 'toast://源码已获取,并部分插入到文本区域'\\n                }else{\\n                    return 'toast://错误，本次获取到空文本，疑似你没有此文件!';\\n                }\\n            }catch (e) {\\n                log(e.message);\\n                return 'toast://发生了错误:\\\\n'+e.message;\\n            }\\n        }else if(/主题￥|元素￥/.test(input)){\\n            log('主题链接');\\n            let web_url_arr = input.split('￥');\\n            let web_url = web_url_arr[web_url_arr.length-1];\\n            let back_code = parsePaste(web_url);\\n            if(back_code.length>20) {\\n                putVar('house.upload_code',back_code);\\n                refreshPage(true);\\n                return 'toast://源码已获取,并部分插入到文本区域'\\n            }else{\\n                return 'toast://错误，本次获取返回为:\\\\n'+back_code;\\n            }\\n        }else{\\n            return 'toast://非法链接:\\\\n'+getVar('house.web_url');\\n        }\\n    }),\\n    col_type: \\\"input\\\"\\n});\\n\\nd.push({\\n    title:'上传类型',\\n    desc:'上传文件的类型,当前为:'+color(getItem('house.file_type','静态文件'),'#ff7000'),\\n    col_type:'text_1',\\n    url:$(file_type_title,2).select(() => {\\n        setItem('house.file_type',input.replace('👉',''));\\n        refreshPage(true);\\n        return 'toast://你选择了:'+input;\\n    })\\n});\\n\\nd.push({\\n    title:'文件定位',\\n    desc:'文件是否属于重定向,当前为:'+color(getItem('house.file_redirect','本地'),'#ff7000'),\\n    col_type:'text_1',\\n    url:$(file_redirect_title,2).select(() => {\\n        setItem('house.file_redirect',input.replace('👉',''));\\n        refreshPage(true);\\n        return 'toast://你选择了:'+input;\\n    })\\n});\\n\\nd.push({\\n    title:'设备UA',\\n    desc:'发起网页请求头标识,当前为:'+color(getItem('house.file_ua','电脑'),'#ff7000'),\\n    col_type:'text_1',\\n    url:$(file_ua_title,2).select(() => {\\n        setItem('house.file_ua',input.replace('👉',''));\\n        refreshPage(true);\\n        return 'toast://你选择了:'+input;\\n    })\\n});\\nfunction compare(name) {\\n    return function(item) {\\n        return item.name === name;\\n    }\\n}\\nd.push({\\n    title:'🗄️环境',\\n    col_type:'flex_button',\\n    url:$().lazyRule((file_type,compare)=>{\\n        log('查看环境变量');\\n        try {\\n            let up_code = getVar('house.upload_code','');\\n            let ftype =  file_type.filter(compare(getItem('house.file_type','静态文件')))[0].value;\\n            let redirect = getItem('house.file_redirect','本地')!=='本地';\\n            let code = !redirect?up_code:input;\\n            let env = {\\n                web_url:getVar('house.web_url',''),\\n                device:getItem('house.file_ua','电脑'),\\n                ftype:ftype||\\\"\\\",\\n                redirect:redirect,\\n                code:code.substring(0,40)||\\\"\\\",\\n            }\\n            log(env);\\n            return 'toast://'+JSON.stringify(env);\\n            // alert(JSON.stringify(env));\\n        }catch (e) {\\n            return 'toast://'+e.message;\\n            // alert(e.message);\\n        }\\n    },file_type,compare)\\n});\\n\\nd.push({\\n    title:'📃教程',\\n    col_type:'flex_button',\\n    url:$().x5Rule(()=>{\\n        let msg = '欢迎使用开发者更多分享工具\\\\n1.输入网址为本地文件路径,hiker://或者file://开头\\\\n2.点击网址输入栏后面的按钮\\\\n3.看文本预览区是否正确\\\\n4.点击上传按钮提交到仓库';\\n        alert(msg);\\n    })\\n});\\n\\nd.push({\\n    title:'🗑️清空',\\n    col_type:'flex_button',\\n    url:$().lazyRule(()=>{\\n        clearVar('house.upload_code');\\n        refreshPage(true);\\n        return 'toast://已清除预览区域内容'\\n    })\\n});\\n\\nd.push({\\n    title:'📲示例',\\n    col_type:'flex_button',\\n    url:$().lazyRule(()=>{\\n        let demo_code = getItem('house.demo','0');\\n        if(demo_code=='0'){\\n            putVar('house.web_url','hiker://files/rules/dzHouse/html/资源网书签.html');\\n            demo_code = parseInt(demo_code)+1;\\n            setItem('house.demo',demo_code+'');\\n        }else{\\n            putVar('house.web_url','file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/资源网书签.html');\\n            setItem('house.demo','0');\\n        }\\n        refreshPage(true);\\n        return 'toast://已设置示例地址'\\n    })\\n});\\n\\nd.push({\\n    title:'📤上传',\\n    col_type:'flex_button',\\n    url:$().lazyRule((canup,house_data,put_url,file_type) =>{\\n        function compare(name) {\\n            return function(item) {\\n                return item.name === name;\\n            }\\n        }\\n        const {getNowFormatDate}=$.require(\\\"hiker://page/utiliy\\\");\\n        let up_code = getVar('house.upload_code','');\\n        if(up_code.length < 2){\\n            return 'toast://源码区无内容，请先访问一个静态页面'\\n        }\\n        if(!canup){\\n            return 'toast://你不是开发者，没有提交到仓库的权利!'\\n        }\\n        let input = getVar('house.web_url','');\\n        let web_url = input.split(';')[0];\\n        let fileName = '';\\n        if(/^hiker:|^file:|^http:|^https:|^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(web_url)){\\n            fileName = web_url.split('/')[web_url.split('/').length-1];\\n        }else if(/主题￥|元素￥/.test(input)){\\n            let bkarr = up_code.split('￥');\\n            if(bkarr.length<3){\\n                return 'toast://云剪贴板内容有误'\\n            }\\n            switch (bkarr[1]) {\\n                case 'my_home_theme':\\n                    fileName = up_code.split('「')[1].split('」')[0];\\n                    break;\\n                case 'my_home_single':\\n                    fileName = up_code.split('「')[1].split('」')[0];\\n                    break;\\n                case 'js_url':\\n                    fileName = up_code.split('￥')[2].split('@')[0];\\n                    break;\\n            }\\n        }else{\\n            return 'toast://错误，网页链接无内容!';\\n        }\\n        let ua = getItem('house.file_ua')==='电脑'?'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36':'Mozilla/5.0 (Linux; Android 9; MI 6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Mobile Safari/537.36';\\n        let headers = {\\n            'Referer':'https://blog.csdn.net',\\n            \\\"content-type\\\": \\\"application/json\\\",\\n            'User-Agent':ua,\\n            'Accept':'application/json, text/javascript, */*; q=0.01',\\n            'Accept-Language':'zh-CN',\\n        };\\n        let toCompare = '';\\n        if(fileName.endsWith('.html')){\\n            toCompare = '静态文件';\\n        }else if(/主题/.test(fileName)){\\n            toCompare = '主页配置'\\n        }\\n        let ftype =  file_type.filter(compare(toCompare||getItem('house.file_type','静态文件')))[0].value;\\n        let redirect = getItem('house.file_redirect','本地')!=='本地';\\n        if(redirect&&!web_url.startsWith('http')){\\n            return 'toast://直链302重定向网址链接必须http开头';\\n        }\\n        let code = !redirect?up_code:web_url;\\n        let data = {\\\"params\\\":\\n                {\\\"data\\\": {rule_name: fileName, \\\"rule_type\\\": '更多分享', \\\"version\\\":getNowFormatDate(),\\\"rule_value\\\": code,\\n                        data_type:ftype, is_redirect:redirect,deviceUa:getItem('house.file_ua'),\\n                    },\\n                    \\\"name\\\": house_data.username,\\n                    \\\"password\\\": house_data.password}\\n        };\\n        let upparams = {headers:headers,body:JSON.stringify(data),withHeaders:false,redirect:false,method:'POST'};\\n        let backmsg = getItem('house.file_ua')==='电脑'?fetch(put_url,upparams):request(put_url,upparams);\\n        try{\\n            let result = JSON.parse(backmsg).result;\\n            let detail = result.detail;\\n            return 'toast://'+detail;\\n        }catch (e) {\\n            log(e.message);\\n            return 'toast://发生了错误\\\\n'+e.message;\\n        }\\n    },canup,house_data,put_url,file_type)\\n});\\n\\nd.push({\\n    title:'长文本预览区域',\\n    col_type:'text_1',\\n    url:'hiker://empty',\\n    extra: {textSize: 11,lineVisible:false}\\n});\\n\\nd.push({\\n    title:getVar('house.upload_code','').substring(0,10240),\\n    col_type:'long_text',\\n    extra: {textSize: 11}\\n});\\nsetPageTitle(\\\"更多分享\\\");\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"轻合集生成接口\",\"path\":\"genApi\",\"rule\":\"js:\\nfunction genRule(name,url,icon){\\n    icon=icon||'https://z3.ax1x.com/2021/11/16/IWJhxf.png';\\n    const {getNowFormatDate,api,getApi}=$.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    String.prototype.replaceAll = function(old,new_str){\\n        return this.split(old).join(new_str);\\n    };\\n    let muban = getApi('importUrl')+\\\"1690\\\";\\n    let muban_word={name:\\\"@轻合集\\\",url:\\\"@地址\\\",ver:\\\"@版本\\\",icon:\\\"@图标\\\"};\\n    let muban_code = fetch(muban);\\n    muban_code=muban_code.replaceAll(muban_word.name,name).replaceAll(muban_word.ver,getNowFormatDate()).replaceAll(muban_word.url,url).replaceAll(muban_word.icon,icon);\\n    let import_code=\\\"海阔视界规则分享，当前分享的是：小程序，无根树，花正清，不断荤腥不戒淫￥home_rule_v2￥base64://@\\\"+name+\\\"@\\\"+base64Encode(muban_code);\\n    var pastes = getPastes();\\n    var url = sharePaste(import_code,pastes.slice(-1)[0]);\\n    let import_rule= url+\\\"\\\\n\\\\n小程序：\\\"+name;\\n    return import_rule;\\n}\\n$.exports.genRule=genRule;\"},{\"col_type\":\"movie_3\",\"name\":\"全局解析免嗅\",\"path\":\"globalParse\",\"rule\":\"js:\\nfunction getHeaders(playUrl){\\n    let headers = {};\\n    let refer=playUrl.split(\\\"//\\\")[0]+\\\"//\\\"+playUrl.split(\\\"//\\\")[1].split(\\\"/\\\")[0];\\n    if(/lecloud\\\\.com|bilivideo\\\\.com/.test(playUrl)){\\n        headers = {\\\"Referer\\\": 'https://www.bilibili.com/',\\\"User-Agent\\\":\\\"Mozilla/5.0\\\"}\\n    }else if(/mgtv\\\\.com/.test(playUrl)){\\n        headers = {\\\"Referer\\\": refer,\\\"User-Agent\\\":\\\"Mozilla/5.0\\\"}\\n    }else if(/ixigua\\\\.com/.test(playUrl)){\\n        headers = {\\\"Referer\\\": 'https://www.ixigua.com/',\\\"User-Agent\\\":\\\"Mozilla/5.0\\\"}\\n    }else{\\n        headers = {\\\"Referer\\\": refer,'User-Agent':'Dart/2.13 (dart:io)'}\\n    }\\n    return headers\\n    }\\nfunction isPic(str){\\n    return /\\\\.(gif|jpg|jpeg|png|GIF|JPG|PNG)$/.test(str);\\n}\\nfunction isVideo(playUrl,rechange){\\n    //注意.php不可以被排除否则融兴解析不了 |.php$\\n    //如果是播放地址就直接返回地址加上UA，不是的话就返回false\\n    rechange=typeof(rechange)===\\\"function\\\"?rechange:function(playUrl){return playUrl};\\n    let exceptWords = '.js$|.css$|.ts$|.html$|.htm$|.gif$|.jpg$|.jpeg$|.png$|.ico$|.svg$|.txt$'.split('|').map(it=>'\\\\\\\\'+it).join('|');\\n    var exceptKeys = new RegExp(exceptWords);\\n    let exceptWords1 = 'referer=|url='.split('|').map(it=>it).join('|');\\n    var exceptKeys1 = new RegExp(exceptWords1);\\n    let replaceWords = 'playm3u8|m3u8\\\\.tv'.split('|').map(it=>it).join('|');\\n    let replaceKeys = new RegExp(replaceWords,'g');\\n    let videoWords = \\\".mp4$|.m3u8$|.flv$|.avi$|.3gp$|.mpeg$|.wmv$|.mov$|rmvb|.dat$|.mp3$|.m4a$|qqBFdownload|mime=video%2F|mime_type=video_|type=m3u8|pt=m3u8\\\".split('|').map((it)=>{\\n        //type=mp4\\n        if(it.startsWith(\\\".\\\")){\\n            return '\\\\\\\\'+it\\n        }else{\\n            return it\\n        }\\n    }).join(\\\"|\\\");\\n    let videoKeys = new RegExp(videoWords);\\n    let pUrl=playUrl.split(\\\";\\\")[0];\\n    let pUrl2=playUrl.split(\\\";\\\")[0].split(\\\"&\\\")[0].split(\\\"?\\\")[0];\\n    if((videoKeys.test(pUrl)||videoKeys.test(pUrl2))&&!exceptKeys1.test(pUrl.replace(pUrl.split(\\\"?\\\")[0],''))){\\n        let tips = '检测到疑似多媒体的地址:';\\n        try{\\n            log(\\\"js中\\\"+tips+pUrl);\\n            // log(pUrl.replace(pUrl.split(\\\"?\\\")[0],''));\\n            // log(exceptKeys1);\\n        }catch (e) {\\n            fy_bridge_app.log('x5中'+tips+pUrl);\\n            fy_bridge_app.log(\\\"分割问号后:\\\"+pUrl.replace(pUrl.split(\\\"?\\\")[0],''));\\n            // fy_bridge_app(exceptKeys1);\\n        }\\n    }\\n    // log('1:'+(videoKeys.test(pUrl)||videoKeys.test(pUrl2)||videoKeys.test(pUrl.replace(replaceKeys,\\\"\\\").split(\\\"&\\\")[0].split(\\\"?\\\")[0])));\\n    // log('2:'+!exceptKeys.test(pUrl.split(\\\"?\\\")[0].split('&')[0]));\\n    // log('3:'+!exceptKeys1.test(pUrl.replace(pUrl.split(\\\"?\\\")[0],'')));\\n    if ((videoKeys.test(pUrl)||videoKeys.test(pUrl2)||videoKeys.test(pUrl.replace(replaceKeys,\\\"\\\").split(\\\"&\\\")[0].split(\\\"?\\\")[0]) )&& !exceptKeys.test(pUrl.split(\\\"?\\\")[0].split('&')[0])&&!exceptKeys1.test(pUrl.replace(pUrl.split(\\\"?\\\")[0],''))) {\\n        if(!(/User-Agent|Referer@/.test(playUrl))){\\n            if(/lecloud\\\\.com|bilivideo/.test(playUrl)){\\n                playUrl+=\\\";{Referer@https://www.bilibili.com/&&User-Agent@Mozilla/5.0}\\\";\\n            }else if(/ixigua\\\\.com/.test(playUrl)){\\n                playUrl+=\\\"#.mp4;{Referer@https://www.ixigua.com/&&User-Agent@Mozilla/5.0}\\\";\\n            }\\n            else if(/mgtv\\\\.com|byteamone/.test(playUrl)){\\n                playUrl+=\\\";{User-Agent@Mozilla/5.0}\\\";\\n            }else if(/ptwo\\\\.wkfile\\\\.com/.test(playUrl)&&/url=/.test(playUrl)){\\n                playUrl=playUrl.split(\\\"url=\\\")[1]+\\\";{Referer@https://fantuan.tv}\\\"\\n            }else{\\n                playUrl=rechange(playUrl);\\n            }\\n            // 处理大师兄之类的app\\n            // else{\\n            //     playUrl+=\\\";{User-Agent@Mozilla/5.0}\\\";\\n            // }\\n        }\\n        return playUrl+\\\"#isVideo=true#\\\";\\n    }else{\\n        return false;\\n    }\\n}\\nfunction comParse(parStr,ej,onlyback,html){\\n    //列表，标题，图片，描述，链接，内容\\n    ej = ej||false;//有二级\\n    onlyback=onlyback||false;//只返回数据\\n    html = html||getResCode();\\n    html = typeof(html)==='string'?html:html.html;\\n    return $.toString((parStr,ej,onlyback,html,isPic)=>{\\n        let t=parStr.split(\\\";\\\");\\n        let d=[];\\n        // let list=pdfa(getResCode(),t[0]);\\n        let list=pdfa(html,t[0]);\\n        let lazy = $('').lazyRule(()=>{\\n            const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            return lazyParse(input)\\n        });\\n        for(let i in list){\\n            let _pic = t[2]?pd(list[i],t[2]):'';\\n            if(isPic(_pic)&&!/@Referer=/.test(_pic)){\\n                _pic+='@Referer='\\n            }\\n            let it={\\n                title:pdfh(list[i],t[1]),\\n                pic_url:_pic,\\n                desc:pdfh(list[i],t[3]),\\n                url:ej?pd(list[i],t[4]):pd(list[i],t[4])+lazy\\n            };\\n            if(t.length>5){//内容，用于搜索\\n                it.content=pdfh(list[i],t[5])\\n            }\\n            d.push(it);\\n        }\\n        if(onlyback){\\n            return d\\n        }else{\\n            setResult(d)\\n        }\\n    },parStr,ej,onlyback,html,isPic)\\n}\\n\\nfunction lazyParse(playUrl,ms,tm,rechange){\\n    // log('调用仓库免嗅探传参超时为:'+ms);\\n    tm = parseInt(tm)||5000;\\n    const {isVideo,getHeaders} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n    let realUrl = isVideo(playUrl,rechange);\\n    //log(realUrl);\\n    if(typeof(realUrl)=='string'){//bool值就是失败\\n        try{\\n            let rurl=realUrl.split(\\\";\\\")[0].split(\\\"#\\\")[0];\\n            return JSON.parse(request(rurl,{timeout:tm})).url\\n        }catch(e){\\n            return realUrl\\n        }\\n        //return realUrl\\n    }\\n\\n    //log(\\\"访问超时:\\\"+tm);\\n    log(\\\"尝试道长仓库x5免嗅:\\\"+playUrl);\\n    clearVar(\\\"_x5jxUrl\\\");\\n    let bad=$(\\\"网络不佳或者疑似对方网站挂了，你要查看其网页吗？\\\").confirm((playUrl)=>{\\n        log(\\\"网站看起来挂了:\\\"+playUrl);\\n        return playUrl\\n    },playUrl);\\n    try{\\n        // var back=request(playUrl,{headers: getHeaders(playUrl),timeout:tm});\\n        var back=fetch(playUrl,\\n            {headers: {\\n                    'User-Agent': PC_UA\\n                }});\\n        if(!back){\\n            log(\\\"网站\\\"+playUrl+\\\"确实啥也没返回\\\");\\n            return bad\\n        }else if(/#EXTINF/.test(back)){\\n            //let lcache=\\\"/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/video.m3u8\\\";\\n            //writeFile(lcache,back);\\n            //return lcache+\\\"##\\\"+playUrl+\\\"#isVideo=true#\\\"\\n            playUrl=cacheM3u8(playUrl);\\n            return playUrl\\n        }else if((!/触发了防盗链|未授权|接口防盗/.test(back))&&(!/http|url/.test(back))&&(!/msg|code|html/.test(back))){\\n            log(back);\\n            return 'toast://疑似对方数据加密了，具体数据看日志'\\n        }\\n    }catch(e){\\n        log(e.message);\\n        return bad\\n    }\\n    try {\\n        back=JSON.parse(back);\\n        let realUrl=back.url;\\n        if(typeof(realUrl)==\\\"undefined\\\"||!realUrl){\\n            log(back);\\n            return \\\"toast://道长仓库解析失败！返回播放地址为空\\\"\\n        } else if(typeof(isVideo(realUrl,rechange))=='string'){\\n            return isVideo(realUrl,rechange);\\n        }else{\\n            return realUrl+\\\"#isVideo=true#\\\";\\n        }\\n        //else{\\n        //realUrl+=\\\";{User-Agent@Mozilla/5.0}\\\";\\n        // }\\n    }catch (e) {\\n        log(\\\"检测到解析口非json错误:\\\"+e.message+',开始x5免嗅探');\\n        let ms = parseInt(ms)||5000;\\n        let max_count=Math.ceil(ms/250);\\n        log(\\\"本次嗅探超时:\\\"+ms+\\\"共计待抓包:\\\"+max_count+\\\"次\\\");\\n        showLoading('嗅探中，若失败就重装x5...');\\n        let _x5 = $.toString((isVideo,rechange,playUrl,max_count,PC_UA)=>{\\n            try {\\n                if(typeof(fba)=='undefined'||!fba){\\n                    var fba = fy_bridge_app;\\n                }\\n                try {\\n                    if(typeof(request)=='undefined'||!request){\\n                        eval(fba.getInternalJs());\\n                    }\\n                }catch (e) {\\n                    fba.log(e.message);\\n                }\\n                fba.putVar(\\\"_x5jxUrl\\\",playUrl);\\n                if(window.count == null){\\n                    window.count=1;\\n                }\\n                let text=document.querySelector(\\\"body\\\").innerText;\\n                if(/触发了防盗链|未授权|接口防盗/.test(text)&&window.count===1){\\n                    fba.log(\\\"检测到有授权，开始过授权\\\");\\n                    //location.reload();\\n                    location.href=fba.getVar(\\\"_x5jxUrl\\\");\\n                }\\n                window.count++;\\n                // fba.log('count:'+window.count+',max_count:'+max_count);\\n                if( window.count >= max_count){\\n                    fba.log(\\\"超过\\\"+max_count*250+\\\"毫秒未获取到资源地址，跳到源网页,以下是加载过的地址\\\");\\n                    let text=document.querySelector(\\\"body\\\").innerText;\\n                    // fba.log(text);\\n                    fba.log(JSON.stringify(_getUrls()));\\n                    return fba.getVar(\\\"_x5jxUrl\\\");\\n                }\\n                function muteMe(elem) {\\n                    try {\\n                        elem.pause();\\n                    }\\n                    catch (e) {\\n                    }\\n                }\\n                var videos = document.querySelectorAll(\\\"video\\\"), audios = document.querySelectorAll(\\\"audio\\\"), v2 = document.querySelectorAll(\\\"embed\\\"), v3 = document.querySelectorAll(\\\"#player\\\");\\n                try {\\n                    [].forEach.call(videos, function (video) {\\n                        muteMe(video);\\n                    });\\n                } catch (e) {}\\n                try {\\n                    [].forEach.call(audios, function (audio) {\\n                        muteMe(audio);\\n                    });\\n                } catch (e) {}\\n                try {\\n                    [].forEach.call(v2, function (v) {\\n                        muteMe(v);\\n                    });\\n                } catch (e) {}\\n                try {\\n                    [].forEach.call(v3, function (v) {\\n                        muteMe(v);\\n                    });\\n                } catch (e) {}\\n                var urls = _getUrls();\\n                // fba.log(JSON.stringify(urls));\\n                try {\\n                    for(let i in urls) {\\n                        let u=urls[i];\\n                        try{u=decodeURIComponent(u);}catch(e){\\n                            u=unescape(u);\\n                        }\\n                        //\\n                        if(/url=http/.test(u)){\\n                            u = u.split(\\\"url=\\\").slice(-1)[0];\\n                            fba.log(\\\"url分割:\\\"+u);\\n                        }else if(/url=\\\\//.test(u)&&/\\\\.m3u8/.test(u)){\\n                            let host = u.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                            u = host+u.split(\\\"url=\\\").slice(-1)[0];\\n                            fba.log(\\\"url分割:\\\"+u);\\n                        }\\n                        else if(/vid=http/.test(u)){\\n                            u = u.split(\\\"vid=\\\").slice(-1)[0];\\n                            fba.log(\\\"vid分割:\\\"+u);\\n                        }else if(/vid=\\\\//.test(u)&&/\\\\.m3u8/.test(u)){\\n                            let host = u.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                            u = host+u.split(\\\"vid=\\\").slice(-1)[0];\\n                            fba.log(\\\"vid分割:\\\"+u);\\n                        }\\n                        else if(/\\\\?(.*)=http/.test(u)&&/\\\\.m3u8/.test(u)){\\n                            u = \\\"http\\\"+u.split(/\\\\?(.*)=http/).slice(-1)[0];\\n                            fba.log(\\\"其他分割:\\\"+u);\\n                        }\\n                        //|index\\\\.m3u8$\\n                        else if(/\\\\/1\\\\.m3u8/.test(u)){\\n                            continue;\\n                        }\\n                        u=u.replace(/&from=.*|&next=.*|&jump=.*/,'');\\n                        let realUrl = isVideo(u,rechange);\\n                        if(typeof(realUrl)=='string'){\\n                            fba.log(\\\"仓库x5免嗅结果:\\\"+realUrl);\\n                            //fy_bridge_app.setWebUa(PC_UA);\\n                            return realUrl\\n                        }\\n                    }\\n                }catch (e) {\\n                    fba.log(e.message)\\n                }\\n            }catch (e) {\\n                // fy_bridge_app.log('x5大范围错误:'+e.message);\\n                alert('x5大范围错误:'+e.message);\\n                return 'toast://报错结束x5'\\n            }\\n        },isVideo,rechange,playUrl,max_count,PC_UA);\\n        const lsg=$.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\");\\n        let useWeb=lsg.getItem(\\\"通免\\\",\\\"X5\\\")===\\\"WEB\\\";\\n        //log(\\\"仓库使用web通免替代x5:\\\"+useWeb);\\n        let ruleHead=useWeb&&parseInt(getAppVersion())>=2339?\\\"webRule://\\\":\\\"x5Rule://\\\";\\n        let x5Url = ruleHead+playUrl+ '@' +_x5;\\n        return x5Url\\n    }\\n}\\n\\nfunction x5ParsePro(x5list,x5Timeout,isVideo){\\n    let bpath = 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/海阔嗅探器.html';\\n    let bcode = fetch(bpath);\\n    if(!bcode||!/fy_bridge_app/.test(bcode)){\\n        log('本地未安装嗅探器，开始安装');\\n        const {api} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n        let html = fetch(api.host+'/rulelist.json?id=2055');\\n        if(/海阔视界/.test(html)){\\n            writeFile(bpath,html);\\n        }else{\\n            writeFile(bpath,fetch('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/html/getVideo.html'))\\n        }\\n    }\\n    x5Timeout = parseInt(x5Timeout)||5000;\\n    let max_count=(x5Timeout/250); //根据超时自动计算了可执行的次数\\n    putVar('x5List',JSON.stringify(x5list));\\n    let _x5 = $.toString((isVideo, max_count,x5Timeout) => {\\n        //初始化fba和requst\\n        if (typeof (fba) == 'undefined' || !fba) {\\n            var fba = fy_bridge_app;\\n        }\\n        try {\\n            if (typeof (request) == 'undefined' || !request) {\\n                eval(fba.getInternalJs());\\n            }\\n        } catch (e) {\\n            fba.log(e.message);\\n        }\\n        //------------------\\n        try {\\n            if (window.count == null) {\\n                window.count = 1;\\n            }\\n            let text=document.querySelector(\\\"body\\\").innerText;\\n            if(/触发了防盗链|未授权|接口防盗/.test(text)&&window.count==1){\\n                location.reload();\\n                fba.log(\\\"检测到有授权，开始过授权\\\");\\n            }\\n            window.count++;\\n            // fba.log('count:' + window.count + ',max_count:' + max_count);\\n            if (window.count >= max_count) {\\n                fba.clearVar('x5List');\\n                fba.hideLoading();\\n                let fmsg = '道长仓库通免解析失败,原因:超时'+x5Timeout+'毫秒';\\n                fba.log(fmsg);\\n                return 'toast://'+fmsg;\\n            }\\n        }catch (e) {\\n            fba.log(e.message);\\n        }\\n\\n        function muteMe(elem) {\\n            try {\\n                elem.pause();\\n            } catch (e) {\\n            }\\n        }\\n\\n        var videos = document.querySelectorAll(\\\"video\\\"), audios = document.querySelectorAll(\\\"audio\\\"),\\n            v2 = document.querySelectorAll(\\\"embed\\\"), v3 = document.querySelectorAll(\\\"#player\\\");\\n        try {\\n            [].forEach.call(videos, function (video) {\\n                muteMe(video);\\n            });\\n        } catch (e) {\\n        }\\n        try {\\n            [].forEach.call(audios, function (audio) {\\n                muteMe(audio);\\n            });\\n        } catch (e) {\\n        }\\n        try {\\n            [].forEach.call(v2, function (v) {\\n                muteMe(v);\\n            });\\n        } catch (e) {\\n        }\\n        try {\\n            [].forEach.call(v3, function (v) {\\n                muteMe(v);\\n            });\\n        } catch (e) {\\n        }\\n        var urls = _getUrls();\\n        try {\\n            for (let i in urls) {\\n                let u=urls[i];\\n                //u=decodeURIComponent(u);\\n                try{u=decodeURIComponent(u);}catch(e){\\n                    u=unescape(u);\\n                }\\n                if(/url=http/.test(u)){\\n                    u = u.split(\\\"url=\\\").slice(-1)[0];\\n                }else if(/vid=http/.test(u)){\\n                    u = u.split(\\\"vid=\\\").slice(-1)[0];\\n                }else if(/\\\\?(.*)=http/.test(u)){\\n                    u = \\\"http\\\"+u.split(/\\\\?(.*)=http/).slice(-1)[0];\\n                    //fba.log(\\\"其他分割:\\\"+u);\\n                }else if(/\\\\/1\\\\.m3u8$/.test(u)){\\n                    continue;\\n                }\\n                u=u.replace(/&from=.*|&next=.*|&jump=.*/,'');\\n                let realUrl = isVideo(u);\\n                if (realUrl) {\\n                    fba.log(\\\"仓库x5免嗅结果:\\\" + realUrl);\\n                    fba.clearVar('x5List');\\n                    return realUrl\\n                }\\n            }\\n        } catch (e) {\\n            fba.log(e.message)\\n        }\\n    }, isVideo, max_count,x5Timeout);\\n    const lsg=$.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\");\\n    let useWeb=lsg.getItem(\\\"通免\\\",\\\"X5\\\")===\\\"WEB\\\";\\n    //log(\\\"仓库使用web通免替代x5:\\\"+useWeb);\\n    let ruleHead=useWeb&&parseInt(getAppVersion())>=2339?\\\"webRule://\\\":\\\"x5Rule://\\\";\\n    return ruleHead+bpath+'@' + _x5;\\n}\\n\\nfunction LazyParseFast(playUrlList,getTimeout,x5Timeout){\\n    const {isVideo,getHeaders,x5ParsePro} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n    // log('开始执行'+playUrlList.length+'个地址的批量嗅探:'+playUrlList);\\n    log('开始执行'+playUrlList.length+'个地址的批量嗅探');\\n    let playUrls = playUrlList.map((it)=>{\\n        return {\\n            url:it.split(\\\";\\\")[0],\\n            options: {\\n                headers: {\\n                    //\\\"User-Agent\\\": \\\"Dart/2.13 (dart:io)\\\",\\n                    \\\"User-Agent\\\":\\\"Mozilla/5.0\\\"\\n                },\\n                timeout: getTimeout\\n            }\\n        }\\n    });\\n    let bhtml = batchFetch(playUrls);\\n    let videos = [];\\n    let x5list = [];\\n    for(let i in bhtml){\\n        let order = parseInt(i)+1;\\n        let tname=order+'号解析网址:';\\n        //log(tname);\\n        let turl=playUrlList[i].split(\\\";\\\")[0];\\n        let jname=playUrlList[i].split(\\\";\\\").length>1?playUrlList[i].split(\\\";\\\")[1]:\\\"\\\";\\n        tname+=jname;\\n        let backcode = bhtml[i];\\n        if((!/url|http/.test(backcode))&&(!/#EXTINF/.test(backcode))){\\n            log(tname+turl+'有问题,可能加密或者挂了');\\n            continue;\\n        }else if(/#EXTINF/.test(backcode)){\\n            //let lcache=\\\"/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/video_\\\"+tname+\\\".m3u8\\\";\\n            //writeFile(lcache,backcode);\\n            //videos.push(lcache);\\n            let pUrl=cacheM3u8(turl);\\n            videos.push(pUrl);\\n            continue;\\n        }\\n        try {\\n            let url = JSON.parse(backcode).url;\\n            if(/^http/.test(url)){\\n                let realVideo = isVideo(url);\\n                if(typeof(realVideo)=='string'){\\n                    log(tname+'已解析出视频:'+realVideo);\\n                    if(jname){\\n                        realVideo+=\\\"★\\\"+jname\\n                    }\\n                    videos.push(realVideo);\\n                }else{\\n                    log(tname+'解析出不知道什么东西:'+url);\\n                    url+=\\\"#isVideo=true#\\\";\\n                    if(jname){\\n                        url+=\\\"★\\\"+jname\\n                    }\\n                    videos.push(url);\\n                }\\n            }else{\\n                log(tname+'为json接口且无返回视频地址数据:'+playUrlList[i]+'\\\\n'+backcode);\\n            }\\n        }catch (e) {\\n            log(tname+'为x5接口,加入x5嗅探列表');\\n            x5list.push(playUrlList[i]);\\n        }\\n    }\\n    // log(videos);\\n    if(videos.length>0){\\n        if(getVar('dp.cacheVideo','true')==='true'&&parseInt(getAppVersion())>=2255)\\n        {\\n            log(\\\"尊敬的魔断用户，视频缓存已启用，请尽情享受看剧时光\\\");\\n            let videosCache=videos.map((it)=>{\\n                let headers={};\\n                if(it.split(\\\";\\\").length>1){\\n                    let head = it.split(';')[1];\\n                    if(/@/.test(head)&&/{|}/.test(head)){\\n//head = head.replace(/{|}/g,'');\\n                        head = head.split(\\\"{\\\")[1].split(\\\"}\\\")[0];\\n                        head = head.split('&&');\\n                        for(let i in head){\\n                            let key = head[i].split('@')[0];\\n                            let value =head[i].split('@')[1].replace(/;/,'；；');\\n                            headers[key] = value;\\n                        }\\n                    }\\n                }\\n                return {\\n                    url:it.split(\\\";\\\")[0].split(\\\"★\\\")[0],\\n                    options:{\\n                        headers:headers\\n                    }\\n                }\\n            });\\n            var data=batchCacheM3u8(videosCache);\\n            data=data.map((it,id)=>{\\n                let extra=\\\"\\\";\\n                if(videos[id].split(\\\";\\\").length>1){\\n                    extra=\\\";\\\"+videos[id].split(\\\";\\\")[1];\\n                }else if(videos[id].split(\\\"★\\\").length>1){\\n                    extra=\\\"★\\\"+videos[id].split(\\\"★\\\")[1];\\n                }\\n\\n                if(it+\\\"\\\"!=\\\"null\\\"){\\n                    return it+extra\\n                }else{\\n                    return videos[id]\\n                }\\n            });\\n            //log(data);\\n            return data\\n            //return videos\\n        }else{\\n            return videos\\n        }\\n    }\\n    log('共有'+x5list.length+'个x5地址进行轮流嗅探');\\n    //没有的话就开始依次x5嗅探\\n    showLoading('嗅探中，若失败就切换web嗅探...');\\n    return x5ParsePro(x5list,x5Timeout,isVideo);\\n}\\nvar lazy=$('').lazyRule(()=>{\\n    try{\\n        realUrl=input;\\n        eval(\\\"var config_dp =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n        eval(fetch(config_dp.cj));\\n        log(input+'->正在断插魔改版解析...');\\n        // 加入超时设置，建议在首页设置\\n        return aytmParse(realUrl)\\n    }catch(e){\\n        return input\\n    }\\n});\\n$.exports.isPic=isPic;\\n$.exports.isVideo=isVideo;\\n$.exports.comParse=comParse;\\n$.exports.getHeaders=getHeaders;\\n$.exports.lazyParse=lazyParse;\\n$.exports.x5ParsePro=x5ParsePro;\\n$.exports.LazyParseFast=LazyParseFast;\\n$.exports.lazy=lazy;\"},{\"name\":\"任务仓库接口\",\"path\":\"taskCall\",\"rule\":\"js:\\nString.prototype.strip = function () { return this.replace(/(^\\\\s*)|(\\\\s*$)/g, \\\"\\\"); };\\nfunction task_req(task_api,task) { // 通用发送仓库post调用任务请求\\n    const {getFile} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let houseFile = getFile||false;\\n    if(!houseFile){\\n        setItem('is_house_vip', 'false');\\n    }\\n    let house_data = houseFile();\\n    let result = request(task_api, {\\n        headers: {\\n            'content-type': 'application/json'\\n        },\\n        body: JSON.stringify({\\n            \\\"params\\\": {\\n                \\\"data\\\": {\\n                    \\\"type\\\": task.mode||'run',\\n                    \\\"func\\\": task.func||'',\\n                    \\\"params\\\": task.params||[]\\n                },\\n                \\\"auth\\\": {\\n                    \\\"name\\\": house_data.username||\\\"\\\",\\n                    \\\"password\\\": house_data.password||\\\"\\\"\\n                }\\n            }\\n        }),\\n        method: 'POST'\\n    });\\n    return JSON.parse(result).result;\\n}\\n\\nfunction task_upload(task){ // 通用任务发布新增及修改功能\\n    const {api,getFile} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let houseFile = getFile||false;\\n    if(!houseFile){\\n        setItem('is_house_vip', 'false');\\n    }\\n    let api_url = api.host+'/hikerule/task/add';\\n    let house_data = houseFile();\\n    let result = request(api_url, {\\n        headers: {\\n            'content-type': 'application/json'\\n        },\\n        body: JSON.stringify({\\n            \\\"params\\\": {\\n                \\\"data\\\": {\\n                    \\\"name\\\": task.name,\\n                    \\\"pycode\\\": task.pycode,\\n                    \\\"note\\\": task.note,\\n                    \\\"test_code\\\": task.test_code,\\n                },\\n                \\\"auth\\\": {\\n                    \\\"name\\\": house_data.username||\\\"\\\",\\n                    \\\"password\\\": house_data.password||\\\"\\\"\\n                }\\n            }\\n        }),\\n        method: 'POST'\\n    });\\n    return JSON.parse(result).result;\\n}\\n\\nfunction task_call(id,func,params){\\n    const {api} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let task_api = api.host+'/hikerule/task/run/'+id;\\n    let task = {\\n        mode:'call',\\n        func:func,\\n        params:params||[]\\n    };\\n    return task_req(task_api,task);\\n}\\n\\nfunction task_rename(id,new_task_name){\\n    const {api,getFile} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let houseFile = getFile||false;\\n    if(!houseFile){\\n        setItem('is_house_vip', 'false');\\n    }\\n    let house_data = houseFile();\\n    let task_api = api.host+'/hikerule/task/rename/'+id;\\n    task_api = task_api+'?name='+house_data.username+'&password='+house_data.password+'&task_name='+new_task_name;\\n    try {\\n        let result = JSON.parse(fetch(task_api,{}));\\n        if(result.status==0){\\n            return  result.detail\\n        }else{\\n            return result.result+''+result.detail\\n        }\\n    }catch (e) {\\n        log(e.message);\\n        return ''+e.message\\n    }\\n}\\n\\nfunction task_change_state(id){\\n    const {api,getFile} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let houseFile = getFile||false;\\n    if(!houseFile){\\n        setItem('is_house_vip', 'false');\\n    }\\n    let house_data = houseFile();\\n    let task_api = api.host+'/hikerule/task/change_state/'+id;\\n    task_api = task_api+'?name='+house_data.username+'&password='+house_data.password;\\n    try {\\n        let result = JSON.parse(fetch(task_api,{}));\\n        if(result.status==0){\\n            return  result.detail\\n        }else{\\n            return result.result+''+result.detail\\n        }\\n    }catch (e) {\\n        log(e.message);\\n        return ''+e.message\\n    }\\n}\\n\\nfunction task_run(id){\\n    const {api} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let task_api = api.host+'/hikerule/task/run/'+id;\\n    let task = {};\\n    return task_req(task_api,task);\\n}\\n\\n$.exports.taskCall = task_call;\\n$.exports.taskRun = task_run;\\n$.exports.taskReq = task_req;\\n$.exports.taskUpload = task_upload;\\n$.exports.taskRename = task_rename;\\n$.exports.taskChangeState = task_change_state;\"},{\"col_type\":\"movie_3\",\"name\":\"全局储存\",\"path\":\"localStorage\",\"rule\":\"let localStorage = (function() {\\n    evalPrivateJS(\\\"jwUKwNTiPGcWSLCXB5XtAXwb6LQbVyHD+0XJ7l07ce0=\\\");\\n    //pathto=undefined;\\n    evalPrivateJS(\\\"4C0YxRYnGCYkgFRXtpl/Cz5zL5hh4jCCztb+ng+WokymQ8oUrzS9lA8yxC5aFadnSEmyHKMbraflRqXCnNRHDlk6ue8yHTO16lBPrpwgs5jf0PhrAtoTJIE0ZHn9mKaQ4Jd2erqb4I55beWIeugKsDs211SzINQ5yJgSh1dVuNzzxRGJg40FmTuVmXVfN1xg2WIGHBEmkVnGxmORhPONA+Q5VwPmdp41/hze3eIsUvho7VCBgK4raJmPalIRBBVlCVgn8FkWmfKqZo+VW+oBcH7hrcrsSlCSjBangT/7syWHxKYhehU0kaMYjnWFg1Em0cmNRtomCsHz1B8q32OeQHoawdWxzKOaMHOXDBjRojA8E/ah0WROyziqRSxl/m8dhBd0f9phYz/5SU/zJD52X/9EC16WVVdpSW33akRHRslPpRlTWF9+AyRmRw0eZOEs1o9QMPAQUfAxbYyFHgztw/O2dJRpHyTmiBiaaqTcivx6v9zyvBz04wI1AaSCui+dTuU3lu5xdEt3Ajt6Z3iDXOVcEP0EDF7474PQU6JEZuwe97Sch4bi1wB1XHZSfItdlYYoGed3LLpbmDAIRciv0rAop8VmQcTt2K3Lfh1RDYY0YtvRcH49OvpDRH/xa5Fc8MY3DrFoA7qcoF4eCgiVBfBgJR68+LpQK7tOkg8k9ec+3NSxJThcl8d6yNwxT9Tk17zeJgd6MoyYZIpWQLlF6YvbOdEWhjmnA78wC0hWz+Xm6hQMSqtFw+bhFf7cBGU3aatPFmdCY2EdXfh0IYW85wdOyMfiwW7/vVTp9iE00I3F09wGHkGKhVbLueAkYe7zzJXR7thaFor6H7qLmJjbRQk9evNtBQXNR7DifiXuQf2lt7nOH80SWm1fDHHzjmPsNIps2TXGT+iwVV69g/tWipVQ6D8BTx+cCQp47nmTIrY+qN4kh2FYh5LlwXdgIyy1VIuC3x053ewAIIUmlY9niEpqYt+1fFPXOCtCGtYbSd37vVR1EOj2k5Gu/+9JWg2qvwl1twelg1J0txarIi4kTbTrvrnFLN92pofpZQUfoWo4ce7HWNdbu4JKEraLQUfdfGEPd1TIufuuRVa39eq9GZySDuBL60MPdldxKw1zo+fB5ZY+YMj3LL2gGtDbs98+AsRV9LJWmUmsx91hmJtFUMWD3xnj8HMZWs0NPlCFUr9485KqTpo5kRzGfF+k/Nl2Jzrv5cvkqtUnLgKpXEOj/se/oDzOArQKI5TNUbvYwcwcdjjMSfjK68Krwhs+n6SmWZ4ZdgRHgAK5MoFi3XmLV47P3vSRWu5zyEsMk4y3uuCFiuRPRlu4Q5pJvuOem7H7ULiIhCemv5DgkGtDL1cGL4EQhYRB6ISzVvsb2EaP9wQE6DVRnM7O+pnSzet6lzp3pFdGnbox1LRfC60utXZ+CjIm4iEMmtbB2N5zDShGbeM3XUbJQdCBis8XIrhh2biB5hBCVwn3Y3ett7GDPVtoi1GRjz+JbgM+YR928KbdWS5tFaMM3Kj3Xv6otIxzMBnDC9uW3d+IXx6vLPJ0JRuh3yP7pTla6c3iR4p9nWYDqJ+ZSmprHFnDOzsLWmFjapje/MqwMJd6Tk3nAWwicMOPuYpMyqIF04fl4mqgtsHLSMWRRNHPZjETQ9gRmeDYe6aRtlW02qL2olDENqLQMtAdoirNWRcP9VL3Td8HaUO6fSlGNabMakJD/00XChOSUOIP+7fM7V0/l1bLWPtEz1i7LygTV7pdGoDntqSCEnJrByhBAzLRg5QIc9438IhKmyfn0/3awoD1Ir780eyp/XcI6xNcw6Tv/ETfHg0e7iYC0UYcJIE5QUXv0s+YoGIEq5GIzKub8HNjSTUpsvnkVx+dbe2jRn3Yb9W7JCZ5YS6F5MyUVspjMD7NYc+DWjUL2b2sVyAfeYpC8Uhah9tumavbBv7a3a9kgFbq58lrHxzY7iJQVigzq3e1a2BSb0PcW1aJ8BD7NkNphKYayTxykgwilERL8jqqBEniHVdBxDJYLb+Xw3alLmltuTEV6KGtBntBX+yz36RPDMyGIKe+3fzcxfnCDn20ModVVkVNozPqMXZ0G5L4aLTAQakYKUjsVMQjAhQkTlHBeO/aLPx9sxl++j1Z5rLgG12TN4XJ1eicvw4AVE58Loraq0QiE0cS7PH1pbrZWrft7LYGiyBShor7+0jioUh1pdWq2qMYLqeMEeuCROQt57mFrOjyPH49qp97cWOrgeg2WyfWSDGQPje5+P0yQoCpD/D3RAMuWmb9wlBtcq2j8WJPt91E3kKawuQIyvd2r2Ujx4+HTNtVKb9kMLOO85I65bNGBH+4irSy5gQYlE26A2cSGIcLKQRlvJoMna7L/9wyry4HzOrzkrAvLdgsSNlYjpHQERiOI80sJ5jNCCnfw013F+A+sAfLmyS/BDLNQ1qaQ3p6h8/JqAfhX5OGHgSiRVOCEjuaDB/MwZNCu3QL9ehhoAj7uOf8Pkr3mIjbhh9Hijsjx191+0e2JQrFa01AVJKEVtuPtIc2h/1pPKMvyenxjTO2OxPnjjt+84nIKKhxDJ/ghPt7iv8PmTJ0lKKyPRssl8f/QdHdxupb6jTsI6UKmz9Y46PMBuD6P3wh8qp36O6oibNDiQd1sE10vJh9z1FysKIe8EqMpnNdEmG2TfEBxRpmQrhKEqee0p6+a6sQo8cVlRJkKQAYKawcaNES5Xc6dQY5nqeiq8sUizf1spfHeHelDu1M6BRXuCjFafXhz8i3lPWgYqVpfx13igVCRf47UH652yLnsmepCBWgyBTWAcOyF1Qx8YGtZnob1TN+6xEwzpcWVy7QO9P92sKA9SK+/NHsqf13COt0JHCtTV1OlTQW+JAKyxe1Hl7+s95z3KCgFKQS+3As1JV7Na+g+LCR2Ievu8d5D0L7GwoDreUv4374LRaFkNsHOqWbU9nhQjdMVr7a/i8O/4hbptaSzqqkgYFiNFU/omW5qwIz7sp4nscITRE3gua6bzklMZ8ECn1iqAWt0a6geki5DaL8qYapTCChjlWsExqFuxiWP35TUCddEd8ACbMGs+gQFyDOozfBDG17dZO0mCwW+PzCL2jbICDNai5/jm1Qr6ML56jzUaIDz0GLPTSaex1UDDwkQ9o7mXWC0R7jWnzbkHRWcomVbWmGqL1rjdoacs/R9ujqUuBA6A5VL/qkQ1xHL42EXooprC8wrrfR68zMMFxOwU7CYHJ7bhG/Q4rNsXDBcMo1Adiq9LXbXm/QJj0u/jgZGssz0nnKKUFJcxzuANK96zWwf1DXasUcOoEuEatm1rmP5wrBJmW/ZwT6aBBiR2OSJ0xr8tQ6ObmdKjyb+1eEXb1437R2IdhDUdk5PRztH2YFt2pmuL4/LmILFAvPdiyMtDHNj+Kh4sV4MlXbWPrrI97YBOFpFlX+gnewKKfFZkHE7dity34dUQ2Gne6sAGx1zxyjZv5KBM26lRHF45XqFNJ1RQ3hMymJHsyYNsMO41BWrGv19PA468ecw9HcRN0whjUTgns8ZVaC4hiJsgY07aAEBHm90/uhhjO/Wmb7wuVadhl9RnHeQjpx4gwCrLz5i5s5It1sBwfDb0Fe+PCpLkc+wIINK2Y86kPthR6gJwW75zuoN5C0CAiDwfU73vaAZahzf4VLNlM0U04OtHYBi13YgPoNmGHRelZVEy2KuKVZghD14vSlY+JrMBDdm2y2thFV+BrihL7+fQ5wcYnxGelawDuoSR5+bDDkr6RL40L4xyfAhxlrOn0uA28ghGeWguaWKEv5nBrrveu1ueVy1MvGUYBY+IlEr8NdDNRdmEzXt39kGld86xOfAH/xL1VmugaXOGaPB2qc7WDRkW6k5F6n3PkIzdPXyONKp1DkOg3ocSMZMTs6GKj9C3vODZ6ZQpwNDYLMT+CmEL18GRjXNcZlP/LnhiAIscYTL1+iHWDYvRmvPMwtOHhCnEXIU3FTbP+6QRGA6qydbnneqVhXowcLmbMIz16IC1kwhZj75/M53sKYX2zRgOSTAfNSD/5lZYSNUxJfKTDgiaFEggrCrd+3Cc+chzslI3zDXEKTrvlcX2InC9uH+fsypyHw+AvY2OmBGQMIIc8fE3tNO0gBTVqXsdsE76YwHr29dzQckusuyJsBfSVclrvsNCZ1PQDL8H3cRs3HE9nUkx5bbJYWsPxb825gnEpWU9Z9Ktzvsli7/heOlDKpHxJb1uCrWqf8gRnWmq3zfSSrUXBHSLu62MrkXTjWgapUVxMGkrnzR0E4PMy1bFcyDpEQe15TayWBM1B6jrIG+0DRR9OaCUPwD7exNmjZb9M81us+AIRfyzJPZGmfHuT9SNzFfNuQdFZyiZVtaYaovWuN2irI3zQatKCDnQIXpr0VhG0Gop8c/zroWBoN/aVKmn8skSFvADOjoZAixg6K1y9wFi8peCmimFZ3ZzCVsG6EU9Svlbq5+wn7D6y+dAYdaPms4gwCrLz5i5s5It1sBwfDbz4X4VxqIpcTC9NaYKqA7GKK+aTrZWUwwN21QOtr8eqxSgJ1U9eCOcWXQd+p36Gy4fY+t9c2CsVNbNl1ghxa9bI8U6e6FTd/vvBaq9jrKditq4mNCaiogmfPK6M48UYI8jZMCdd/9C8BqvUj4bYU5byWASEG6BBGdK8Klfi/a4LWt3ivC4u9QBTfb/vCmNJi/QAfabcPG+UsWmsYNRK+g8hMcsuBmhh48NphRvebVQqq6ncKxc1nFHWMW5M6of+z8c1HddnieDP9GaBsq+ysljKslYrt989PY9xsbmkr3X/oCfiFU4NfcOhee++ngW0XpZAVt1I2Qnc1alwbnoNqMMhXIB95ikLxSFqH226Zq9sG/trdr2SAVurnyWsfHNjuIlBWKDOrd7VrYFJvQ9xbVomKqQjuh9dzf2nvVrBzbEF0CZY6izkY/RQY5r9k93/y2NG7o07nMYjOtZYYeNUoik7GbK/HzQl1S7s/FChnt9M6fE0UyuPmttO98hqzxQbteMalMtSce2WLcjyXVGfpqdBkYym4gZByccS6antt4oLdluWSSJsHX1IcXhQy6oJ+Ahjw9hFYwXLHPLoCo3jEliUAK4179wtYtHsO0abLx4+hmtM5Fz7wUVahBA9supOTf/FD4siZMMof5W3vm5DedhqGANlht3mI6RmIhv48QVtneMsUzYC4NDhZD4M5R6p7GXBqcpu3FaEF/0I0e3LceX1HN+iDqKRPuGzvpac/1tsGPIteADxu9OYoap2z3F1CzSg/Uua8l/KEztAKDcvbhNU/YUc2lhgxgfdb4e+P9TZ7RaX82s627u0CbFsfGE/1hLpb5Mc2vk1uDGrdIcbWA6xhpYAHYhEYUl9c75Y/R/0gl6r9+m6cI0BvBY5Aa5NBRc6UMvsO/POw5Ccr79sJziceaV3YwrYEkjp6Ki+OYrGu954AA+dJ9WsvNGBFGMrKAfQ9VUC/ATkJfTloMltDeV5Ao9zkaay3dKAa5/PxAGRDAUcQLDF7uVXbD1vFgE/+RXiwzS5N7cr3aFBdRY7XAmFz/fb0/KSpR8CQ/lokpmM2mltJ9vGPgiqb5nZl9Ku7d2GlgAdiERhSX1zvlj9H/SBujBPoO1fpoOu5F35cdHa5kSFvADOjoZAixg6K1y9wFlj0Ez5ksUW3WU63E7e4qtDUCKWwjjU5f0Fd57VyVzpC6CdCScBjYSzT9rZLVskq61aOWrDDUNKqAQ3+nX/BBW3cQTEcOVdc15ngVXcSS/aK2QFMdiKQlqm15fErJdwqyeza7hflKTiCzUdu5VGlFW9qCt8syHoosA2NzfosJdTdN8bWHnoDr5N25et+p/nvjjOzZRaLYoY/fr/k5hqptOk=\\\");\\n    return $.exports;\\n})();\"},{\"col_type\":\"movie_3\",\"name\":\"编辑公告\",\"path\":\"devInfoEdit\",\"rule\":\"js:\\naddListener('onClose', $.toString(()=>{\\n    putMyVar(\\\"devInfo\\\",''); //清除历史公告\\n}));\\nsetPageTitle('编辑公告');\\n// let {nowJx,MyJiexi,jxsRoute} = MY_PARAMS;\\nconst {color,small,api, getFile,getApi} = $.require(\\\"hiker://page/utiliy\\\");\\n// let houseFile = getFile||false;\\nvar dev_info_url = getApi('infoGetUrl');\\n// log(dev_info_url);\\nvar get_info = function(qq){\\n    qq = qq||'434857005';\\n    let dev_info_url = dev_info_url+qq;\\n    let back_code = JSON.parse(request(dev_info_url));\\n    let dev_info=back_code.result||back_code.detail;\\n    return dev_info;\\n};\\nvar before_refresh = function(){\\n    let dev_set_info = getMyVar(\\\"dev_set_info\\\").split('$$');\\n    let dev_info_url = dev_set_info.slice(-1)[0];\\n    let back_code = JSON.parse(request(dev_info_url));\\n    let dev_info=back_code.result||back_code.detail;\\n    putMyVar(\\\"devInfo\\\",dev_info);\\n    return dev_info\\n};\\nlet d = [];\\nd.push({\\n    title:'编辑公告',\\n    desc:'支持md语法,点击进入学习Md语法\\\\n保存公告按钮在文本框最下面',\\n    col_type:'text_1',\\n    url:'https://www.runoob.com/markdown/md-tutorial.html'\\n});\\nd.push({\\n    title:'返回',\\n    col_type:'text_2',\\n    url:$('#noLoading#').lazyRule(()=>{\\n        back(false);\\n        return 'hiker://empty'\\n    })\\n});\\nif(!getMyVar('devInfo')){\\n    before_refresh();\\n}\\nlet empty = 'hiker://empty';\\nd.push({\\n    title:'阅览查阅',\\n    col_type:'text_2',\\n    // url:$(getMyVar('devInfo')).confirm()\\n    url:$(empty).rule(()=>{\\n        require(\\\"https://gitlab.com/hjdhnx/hiker/-/raw/main/js/marked.min.js\\\");\\n       let devInfo=\\\"\\\";\\n       try{\\n          devInfo=marked.parse(getMyVar('devInfo'));\\n       }catch(e){}\\n        setResult([\\n            {\\n                title:devInfo,\\n                col_type:'rich_text',\\n            }\\n        ]);\\n    })\\n});\\nd.push({\\n    desc: \\\"快来编辑你的公告吧~\\\",\\n    col_type: 'input',\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getMyVar('devInfo', '')||\\\"\\\",\\n        type: \\\"textarea\\\",\\n        height:-1,\\n        onChange: 'putMyVar(\\\"devInfo\\\",input)'\\n    }\\n});\\nd.push({\\n    title:\\\"保存公告\\\",\\n    col_type: 'text_center_1',\\n    url:$('确认保存公告吗？将会与道长仓库服务器通讯').confirm(()=>{\\n        let dev_set_info = getMyVar(\\\"dev_set_info\\\").split('$$');\\n        let input_text = getMyVar('devInfo', '');\\n        if(input_text.length >= 4){\\n            let info_set_url= dev_set_info[2];\\n            let send_data = {\\\"params\\\":\\n                    {\\\"data\\\": {\\\"info\\\": input_text},\\n                        \\\"name\\\": dev_set_info[0],\\n                        \\\"password\\\": dev_set_info[1]}\\n            };\\n            // log(send_data);\\n            let par2 = {headers:{'content-type':'application/json;charset=UTF-8','User-Agent':dev_set_info[3]},body:JSON.stringify(send_data),method:'POST'};\\n            // par2 = JSON.stringify(par2); //x5里面请求才需要编码\\n            try {\\n                let back_ret = request(info_set_url, par2);\\n                back_ret = JSON.parse(back_ret).result;\\n                if(back_ret.status===0){\\n                    // refreshPage();\\n                    return 'toast://保存成功\\\\n'+back_ret.detail;\\n                }else{\\n                    return 'toast://保存失败\\\\n'+back_ret.detail;\\n                }\\n            }catch (e) {\\n                return 'toast://错误\\\\n'+e.message;\\n            }\\n        }else{\\n            confirm({title:'道长提示',content:'虽然你很懒，但是公告至少写4个字吧！'});\\n            return 'hiker://empty'\\n        }\\n    })\\n});\\n\\nsetResult(d);\"}]","icon":"https://lanmeiguojiang.com/tubiao/other/30.svg"}]
